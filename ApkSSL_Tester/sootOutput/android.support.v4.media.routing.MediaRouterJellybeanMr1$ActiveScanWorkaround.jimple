public final class android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround extends java.lang.Object implements java.lang.Runnable
{
    private static final int WIFI_DISPLAY_SCAN_INTERVAL;
    private boolean mActivelyScanningWifiDisplays;
    private final android.hardware.display.DisplayManager mDisplayManager;
    private final android.os.Handler mHandler;
    private java.lang.reflect.Method mScanWifiDisplaysMethod;

    public void <init>(android.content.Context, android.os.Handler)
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround $r0;
        android.content.Context $r1;
        android.os.Handler $r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.UnsupportedOperationException $r4;
        android.hardware.display.DisplayManager $r6;
        java.lang.Class $r7;
        java.lang.Class[] $r8;
        java.lang.reflect.Method $r9;
        java.lang.NoSuchMethodException $r10;

        $r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.os.Handler;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 == 17 goto label0;

        $r4 = new java.lang.UnsupportedOperationException;
        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r4;

     label0:
        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");
        $r6 = (android.hardware.display.DisplayManager) $r3;
        $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.hardware.display.DisplayManager mDisplayManager> = $r6;
        $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler> = $r2;
        $r7 = class "android/hardware/display/DisplayManager";
        $r8 = newarray (java.lang.Class)[0];

     label1:
        $r9 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("scanWifiDisplays", $r8);

     label2:
        $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod> = $r9;

     label3:
        return;

     label4:
        $r10 := @caughtexception;
        goto label3;

        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
    }

    public void run()
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround $r0;
        java.lang.IllegalAccessException $r1;
        boolean $z0;
        android.hardware.display.DisplayManager $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object[] $r4;
        android.os.Handler $r5;
        java.lang.reflect.InvocationTargetException $r8;

        $r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround;
        $z0 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>;
        if $z0 == 0 goto label2;

        $r3 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod>;
        $r2 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.hardware.display.DisplayManager mDisplayManager>;
        $r4 = newarray (java.lang.Object)[0];

     label0:
        virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r2, $r4);

     label1:
        $r5 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>;
        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r0, 15000L);

     label2:
        return;

     label3:
        $r1 := @caughtexception;
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouterJellybeanMr1", "Cannot scan for wifi displays.", $r1);
        goto label1;

     label4:
        $r8 := @caughtexception;
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouterJellybeanMr1", "Cannot scan for wifi displays.", $r8);
        goto label1;

        catch java.lang.IllegalAccessException from label0 to label1 with label3;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label4;
    }

    public void setActiveScanRouteTypes(int)
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround $r0;
        int $i0;
        boolean $z0;
        java.lang.reflect.Method $r2;
        android.os.Handler $r3;

        $r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround;
        $i0 := @parameter0: int;
        $i0 = $i0 & 2;
        if $i0 == 0 goto label2;

        $z0 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>;
        if $z0 != 0 goto label0;

        $r2 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod>;
        if $r2 == null goto label1;

        $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays> = 1;
        $r3 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>;
        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r0);

     label0:
        return;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouterJellybeanMr1", "Cannot scan for wifi displays because the DisplayManager.scanWifiDisplays() method is not available on this device.");
        goto label0;

     label2:
        $z0 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>;
        if $z0 == 0 goto label0;

        $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays> = 0;
        $r3 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>;
        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r0);
        goto label0;
    }
}
