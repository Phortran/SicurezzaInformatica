public class android.support.v4.widget.NestedScrollView extends android.widget.FrameLayout implements android.support.v4.view.NestedScrollingParent, android.support.v4.view.NestedScrollingChild
{
    private static final android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE;
    static final int ANIMATED_SCROLL_GAP;
    private static final int INVALID_POINTER;
    static final float MAX_SCROLL_FACTOR;
    private static final int[] SCROLLVIEW_STYLEABLE;
    private static final java.lang.String TAG;
    private int mActivePointerId;
    private final android.support.v4.view.NestedScrollingChildHelper mChildHelper;
    private android.view.View mChildToScrollTo;
    private android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom;
    private android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop;
    private boolean mFillViewport;
    private boolean mIsBeingDragged;
    private boolean mIsLaidOut;
    private boolean mIsLayoutDirty;
    private int mLastMotionY;
    private long mLastScroll;
    private int mMaximumVelocity;
    private int mMinimumVelocity;
    private int mNestedYOffset;
    private final android.support.v4.view.NestedScrollingParentHelper mParentHelper;
    private android.support.v4.widget.NestedScrollView$SavedState mSavedState;
    private final int[] mScrollConsumed;
    private final int[] mScrollOffset;
    private android.support.v4.widget.ScrollerCompat mScroller;
    private boolean mSmoothScrollingEnabled;
    private final android.graphics.Rect mTempRect;
    private int mTouchSlop;
    private android.view.VelocityTracker mVelocityTracker;
    private float mVerticalScrollFactor;

    static void <clinit>()
    {
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate $r0;
        int[] $r1;

        $r0 = new android.support.v4.widget.NestedScrollView$AccessibilityDelegate;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView$AccessibilityDelegate: void <init>()>();
        <android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE> = $r0;
        $r1 = newarray (int)[1];
        $r1[0] = 16843130;
        <android.support.v4.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE> = $r1;
        return;
    }

    public void <init>(android.content.Context)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.content.Context $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.content.Context;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        android.content.res.TypedArray $r3;
        android.graphics.Rect $r4;
        boolean $z0;
        int[] $r5;
        android.support.v4.view.NestedScrollingParentHelper $r6;
        android.support.v4.view.NestedScrollingChildHelper $r7;
        android.support.v4.widget.NestedScrollView$AccessibilityDelegate $r8;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        $i0 := @parameter2: int;
        specialinvoke $r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);
        $r4 = new android.graphics.Rect;
        specialinvoke $r4.<android.graphics.Rect: void <init>()>();
        $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect> = $r4;
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty> = 1;
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut> = 0;
        $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo> = null;
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;
        $r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled> = 1;
        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;
        $r5 = newarray (int)[2];
        $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset> = $r5;
        $r5 = newarray (int)[2];
        $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed> = $r5;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void initScrollView()>();
        $r5 = <android.support.v4.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE>;
        $i1 = (int) 0;
        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>($r2, $r5, $i0, $i1);
        $i1 = (int) 0;
        $z0 = virtualinvoke $r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setFillViewport(boolean)>($z0);
        virtualinvoke $r3.<android.content.res.TypedArray: void recycle()>();
        $r6 = new android.support.v4.view.NestedScrollingParentHelper;
        specialinvoke $r6.<android.support.v4.view.NestedScrollingParentHelper: void <init>(android.view.ViewGroup)>($r0);
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper> = $r6;
        $r7 = new android.support.v4.view.NestedScrollingChildHelper;
        specialinvoke $r7.<android.support.v4.view.NestedScrollingChildHelper: void <init>(android.view.View)>($r0);
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper> = $r7;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>(1);
        $r8 = <android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE>;
        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>($r0, $r8);
        return;
    }

    static int access$000(android.support.v4.widget.NestedScrollView)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.widget.NestedScrollView;
        $i0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();
        return $i0;
    }

    private boolean canScroll()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z0 = 0;
        $i2 = (int) 0;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i2);
        if $r1 == null goto label0;

        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();
        $i0 = $i2 + $i0;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i2 = $i0 + $i2;
        if $i1 >= $i2 goto label0;

        $z0 = 1;

     label0:
        return $z0;
    }

    private static int clamp(int, int, int)
    {
        int $i0, $i1, $i2, $i3;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        if $i1 >= $i2 goto label0;

        if $i0 >= 0 goto label2;

     label0:
        $i0 = 0;

     label1:
        return $i0;

     label2:
        $i3 = $i1 + $i0;
        if $i3 <= $i2 goto label1;

        $i0 = $i2 - $i1;
        return $i0;
    }

    private void doScrollY(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        if $i0 == 0 goto label0;

        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled>;
        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void smoothScrollBy(int,int)>(0, $i0);

     label0:
        return;

     label1:
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, $i0);
        goto label0;
    }

    private void endDrag()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.widget.EdgeEffectCompat $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;
        virtualinvoke $r1.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

     label0:
        return;
    }

    private void ensureGlows()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.content.Context $r1;
        int $i0;
        android.support.v4.widget.EdgeEffectCompat $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>($r0);
        if $i0 == 2 goto label1;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        if $r2 != null goto label0;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();
        $r2 = new android.support.v4.widget.EdgeEffectCompat;
        specialinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r1);
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop> = $r2;
        $r2 = new android.support.v4.widget.EdgeEffectCompat;
        specialinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>($r1);
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom> = $r2;

     label0:
        return;

     label1:
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop> = null;
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom> = null;
        goto label0;
    }

    private android.view.View findFocusableViewInBounds(boolean, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        android.view.View $r1, $r4;
        java.util.ArrayList $r2;
        java.lang.Object $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z0 := @parameter0: boolean;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: java.util.ArrayList getFocusables(int)>(2);
        $r1 = null;
        $z1 = 0;
        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();
        $i3 = 0;

     label0:
        if $i3 >= $i2 goto label11;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i3);
        $r4 = (android.view.View) $r3;
        $i5 = virtualinvoke $r4.<android.view.View: int getTop()>();
        $i4 = virtualinvoke $r4.<android.view.View: int getBottom()>();
        if $i0 >= $i4 goto label2;

        if $i5 >= $i1 goto label2;

        if $i0 >= $i5 goto label3;

        if $i4 >= $i1 goto label3;

        $z3 = 1;

     label1:
        if $r1 != null goto label4;

        $r1 = $r4;
        $z1 = $z3;

     label2:
        $i3 = $i3 + 1;
        goto label0;

     label3:
        $z3 = 0;
        goto label1;

     label4:
        if $z0 == 0 goto label5;

        $i7 = virtualinvoke $r1.<android.view.View: int getTop()>();
        if $i5 < $i7 goto label6;

     label5:
        if $z0 != 0 goto label8;

        $i7 = virtualinvoke $r1.<android.view.View: int getBottom()>();
        if $i4 <= $i7 goto label8;

     label6:
        $z2 = 1;

     label7:
        if $z1 == 0 goto label9;

        if $z3 == 0 goto label2;

        if $z2 == 0 goto label2;

        $r1 = $r4;
        goto label2;

     label8:
        $z2 = 0;
        goto label7;

     label9:
        if $z3 == 0 goto label10;

        $r1 = $r4;
        $z1 = 1;
        goto label2;

     label10:
        if $z2 == 0 goto label2;

        $r1 = $r4;
        goto label2;

     label11:
        return $r1;
    }

    private void flingWithNestedDispatch(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        float $f1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        if $i1 > 0 goto label0;

        if $i0 <= 0 goto label4;

     label0:
        $i2 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();
        if $i1 < $i2 goto label1;

        if $i0 >= 0 goto label4;

     label1:
        $z0 = 1;

     label2:
        $f1 = (float) $i0;
        $z1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>(0.0F, $f1);
        if $z1 != 0 goto label3;

        $f1 = (float) $i0;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f1, $z0);
        if $z0 == 0 goto label3;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void fling(int)>($i0);

     label3:
        return;

     label4:
        $z0 = 0;
        goto label2;
    }

    private int getScrollRange()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 = 0;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i1 <= 0 goto label0;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);
        $i3 = virtualinvoke $r1.<android.view.View: int getHeight()>();
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i1 = $i1 - $i0;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();
        $i1 = $i1 - $i0;
        $i3 = $i3 - $i1;
        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);

     label0:
        return $i0;
    }

    private float getVerticalScrollFactorCompat()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.content.Context $r1;
        android.util.TypedValue $r2;
        float $f0, $f1;
        boolean $z0;
        byte $b0;
        android.content.res.Resources$Theme $r3;
        java.lang.IllegalStateException $r4;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $f0 = $r0.<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor>;
        $b0 = $f0 cmpl 0.0F;
        if $b0 != 0 goto label1;

        $r2 = new android.util.TypedValue;
        specialinvoke $r2.<android.util.TypedValue: void <init>()>();
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();
        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();
        $z0 = virtualinvoke $r3.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16842829, $r2, 1);
        if $z0 != 0 goto label0;

        $r4 = new java.lang.IllegalStateException;
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected theme to define listPreferredItemHeight.");
        throw $r4;

     label0:
        $r6 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();
        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f1 = virtualinvoke $r2.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>($r7);
        $r0.<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor> = $f1;

     label1:
        $f1 = $r0.<android.support.v4.widget.NestedScrollView: float mVerticalScrollFactor>;
        return $f1;
    }

    private boolean inChild(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $z0 = 0;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i2 <= 0 goto label0;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i3 = (int) 0;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i3);
        $i3 = virtualinvoke $r1.<android.view.View: int getTop()>();
        $i3 = $i3 - $i2;
        if $i1 < $i3 goto label0;

        $i3 = virtualinvoke $r1.<android.view.View: int getBottom()>();
        $i3 = $i3 - $i2;
        if $i1 >= $i3 goto label0;

        $i3 = virtualinvoke $r1.<android.view.View: int getLeft()>();
        if $i0 < $i3 goto label0;

        $i3 = virtualinvoke $r1.<android.view.View: int getRight()>();
        if $i0 >= $i3 goto label0;

        $z0 = 1;

     label0:
        return $z0;
    }

    private void initOrResetVelocityTracker()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.VelocityTracker $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        if $r1 != null goto label1;

        $r1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();
        $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = $r1;

     label0:
        return;

     label1:
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r1.<android.view.VelocityTracker: void clear()>();
        goto label0;
    }

    private void initScrollView()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.ViewConfiguration $r1;
        android.support.v4.widget.ScrollerCompat $r2;
        android.content.Context $r3;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r2 = new android.support.v4.widget.ScrollerCompat;
        $r3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();
        specialinvoke $r2.<android.support.v4.widget.ScrollerCompat: void <init>(android.content.Context,android.view.animation.Interpolator)>($r3, null);
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller> = $r2;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setFocusable(boolean)>(1);
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setDescendantFocusability(int)>(262144);
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setWillNotDraw(boolean)>(0);
        $r3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.content.Context getContext()>();
        $r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r3);
        $i0 = virtualinvoke $r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();
        $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop> = $i0;
        $i0 = virtualinvoke $r1.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();
        $r0.<android.support.v4.widget.NestedScrollView: int mMinimumVelocity> = $i0;
        $i0 = virtualinvoke $r1.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();
        $r0.<android.support.v4.widget.NestedScrollView: int mMaximumVelocity> = $i0;
        return;
    }

    private void initVelocityTrackerIfNotExists()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.VelocityTracker $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();
        $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = $r1;

     label0:
        return;
    }

    private boolean isOffScreen(android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        boolean $z0, $z1;
        int $i0, i1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $z0 = 0;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        i1 = (int) 0;
        $z1 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>($r1, i1, $i0);
        if $z1 != 0 goto label0;

        $z0 = 1;

     label0:
        return $z0;
    }

    private static boolean isViewDescendantOf(android.view.View, android.view.View)
    {
        android.view.View $r0, $r1;
        android.view.ViewParent $r2;
        boolean $z0;

        $r0 := @parameter0: android.view.View;
        $r1 := @parameter1: android.view.View;
        if $r0 != $r1 goto label1;

     label0:
        return 1;

     label1:
        $r2 = virtualinvoke $r0.<android.view.View: android.view.ViewParent getParent()>();
        $z0 = $r2 instanceof android.view.ViewGroup;
        if $z0 == 0 goto label2;

        $r0 = (android.view.View) $r2;
        $z0 = staticinvoke <android.support.v4.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r0, $r1);
        if $z0 != 0 goto label0;

     label2:
        return 0;
    }

    private boolean isWithinDeltaOfScreen(android.view.View, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i2 = $r2.<android.graphics.Rect: int bottom>;
        $i3 = $i2 + $i0;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        if $i3 < $i2 goto label0;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i3 = $r2.<android.graphics.Rect: int top>;
        $i3 = $i3 - $i0;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i2 = $i2 + $i1;
        if $i3 > $i2 goto label0;

        return 1;

     label0:
        return 0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.MotionEvent $r1;
        byte $b0;
        int $i1, $i2, $i4;
        float $f0;
        android.view.VelocityTracker $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.MotionEvent;
        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();
        $i2 = $i2 & 65280;
        $i2 = $i2 >> 8;
        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i2);
        $i4 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;
        if $i1 != $i4 goto label1;

        if $i2 != 0 goto label2;

        $b0 = 1;

     label0:
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $b0);
        $i4 = (int) $f0;
        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i4;
        $i4 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $b0);
        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i4;
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        if $r2 == null goto label1;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

     label1:
        return;

     label2:
        $b0 = 0;
        goto label0;
    }

    private void recycleVelocityTracker()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.VelocityTracker $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r1.<android.view.VelocityTracker: void recycle()>();
        $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker> = null;

     label0:
        return;
    }

    private boolean scrollAndFocus(int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        android.view.View $r1, $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $z0 = 1;
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i3 = $i4 + $i3;
        if $i0 != 33 goto label4;

        $z1 = 1;

     label0:
        $r1 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)>($z1, $i1, $i2);
        if $r1 != null goto label1;

        $r1 = $r0;

     label1:
        if $i1 < $i4 goto label5;

        if $i2 > $i3 goto label5;

        $z0 = 0;

     label2:
        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();
        if $r1 == $r2 goto label3;

        virtualinvoke $r1.<android.view.View: boolean requestFocus(int)>($i0);

     label3:
        return $z0;

     label4:
        $z1 = 0;
        goto label0;

     label5:
        if $z1 == 0 goto label7;

        $i4 = $i1 - $i4;

     label6:
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>($i4);
        goto label2;

     label7:
        $i4 = $i2 - $i3;
        goto label6;
    }

    private void scrollToChild(android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0;
        android.graphics.Rect $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r2);
        if $i0 == 0 goto label0;

        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, $i0);

     label0:
        return;
    }

    private boolean scrollToChildRect(android.graphics.Rect, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.graphics.Rect $r1;
        boolean $z0, $z1;
        int $i0, i1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.graphics.Rect;
        $z0 := @parameter1: boolean;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r1);
        if $i0 == 0 goto label2;

        $z1 = 1;

     label0:
        if $z1 == 0 goto label1;

        if $z0 == 0 goto label3;

        i1 = (int) 0;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(i1, $i0);

     label1:
        return $z1;

     label2:
        $z1 = 0;
        goto label0;

     label3:
        i1 = (int) 0;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void smoothScrollBy(int,int)>(i1, $i0);
        return $z1;
    }

    public void addView(android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i0 <= 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");
        throw $r3;

     label0:
        specialinvoke $r0.<android.widget.FrameLayout: void addView(android.view.View)>($r1);
        return;
    }

    public void addView(android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i1 <= 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");
        throw $r3;

     label0:
        specialinvoke $r0.<android.widget.FrameLayout: void addView(android.view.View,int)>($r1, $i0);
        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalStateException $r4;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $r2 := @parameter2: android.view.ViewGroup$LayoutParams;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i1 <= 0 goto label0;

        $r4 = new java.lang.IllegalStateException;
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");
        throw $r4;

     label0:
        specialinvoke $r0.<android.widget.FrameLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r1, $i0, $r2);
        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        java.lang.IllegalStateException $r4;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $r2 := @parameter1: android.view.ViewGroup$LayoutParams;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i0 <= 0 goto label0;

        $r4 = new java.lang.IllegalStateException;
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ScrollView can host only one direct child");
        throw $r4;

     label0:
        specialinvoke $r0.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r1, $r2);
        return;
    }

    public boolean arrowScroll(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        android.view.View $r1, $r2;
        boolean $z0, $z1;
        android.view.FocusFinder $r3;
        android.graphics.Rect $r4;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $z0 = 0;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();
        if $r1 != $r0 goto label0;

        $r1 = null;

     label0:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();
        $r2 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, $r1, $i0);
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getMaxScrollAmount()>();
        if $r2 == null goto label4;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $z1 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>($r2, $i2, $i3);
        if $z1 == 0 goto label4;

        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        virtualinvoke $r2.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r4);
        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r2, $r4);
        $r4 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r4);
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>($i3);
        virtualinvoke $r2.<android.view.View: boolean requestFocus(int)>($i0);

     label1:
        if $r1 == null goto label2;

        $z1 = virtualinvoke $r1.<android.view.View: boolean isFocused()>();
        if $z1 == 0 goto label2;

        $z1 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isOffScreen(android.view.View)>($r1);
        if $z1 == 0 goto label2;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getDescendantFocusability()>();
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setDescendantFocusability(int)>(131072);
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean requestFocus()>();
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void setDescendantFocusability(int)>($i1);

     label2:
        $z0 = 1;

     label3:
        return $z0;

     label4:
        $i5 = $i2;
        if $i0 != 33 goto label7;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        if $i3 >= $i2 goto label7;

        $i5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();

     label5:
        if $i5 == 0 goto label3;

        if $i0 != 130 goto label8;

     label6:
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>($i5);
        goto label1;

     label7:
        if $i0 != 130 goto label5;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i3 <= 0 goto label5;

        $i6 = (int) 0;
        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i6);
        $i1 = virtualinvoke $r2.<android.view.View: int getBottom()>();
        $i6 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i6 = $i6 + $i3;
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i3 = $i6 - $i3;
        $i6 = $i1 - $i3;
        if $i6 >= $i2 goto label5;

        $i5 = $i1 - $i3;
        goto label5;

     label8:
        $i5 = neg $i5;
        goto label6;
    }

    public void computeScroll()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.widget.ScrollerCompat $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        boolean $z3, $z4;
        android.support.v4.widget.EdgeEffectCompat $r3;
        float $f0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z4 = 1;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $z3 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: boolean computeScrollOffset()>();
        if $z3 == 0 goto label2;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $i0 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $i5 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();
        if $i2 != $i0 goto label0;

        if $i3 == $i5 goto label2;

     label0:
        $i4 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();
        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>($r0);
        if $i1 == 0 goto label1;

        i6 = (int) 1;
        if $i1 != i6 goto label3;

        if $i4 <= 0 goto label3;

     label1:
        $i0 = $i0 - $i2;
        $i1 = $i5 - $i3;
        i6 = (int) 0;
        i7 = (int) 0;
        i8 = (int) 0;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)>($i0, $i1, $i2, $i3, i6, $i4, i7, i8, 0);
        if $z4 == 0 goto label2;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void ensureGlows()>();
        if $i5 > 0 goto label4;

        if $i3 <= 0 goto label4;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $f0 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: float getCurrVelocity()>();
        $i5 = (int) $f0;
        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i5);

     label2:
        return;

     label3:
        $z4 = 0;
        goto label1;

     label4:
        if $i5 < $i4 goto label2;

        if $i3 >= $i4 goto label2;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $f0 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: float getCurrVelocity()>();
        $i5 = (int) $f0;
        virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean onAbsorb(int)>($i5);
        goto label2;
    }

    protected int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.graphics.Rect $r1;
        int $i0, $i1, $i2, $i3, $i6, $i7;
        android.view.View $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.graphics.Rect;
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i3 != 0 goto label1;

     label0:
        return 0;

     label1:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i2 = $i3 + $i1;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();
        $i6 = $r1.<android.graphics.Rect: int top>;
        if $i6 <= 0 goto label2;

        $i3 = $i3 + $i0;

     label2:
        $i6 = $r1.<android.graphics.Rect: int bottom>;
        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);
        $i7 = virtualinvoke $r2.<android.view.View: int getHeight()>();
        if $i6 >= $i7 goto label3;

        $i2 = $i2 - $i0;

     label3:
        $i7 = $r1.<android.graphics.Rect: int bottom>;
        if $i7 <= $i2 goto label6;

        $i7 = $r1.<android.graphics.Rect: int top>;
        if $i7 <= $i3 goto label6;

        $i7 = virtualinvoke $r1.<android.graphics.Rect: int height()>();
        if $i7 <= $i1 goto label5;

        $i7 = $r1.<android.graphics.Rect: int top>;
        $i7 = $i7 - $i3;
        $i7 = 0 + $i7;

     label4:
        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);
        $i0 = virtualinvoke $r2.<android.view.View: int getBottom()>();
        $i0 = $i0 - $i2;
        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i0);
        return $i7;

     label5:
        $i7 = $r1.<android.graphics.Rect: int bottom>;
        $i7 = $i7 - $i2;
        $i7 = 0 + $i7;
        goto label4;

     label6:
        $i7 = $r1.<android.graphics.Rect: int top>;
        if $i7 >= $i3 goto label0;

        $i7 = $r1.<android.graphics.Rect: int bottom>;
        if $i7 >= $i2 goto label0;

        $i7 = virtualinvoke $r1.<android.graphics.Rect: int height()>();
        if $i7 <= $i1 goto label8;

        $i7 = $r1.<android.graphics.Rect: int bottom>;
        $i7 = $i2 - $i7;
        $i7 = 0 - $i7;

     label7:
        $i6 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i6 = neg $i6;
        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i6);
        return $i7;

     label8:
        $i7 = $r1.<android.graphics.Rect: int top>;
        $i7 = $i3 - $i7;
        $i7 = 0 - $i7;
        goto label7;
    }

    protected int computeVerticalScrollOffset()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i1 = specialinvoke $r0.<android.widget.FrameLayout: int computeVerticalScrollOffset()>();
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);
        return $i1;
    }

    protected int computeVerticalScrollRange()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i3 = $i3 - $i2;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();
        $i0 = $i3 - $i2;
        if $i1 != 0 goto label0;

        return $i0;

     label0:
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);
        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i1 = $i2 - $i0;
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);
        if $i3 >= 0 goto label2;

        $i2 = $i2 - $i3;

     label1:
        return $i2;

     label2:
        if $i3 <= $i1 goto label1;

        $i3 = $i3 - $i1;
        $i2 = $i2 + $i3;
        goto label1;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.KeyEvent $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.KeyEvent;
        $z0 = specialinvoke $r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1);
        if $z0 != 0 goto label0;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)>($r1);
        if $z0 == 0 goto label1;

     label0:
        return 1;

     label1:
        return 0;
    }

    public boolean dispatchNestedFling(float, float, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        float $f0, $f1;
        boolean $z0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $z0 := @parameter2: boolean;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;
        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>($f0, $f1, $z0);
        return $z0;
    }

    public boolean dispatchNestedPreFling(float, float)
    {
        android.support.v4.widget.NestedScrollView $r0;
        float $f0, $f1;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;
        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>($f0, $f1);
        return $z0;
    }

    public boolean dispatchNestedPreScroll(int, int, int[], int[])
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1;
        int[] $r1, $r2;
        android.support.v4.view.NestedScrollingChildHelper $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $r1 := @parameter2: int[];
        $r2 := @parameter3: int[];
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;
        $z0 = virtualinvoke $r3.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])>($i0, $i1, $r1, $r2);
        return $z0;
    }

    public boolean dispatchNestedScroll(int, int, int, int, int[])
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;
        android.support.v4.view.NestedScrollingChildHelper $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $r1 := @parameter4: int[];
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;
        $z0 = virtualinvoke $r2.<android.support.v4.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])>($i0, $i1, $i2, $i3, $r1);
        return $z0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        android.support.v4.widget.EdgeEffectCompat $r2;
        float $f0, $f1, $f2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.graphics.Canvas;
        specialinvoke $r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>($r1);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        if $r2 == null goto label3;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        $z0 = virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();
        if $z0 != 0 goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();
        $i3 = $i3 - $i2;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();
        $i2 = $i3 - $i2;
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();
        $f0 = (float) $i3;
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i1);
        $f1 = (float) $i3;
        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f0, $f1);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i2, $i3);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        $z0 = virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);
        if $z0 == 0 goto label0;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

     label0:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

     label1:
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;
        $z0 = virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();
        if $z0 != 0 goto label3;

        $i3 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();
        $i2 = $i2 - $i0;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();
        $i2 = $i2 - $i0;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i5 = neg $i2;
        $i6 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();
        $i6 = $i5 + $i6;
        $f1 = (float) $i6;
        $i6 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();
        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i1);
        $i6 = $i6 + $i0;
        $f0 = (float) $i6;
        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);
        $f2 = (float) $i2;
        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f2, 0.0F);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;
        virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>($i2, $i0);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;
        $z0 = virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>($r1);
        if $z0 == 0 goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

     label2:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i3);

     label3:
        return;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.KeyEvent $r1;
        android.view.View $r2;
        boolean $z0, $z1;
        short $s1;
        android.graphics.Rect $r3;
        int $i2;
        android.view.FocusFinder $r4;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.KeyEvent;
        $z0 = 0;
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();
        $z1 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean canScroll()>();
        if $z1 != 0 goto label2;

        $z1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isFocused()>();
        if $z1 == 0 goto label1;

        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();
        if $i2 == 4 goto label1;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();
        if $r2 != $r0 goto label0;

        $r2 = null;

     label0:
        $r4 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();
        $r2 = virtualinvoke $r4.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, $r2, 130);
        if $r2 == null goto label1;

        if $r2 == $r0 goto label1;

        $z1 = virtualinvoke $r2.<android.view.View: boolean requestFocus(int)>(130);
        if $z1 == 0 goto label1;

        $z0 = 1;

     label1:
        return $z0;

     label2:
        $z0 = 0;
        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getAction()>();
        if $i2 != 0 goto label3;

        $i2 = virtualinvoke $r1.<android.view.KeyEvent: int getKeyCode()>();
        lookupswitch($i2)
        {
            case 19: goto label4;
            case 20: goto label6;
            case 62: goto label8;
            default: goto label3;
        };

     label3:
        return $z0;

     label4:
        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();
        if $z1 != 0 goto label5;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean arrowScroll(int)>(33);
        goto label3;

     label5:
        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean fullScroll(int)>(33);
        goto label3;

     label6:
        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean isAltPressed()>();
        if $z1 != 0 goto label7;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean arrowScroll(int)>(130);
        goto label3;

     label7:
        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean fullScroll(int)>(130);
        goto label3;

     label8:
        $z1 = virtualinvoke $r1.<android.view.KeyEvent: boolean isShiftPressed()>();
        if $z1 == 0 goto label10;

        $s1 = 33;

     label9:
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean pageScroll(int)>($s1);
        goto label3;

     label10:
        $s1 = 130;
        goto label9;
    }

    public void fling(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i3, $i8, $i9, $i10;
        android.view.View $r1;
        android.support.v4.widget.ScrollerCompat $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i1 <= 0 goto label0;

        $i9 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i9 = $i9 - $i1;
        $i8 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();
        $i9 = $i9 - $i8;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);
        $i8 = virtualinvoke $r1.<android.view.View: int getHeight()>();
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i3 = $i8 - $i9;
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);
        $i8 = $i9 / 2;
        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int,int,int)>($i10, $i1, 0, $i0, 0, 0, 0, $i3, 0, $i8);
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

     label0:
        return;
    }

    public boolean fullScroll(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i3, $i6;
        byte $b2;
        android.view.View $r1;
        android.graphics.Rect $r2, $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        if $i0 != 130 goto label2;

        $b2 = 1;

     label0:
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $r2.<android.graphics.Rect: int top> = 0;
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $r2.<android.graphics.Rect: int bottom> = $i3;
        if $b2 == 0 goto label1;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i1 <= 0 goto label1;

        $i1 = $i1 + -1;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i1);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i6 = virtualinvoke $r1.<android.view.View: int getBottom()>();
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i6 = $i6 + $i1;
        $r2.<android.graphics.Rect: int bottom> = $i6;
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i6 = $r3.<android.graphics.Rect: int bottom>;
        $i6 = $i6 - $i3;
        $r2.<android.graphics.Rect: int top> = $i6;

     label1:
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i6 = $r3.<android.graphics.Rect: int top>;
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i3 = $r3.<android.graphics.Rect: int bottom>;
        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>($i0, $i6, $i3);
        return $z0;

     label2:
        $b2 = 0;
        goto label0;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i4;
        float $f0, $f1;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i1 != 0 goto label0;

        return 0.0F;

     label0:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i0 = $i2 - $i0;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);
        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();
        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i4 = $i2 - $i4;
        $i0 = $i4 - $i0;
        if $i0 >= $i1 goto label1;

        $f0 = (float) $i0;
        $f1 = (float) $i1;
        $f0 = $f0 / $f1;
        return $f0;

     label1:
        return 1.0F;
    }

    public int getMaxScrollAmount()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;
        float $f1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $f1 = (float) $i0;
        $f1 = 0.5F * $f1;
        $i0 = (int) $f1;
        return $i0;
    }

    public int getNestedScrollAxes()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.view.NestedScrollingParentHelper $r1;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper>;
        $i0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingParentHelper: int getNestedScrollAxes()>();
        return $i0;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1;
        float $f0, $f1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i1 != 0 goto label0;

        return 0.0F;

     label0:
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getVerticalFadingEdgeLength()>();
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        if $i1 >= $i0 goto label1;

        $f1 = (float) $i1;
        $f0 = (float) $i0;
        $f0 = $f1 / $f0;
        return $f0;

     label1:
        return 1.0F;
    }

    public boolean hasNestedScrollingParent()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;
        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()>();
        return $z0;
    }

    public boolean isFillViewport()
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport>;
        return $z0;
    }

    public boolean isNestedScrollingEnabled()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;
        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()>();
        return $z0;
    }

    public boolean isSmoothScrollingEnabled()
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled>;
        return $z0;
    }

    protected void measureChild(android.view.View, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();
        $i2 = $i1 + $i2;
        $i1 = $r2.<android.view.ViewGroup$LayoutParams: int width>;
        $i0 = staticinvoke <android.support.v4.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>($i0, $i2, $i1);
        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);
        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);
        return;
    }

    protected void measureChildWithMargins(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 := @parameter4: int;
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();
        $i3 = $i3 + $i2;
        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int leftMargin>;
        $i3 = $i3 + $i2;
        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;
        $i3 = $i3 + $i2;
        $i3 = $i3 + $i1;
        $i2 = $r3.<android.view.ViewGroup$MarginLayoutParams: int width>;
        $i2 = staticinvoke <android.support.v4.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>($i0, $i3, $i2);
        $i3 = $r3.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;
        $i1 = $r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;
        $i3 = $i3 + $i1;
        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 0);
        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i2, $i3);
        return;
    }

    public void onAttachedToWindow()
    {
        android.support.v4.widget.NestedScrollView $r0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut> = 0;
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        float $f0, $f1;
        boolean $z0;
        byte $b3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.MotionEvent;
        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getSource(android.view.MotionEvent)>($r1);
        $i2 = $i2 & 2;
        if $i2 == 0 goto label0;

        $i2 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();
        lookupswitch($i2)
        {
            case 8: goto label1;
            default: goto label0;
        };

     label0:
        return 0;

     label1:
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;
        if $z0 != 0 goto label0;

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)>($r1, 9);
        $b3 = $f0 cmpl 0.0F;
        if $b3 == 0 goto label0;

        $f1 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: float getVerticalScrollFactorCompat()>();
        $f1 = $f1 * $f0;
        $i0 = (int) $f1;
        $i2 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i0 = $i1 - $i0;
        if $i0 >= 0 goto label3;

        $i0 = 0;

     label2:
        if $i0 == $i1 goto label0;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        specialinvoke $r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i2, $i0);
        return 1;

     label3:
        if $i0 <= $i2 goto label2;

        $i0 = $i2;
        goto label2;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i3;
        android.view.ViewParent $r2;
        boolean $z0, $z2;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        float $f0;
        android.view.VelocityTracker $r6;
        android.support.v4.widget.ScrollerCompat $r7;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.MotionEvent;
        $z0 = 1;
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();
        if $i0 != 2 goto label0;

        $z2 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;
        if $z2 == 0 goto label0;

        return 1;

     label0:
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        if $i3 != 0 goto label1;

        $i3 = (int) 1;
        $z2 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r0, $i3);
        if $z2 != 0 goto label1;

        return 0;

     label1:
        $i3 = $i0 & 255;
        lookupswitch($i3)
        {
            case 0: goto label5;
            case 1: goto label9;
            case 2: goto label3;
            case 3: goto label9;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label10;
            default: goto label2;
        };

     label2:
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;
        return $z0;

     label3:
        $i0 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;
        if $i0 == -1 goto label2;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i0);
        if $i1 != -1 goto label4;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onInterceptTouchEvent");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $r5);
        goto label2;

     label4:
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1);
        $i1 = (int) $f0;
        $i3 = $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY>;
        $i3 = $i1 - $i3;
        $i0 = staticinvoke <java.lang.Math: int abs(int)>($i3);
        $i3 = $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;
        if $i0 <= $i3 goto label2;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getNestedScrollAxes()>();
        $i3 = $i3 & 2;
        if $i3 != 0 goto label2;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 1;
        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i1;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void initVelocityTrackerIfNotExists()>();
        $r6 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r6.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);
        $i3 = (int) 0;
        $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = $i3;
        $r2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.ViewParent getParent()>();
        if $r2 == null goto label2;

        interfaceinvoke $r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);
        goto label2;

     label5:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $i3 = (int) $f0;
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $i0 = (int) $f0;
        $z2 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean inChild(int,int)>($i0, $i3);
        if $z2 != 0 goto label6;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();
        goto label2;

     label6:
        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i3;
        $i3 = (int) 0;
        $i3 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i3);
        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i3;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void initOrResetVelocityTracker()>();
        $r6 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r6.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);
        $r7 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $z2 = virtualinvoke $r7.<android.support.v4.widget.ScrollerCompat: boolean isFinished()>();
        if $z2 != 0 goto label8;

     label7:
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = $z0;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int)>(2);
        goto label2;

     label8:
        $z0 = 0;
        goto label7;

     label9:
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 0;
        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void stopNestedScroll()>();
        goto label2;

     label10:
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);
        goto label2;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        android.support.v4.widget.NestedScrollView$SavedState $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z0 := @parameter0: boolean;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 := @parameter4: int;
        specialinvoke $r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty> = 0;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>;
        $z0 = staticinvoke <android.support.v4.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)>($r1, $r0);
        if $z0 == 0 goto label0;

        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo>;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollToChild(android.view.View)>($r1);

     label0:
        $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo> = null;
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut>;
        if $z0 != 0 goto label3;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState>;
        if $r2 == null goto label1;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState>;
        $i0 = $r2.<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition>;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i2, $i0);
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState> = null;

     label1:
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i2 <= 0 goto label4;

        $i2 = (int) 0;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i2);
        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();

     label2:
        $i3 = $i3 - $i1;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i3 = $i3 - $i1;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();
        $i3 = $i3 - $i1;
        $i3 = $i2 - $i3;
        $i2 = (int) 0;
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        if $i2 <= $i3 goto label5;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i2, $i3);

     label3:
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i3, $i2);
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLaidOut> = 1;
        return;

     label4:
        $i2 = (int) 0;
        goto label2;

     label5:
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        if $i3 >= 0 goto label3;

        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        $i2 = (int) 0;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollTo(int,int)>($i3, $i2);
        goto label3;
    }

    protected void onMeasure(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i4;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0;
        android.widget.FrameLayout$LayoutParams $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        specialinvoke $r0.<android.widget.FrameLayout: void onMeasure(int,int)>($i0, $i1);
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport>;
        if $z0 != 0 goto label1;

     label0:
        return;

     label1:
        $i1 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);
        if $i1 == 0 goto label0;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i2 <= 0 goto label0;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getMeasuredHeight()>();
        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();
        if $i2 >= $i1 goto label0;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r3 = (android.widget.FrameLayout$LayoutParams) $r2;
        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();
        $i4 = $i4 + $i2;
        $i2 = $r3.<android.widget.FrameLayout$LayoutParams: int width>;
        $i0 = staticinvoke <android.support.v4.widget.NestedScrollView: int getChildMeasureSpec(int,int,int)>($i0, $i4, $i2);
        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();
        $i4 = $i1 - $i4;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i4 = $i4 - $i2;
        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, 1073741824);
        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i0, $i1);
        goto label0;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $f0 := @parameter1: float;
        $f1 := @parameter2: float;
        $z0 := @parameter3: boolean;
        if $z0 != 0 goto label0;

        $i0 = (int) $f1;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void flingWithNestedDispatch(int)>($i0);
        return 1;

     label0:
        return 0;
    }

    public boolean onNestedPreFling(android.view.View, float, float)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        float $f0, $f1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $f0 := @parameter1: float;
        $f1 := @parameter2: float;
        return 0;
    }

    public void onNestedPreScroll(android.view.View, int, int, int[])
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1;
        int[] $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r2 := @parameter3: int[];
        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 := @parameter4: int;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>(0, $i3);
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i2 = $i2 - $i1;
        $i3 = $i3 - $i2;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, $i2, 0, $i3, null);
        return;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1, $r2;
        int $i0;
        android.support.v4.view.NestedScrollingParentHelper $r3;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $r2 := @parameter1: android.view.View;
        $i0 := @parameter2: int;
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingParentHelper mParentHelper>;
        virtualinvoke $r3.<android.support.v4.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)>($r1, $r2, $i0);
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int)>(2);
        return;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $z0 := @parameter2: boolean;
        $z1 := @parameter3: boolean;
        specialinvoke $r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i0, $i1);
        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;
        android.graphics.Rect $r1;
        android.view.View $r2;
        android.view.FocusFinder $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $r1 := @parameter1: android.graphics.Rect;
        if $i0 != 2 goto label3;

        $i0 = 130;

     label0:
        if $r1 != null goto label4;

        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();
        $r2 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>($r0, null, $i0);

     label1:
        if $r2 != null goto label5;

     label2:
        return 0;

     label3:
        if $i0 != 1 goto label0;

        $i0 = 33;
        goto label0;

     label4:
        $r3 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();
        $r2 = virtualinvoke $r3.<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>($r0, $r1, $i0);
        goto label1;

     label5:
        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isOffScreen(android.view.View)>($r2);
        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>($i0, $r1);
        return $z0;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.os.Parcelable $r1;
        android.support.v4.widget.NestedScrollView$SavedState $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.os.Parcelable;
        $r2 = (android.support.v4.widget.NestedScrollView$SavedState) $r1;
        $r1 = virtualinvoke $r2.<android.support.v4.widget.NestedScrollView$SavedState: android.os.Parcelable getSuperState()>();
        specialinvoke $r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($r1);
        $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.NestedScrollView$SavedState mSavedState> = $r2;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void requestLayout()>();
        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.widget.NestedScrollView$SavedState $r1;
        android.os.Parcelable $r2;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r2 = specialinvoke $r0.<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>();
        $r1 = new android.support.v4.widget.NestedScrollView$SavedState;
        specialinvoke $r1.<android.support.v4.widget.NestedScrollView$SavedState: void <init>(android.os.Parcelable)>($r2);
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $r1.<android.support.v4.widget.NestedScrollView$SavedState: int scrollPosition> = $i0;
        return $r1;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        boolean $z0;
        android.graphics.Rect $r2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        specialinvoke $r0.<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View findFocus()>();
        if $r1 == null goto label0;

        if $r0 != $r1 goto label1;

     label0:
        return;

     label1:
        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)>($r1, 0, $i3);
        if $z0 == 0 goto label0;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        virtualinvoke $r1.<android.view.View: void getDrawingRect(android.graphics.Rect)>($r2);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>($r1, $r2);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>($r2);
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void doScrollY(int)>($i3);
        goto label0;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1, $r2;
        int $i0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $r2 := @parameter1: android.view.View;
        $i0 := @parameter2: int;
        $i0 = $i0 & 2;
        if $i0 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public void onStopNestedScroll(android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void stopNestedScroll()>();
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.MotionEvent $r1, $r7;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i9, $i10;
        java.lang.String $r3;
        boolean $z0, $z1;
        int[] $r4, $r12;
        android.view.ViewParent $r5;
        android.view.VelocityTracker $r6;
        float $f0, $f1, $f2, $f3;
        android.support.v4.widget.ScrollerCompat $r9;
        java.lang.StringBuilder $r11;
        android.support.v4.widget.EdgeEffectCompat $r13;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.MotionEvent;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void initVelocityTrackerIfNotExists()>();
        $r7 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($r1);
        $i5 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);
        if $i5 != 0 goto label0;

        $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = 0;

     label0:
        $i0 = $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset>;
        $f1 = (float) $i0;
        virtualinvoke $r7.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f1);
        lookupswitch($i5)
        {
            case 0: goto label3;
            case 1: goto label23;
            case 2: goto label9;
            case 3: goto label25;
            case 4: goto label1;
            case 5: goto label26;
            case 6: goto label27;
            default: goto label1;
        };

     label1:
        $r6 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        if $r6 == null goto label2;

        $r6 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r6.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r7);

     label2:
        virtualinvoke $r7.<android.view.MotionEvent: void recycle()>();
        return 1;

     label3:
        $i7 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i7 != 0 goto label4;

        return 0;

     label4:
        $r9 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $z1 = virtualinvoke $r9.<android.support.v4.widget.ScrollerCompat: boolean isFinished()>();
        if $z1 != 0 goto label8;

        $z1 = 1;

     label5:
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = $z1;
        if $z1 == 0 goto label6;

        $r5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.ViewParent getParent()>();
        if $r5 == null goto label6;

        interfaceinvoke $r5.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label6:
        $r9 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $z1 = virtualinvoke $r9.<android.support.v4.widget.ScrollerCompat: boolean isFinished()>();
        if $z1 != 0 goto label7;

        $r9 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        virtualinvoke $r9.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

     label7:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $i7 = (int) $f1;
        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i7;
        $i7 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);
        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i7;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean startNestedScroll(int)>(2);
        goto label1;

     label8:
        $z1 = 0;
        goto label5;

     label9:
        $i7 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;
        $i6 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i7);
        if $i6 != -1 goto label10;

        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pointerId=");
        $i7 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in onTouchEvent");
        $r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NestedScrollView", $r3);
        goto label1;

     label10:
        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i6);
        $i7 = (int) $f1;
        $i5 = $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY>;
        $i0 = $i5 - $i7;
        $r4 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed>;
        $r12 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;
        $z1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])>(0, $i0, $r4, $r12);
        if $z1 == 0 goto label11;

        $r12 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollConsumed>;
        $i5 = $r12[1];
        $i0 = $i0 - $i5;
        $r12 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;
        $i5 = $r12[1];
        $f0 = (float) $i5;
        virtualinvoke $r7.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);
        $i5 = $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset>;
        $r12 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;
        $i4 = $r12[1];
        $i5 = $i5 + $i4;
        $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = $i5;

     label11:
        $z1 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;
        if $z1 != 0 goto label13;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i0);
        $i4 = $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;
        if $i5 <= $i4 goto label13;

        $r5 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.ViewParent getParent()>();
        if $r5 == null goto label12;

        interfaceinvoke $r5.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label12:
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged> = 1;
        if $i0 <= 0 goto label17;

        $i5 = $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;
        $i0 = $i0 - $i5;

     label13:
        $z1 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;
        if $z1 == 0 goto label1;

        $r12 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;
        $i5 = $r12[1];
        $i7 = $i7 - $i5;
        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i7;
        $i7 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i3 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollRange()>();
        $i5 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>($r0);
        if $i5 == 0 goto label14;

        if $i5 != 1 goto label18;

        if $i3 <= 0 goto label18;

     label14:
        $z1 = 1;

     label15:
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)>(0, $i0, 0, $i1, 0, $i3, 0, 0, 1);
        if $z0 == 0 goto label16;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean hasNestedScrollingParent()>();
        if $z0 != 0 goto label16;

        $r6 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r6.<android.view.VelocityTracker: void clear()>();

     label16:
        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i10 = $i10 - $i7;
        $i4 = $i0 - $i10;
        $r4 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;
        $z0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, $i10, 0, $i4, $r4);
        if $z0 == 0 goto label19;

        $i10 = $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY>;
        $r12 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;
        $i9 = $r12[1];
        $i10 = $i10 - $i9;
        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i10;
        $r12 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;
        $i10 = $r12[1];
        $f0 = (float) $i10;
        virtualinvoke $r7.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);
        $i10 = $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset>;
        $r12 = $r0.<android.support.v4.widget.NestedScrollView: int[] mScrollOffset>;
        $i9 = $r12[1];
        $i10 = $i10 + $i9;
        $r0.<android.support.v4.widget.NestedScrollView: int mNestedYOffset> = $i10;
        goto label1;

     label17:
        $i10 = $r0.<android.support.v4.widget.NestedScrollView: int mTouchSlop>;
        $i0 = $i0 + $i10;
        goto label13;

     label18:
        $z1 = 0;
        goto label15;

     label19:
        if $z1 == 0 goto label1;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void ensureGlows()>();
        $i7 = $i7 + $i0;
        if $i7 >= 0 goto label22;

        $r13 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        $f1 = (float) $i0;
        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $f0 = (float) $i10;
        $f1 = $f1 / $f0;
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i6);
        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();
        $f2 = (float) $i10;
        $f2 = $f0 / $f2;
        virtualinvoke $r13.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float,float)>($f1, $f2);
        $r13 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;
        $z1 = virtualinvoke $r13.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();
        if $z1 != 0 goto label20;

        $r13 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;
        virtualinvoke $r13.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

     label20:
        $r13 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        if $r13 == null goto label1;

        $r13 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        $z1 = virtualinvoke $r13.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();
        if $z1 == 0 goto label21;

        $r13 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;
        $z1 = virtualinvoke $r13.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();
        if $z1 != 0 goto label1;

     label21:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);
        goto label1;

     label22:
        if $i7 <= $i3 goto label20;

        $r13 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom>;
        $f2 = (float) $i0;
        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $f1 = (float) $i10;
        $f2 = $f2 / $f1;
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i6);
        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();
        $f3 = (float) $i10;
        $f3 = $f0 / $f3;
        $f3 = 1.0F - $f3;
        virtualinvoke $r13.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float,float)>($f2, $f3);
        $r13 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        $z1 = virtualinvoke $r13.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();
        if $z1 != 0 goto label20;

        $r13 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop>;
        virtualinvoke $r13.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();
        goto label20;

     label23:
        $z1 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;
        if $z1 == 0 goto label1;

        $r6 = $r0.<android.support.v4.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker>;
        $i9 = $r0.<android.support.v4.widget.NestedScrollView: int mMaximumVelocity>;
        $f3 = (float) $i9;
        virtualinvoke $r6.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f3);
        $i10 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;
        $f3 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r6, $i10);
        $i6 = (int) $f3;
        $i10 = staticinvoke <java.lang.Math: int abs(int)>($i6);
        $i9 = $r0.<android.support.v4.widget.NestedScrollView: int mMinimumVelocity>;
        if $i10 <= $i9 goto label24;

        $i10 = neg $i6;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void flingWithNestedDispatch(int)>($i10);

     label24:
        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void endDrag()>();
        goto label1;

     label25:
        $z1 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsBeingDragged>;
        if $z1 == 0 goto label1;

        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i10 <= 0 goto label1;

        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = -1;
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void endDrag()>();
        goto label1;

     label26:
        $i6 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);
        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i6);
        $i10 = (int) $f3;
        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i10;
        $i10 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i6);
        $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId> = $i10;
        goto label1;

     label27:
        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)>($r1);
        $i10 = $r0.<android.support.v4.widget.NestedScrollView: int mActivePointerId>;
        $i10 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i10);
        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i10);
        $i10 = (int) $f3;
        $r0.<android.support.v4.widget.NestedScrollView: int mLastMotionY> = $i10;
        goto label1;
    }

    boolean overScrollByCompat(int, int, int, int, int, int, int, int, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $i4 := @parameter4: int;
        $i5 := @parameter5: int;
        $i6 := @parameter6: int;
        $i7 := @parameter7: int;
        $z0 := @parameter8: boolean;
        $i8 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>($r0);
        $i9 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeHorizontalScrollRange()>();
        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeHorizontalScrollExtent()>();
        if $i9 <= $i10 goto label11;

        $z0 = 1;

     label0:
        $i10 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeVerticalScrollRange()>();
        $i9 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int computeVerticalScrollExtent()>();
        if $i10 <= $i9 goto label12;

        $z1 = 1;

     label1:
        if $i8 == 0 goto label2;

        if $i8 != 1 goto label13;

        if $z0 == 0 goto label13;

     label2:
        $z0 = 1;

     label3:
        if $i8 == 0 goto label4;

        if $i8 != 1 goto label14;

        if $z1 == 0 goto label14;

     label4:
        $z1 = 1;

     label5:
        $i2 = $i2 + $i0;
        if $z0 != 0 goto label6;

        $i6 = 0;

     label6:
        $i1 = $i3 + $i1;
        if $z1 != 0 goto label7;

        $i7 = 0;

     label7:
        $i3 = neg $i6;
        $i8 = $i6 + $i4;
        $i6 = neg $i7;
        $i7 = $i7 + $i5;
        $z1 = 0;
        if $i2 <= $i8 goto label15;

        $i2 = $i8;
        $z1 = 1;

     label8:
        $z0 = 0;
        if $i1 <= $i7 goto label16;

        $i1 = $i7;
        $z0 = 1;

     label9:
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)>($i2, $i1, $z1, $z0);
        if $z1 != 0 goto label10;

        if $z0 == 0 goto label17;

     label10:
        return 1;

     label11:
        $z0 = 0;
        goto label0;

     label12:
        $z1 = 0;
        goto label1;

     label13:
        $z0 = 0;
        goto label3;

     label14:
        $z1 = 0;
        goto label5;

     label15:
        if $i2 >= $i3 goto label8;

        $i2 = $i3;
        $z1 = 1;
        goto label8;

     label16:
        if $i1 >= $i6 goto label9;

        $i1 = $i6;
        $z0 = 1;
        goto label9;

     label17:
        return 0;
    }

    public boolean pageScroll(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i3, $i6;
        byte $b2;
        android.view.View $r1;
        android.graphics.Rect $r2, $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        if $i0 != 130 goto label2;

        $b2 = 1;

     label0:
        $i3 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        if $b2 == 0 goto label3;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i1 = $i1 + $i3;
        $r2.<android.graphics.Rect: int top> = $i1;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i1 <= 0 goto label1;

        $i1 = $i1 + -1;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>($i1);
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i1 = $r2.<android.graphics.Rect: int top>;
        $i1 = $i1 + $i3;
        $i6 = virtualinvoke $r1.<android.view.View: int getBottom()>();
        if $i1 <= $i6 goto label1;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i6 = virtualinvoke $r1.<android.view.View: int getBottom()>();
        $i6 = $i6 - $i3;
        $r2.<android.graphics.Rect: int top> = $i6;

     label1:
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i6 = $r3.<android.graphics.Rect: int top>;
        $i6 = $i6 + $i3;
        $r2.<android.graphics.Rect: int bottom> = $i6;
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i6 = $r3.<android.graphics.Rect: int top>;
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i3 = $r3.<android.graphics.Rect: int bottom>;
        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>($i0, $i6, $i3);
        return $z0;

     label2:
        $b2 = 0;
        goto label0;

     label3:
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i6 = $i1 - $i3;
        $r3.<android.graphics.Rect: int top> = $i6;
        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $i6 = $r3.<android.graphics.Rect: int top>;
        if $i6 >= 0 goto label1;

        $r3 = $r0.<android.support.v4.widget.NestedScrollView: android.graphics.Rect mTempRect>;
        $r3.<android.graphics.Rect: int top> = 0;
        goto label1;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1, $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $r2 := @parameter1: android.view.View;
        $z0 = $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty>;
        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollToChild(android.view.View)>($r2);

     label0:
        specialinvoke $r0.<android.widget.FrameLayout: void requestChildFocus(android.view.View,android.view.View)>($r1, $r2);
        return;

     label1:
        $r0.<android.support.v4.widget.NestedScrollView: android.view.View mChildToScrollTo> = $r2;
        goto label0;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.view.View $r1;
        android.graphics.Rect $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 := @parameter0: android.view.View;
        $r2 := @parameter1: android.graphics.Rect;
        $z0 := @parameter2: boolean;
        $i0 = virtualinvoke $r1.<android.view.View: int getLeft()>();
        $i1 = virtualinvoke $r1.<android.view.View: int getScrollX()>();
        $i0 = $i0 - $i1;
        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();
        $i1 = virtualinvoke $r1.<android.view.View: int getScrollY()>();
        $i2 = $i2 - $i1;
        virtualinvoke $r2.<android.graphics.Rect: void offset(int,int)>($i0, $i2);
        $z0 = specialinvoke $r0.<android.support.v4.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>($r2, $z0);
        return $z0;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z0 := @parameter0: boolean;
        if $z0 == 0 goto label0;

        specialinvoke $r0.<android.support.v4.widget.NestedScrollView: void recycleVelocityTracker()>();

     label0:
        specialinvoke $r0.<android.widget.FrameLayout: void requestDisallowInterceptTouchEvent(boolean)>($z0);
        return;
    }

    public void requestLayout()
    {
        android.support.v4.widget.NestedScrollView $r0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r0.<android.support.v4.widget.NestedScrollView: boolean mIsLayoutDirty> = 1;
        specialinvoke $r0.<android.widget.FrameLayout: void requestLayout()>();
        return;
    }

    public void scrollTo(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2, $i4;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i2 <= 0 goto label1;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);
        $i4 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getWidth()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingRight()>();
        $i4 = $i4 - $i2;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingLeft()>();
        $i4 = $i4 - $i2;
        $i2 = virtualinvoke $r1.<android.view.View: int getWidth()>();
        $i4 = staticinvoke <android.support.v4.widget.NestedScrollView: int clamp(int,int,int)>($i0, $i4, $i2);
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i2 = $i2 - $i0;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();
        $i2 = $i2 - $i0;
        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();
        $i2 = staticinvoke <android.support.v4.widget.NestedScrollView: int clamp(int,int,int)>($i1, $i2, $i0);
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        if $i4 != $i1 goto label0;

        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        if $i2 == $i1 goto label1;

     label0:
        specialinvoke $r0.<android.widget.FrameLayout: void scrollTo(int,int)>($i4, $i2);

     label1:
        return;
    }

    public void setFillViewport(boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z0 := @parameter0: boolean;
        $z1 = $r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport>;
        if $z0 == $z1 goto label0;

        $r0.<android.support.v4.widget.NestedScrollView: boolean mFillViewport> = $z0;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void requestLayout()>();

     label0:
        return;
    }

    public void setNestedScrollingEnabled(boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z0 := @parameter0: boolean;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;
        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>($z0);
        return;
    }

    public void setSmoothScrollingEnabled(boolean)
    {
        android.support.v4.widget.NestedScrollView $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $z0 := @parameter0: boolean;
        $r0.<android.support.v4.widget.NestedScrollView: boolean mSmoothScrollingEnabled> = $z0;
        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        android.support.v4.widget.NestedScrollView $r0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        return 1;
    }

    public final void smoothScrollBy(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2;
        long $l3, $l5;
        byte $b6;
        android.view.View $r1;
        android.support.v4.widget.ScrollerCompat $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getChildCount()>();
        if $i2 != 0 goto label1;

     label0:
        return;

     label1:
        $l5 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();
        $l3 = $r0.<android.support.v4.widget.NestedScrollView: long mLastScroll>;
        $l3 = $l5 - $l3;
        $b6 = $l3 cmp 250L;
        if $b6 <= 0 goto label3;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getHeight()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingBottom()>();
        $i2 = $i0 - $i2;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getPaddingTop()>();
        $i2 = $i2 - $i0;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: android.view.View getChildAt(int)>(0);
        $i0 = virtualinvoke $r1.<android.view.View: int getHeight()>();
        $i2 = $i0 - $i2;
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);
        $i0 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i1 = $i0 + $i1;
        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);
        $i2 = $i2 - $i0;
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $i1 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void startScroll(int,int,int,int)>($i1, $i0, 0, $i2);
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);

     label2:
        $l5 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();
        $r0.<android.support.v4.widget.NestedScrollView: long mLastScroll> = $l5;
        goto label0;

     label3:
        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        $z0 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: boolean isFinished()>();
        if $z0 != 0 goto label4;

        $r2 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.widget.ScrollerCompat mScroller>;
        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

     label4:
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void scrollBy(int,int)>($i0, $i1);
        goto label2;
    }

    public final void smoothScrollTo(int, int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollX()>();
        $i0 = $i0 - $i2;
        $i2 = virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: int getScrollY()>();
        $i2 = $i1 - $i2;
        virtualinvoke $r0.<android.support.v4.widget.NestedScrollView: void smoothScrollBy(int,int)>($i0, $i2);
        return;
    }

    public boolean startNestedScroll(int)
    {
        android.support.v4.widget.NestedScrollView $r0;
        int $i0;
        android.support.v4.view.NestedScrollingChildHelper $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;
        $z0 = virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>($i0);
        return $z0;
    }

    public void stopNestedScroll()
    {
        android.support.v4.widget.NestedScrollView $r0;
        android.support.v4.view.NestedScrollingChildHelper $r1;

        $r0 := @this: android.support.v4.widget.NestedScrollView;
        $r1 = $r0.<android.support.v4.widget.NestedScrollView: android.support.v4.view.NestedScrollingChildHelper mChildHelper>;
        virtualinvoke $r1.<android.support.v4.view.NestedScrollingChildHelper: void stopNestedScroll()>();
        return;
    }
}
