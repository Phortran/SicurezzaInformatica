public class android.support.v4.media.session.MediaSessionCompat extends java.lang.Object
{
    public static final int FLAG_HANDLES_MEDIA_BUTTONS;
    public static final int FLAG_HANDLES_TRANSPORT_CONTROLS;
    private final java.util.ArrayList mActiveListeners;
    private final android.support.v4.media.session.MediaControllerCompat mController;
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl;

    private void <init>(android.content.Context, android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.content.Context $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;
        java.util.ArrayList $r3;
        android.support.v4.media.session.MediaControllerCompat $r4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        $r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners> = $r3;
        $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r2;
        $r4 = new android.support.v4.media.session.MediaControllerCompat;
        specialinvoke $r4.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat)>($r1, $r0);
        $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat mController> = $r4;
        return;
    }

    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.content.ComponentName $r3;
        android.app.PendingIntent $r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 $r7;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r8;
        android.support.v4.media.session.MediaControllerCompat $r9;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r10;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: java.lang.String;
        $r3 := @parameter2: android.content.ComponentName;
        $r4 := @parameter3: android.app.PendingIntent;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        $r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners> = $r5;
        if $r1 != null goto label0;

        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("context must not be null");
        throw $r6;

     label0:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);
        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;
        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("tag must not be null or empty");
        throw $r6;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 21 goto label3;

        $r7 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21;
        specialinvoke $r7.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21: void <init>(android.content.Context,java.lang.String)>($r1, $r2);
        $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r7;
        $r8 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r8.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setMediaButtonReceiver(android.app.PendingIntent)>($r4);

     label2:
        $r9 = new android.support.v4.media.session.MediaControllerCompat;
        specialinvoke $r9.<android.support.v4.media.session.MediaControllerCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat)>($r1, $r0);
        $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat mController> = $r9;
        return;

     label3:
        $r10 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        specialinvoke $r10.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)>($r1, $r2, $r3, $r4);
        $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl> = $r10;
        goto label2;
    }

    public static android.support.v4.media.session.MediaSessionCompat obtain(android.content.Context, java.lang.Object)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.support.v4.media.session.MediaSessionCompat $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 $r3;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: java.lang.Object;
        $r2 = new android.support.v4.media.session.MediaSessionCompat;
        $r3 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21;
        specialinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21: void <init>(java.lang.Object)>($r1);
        specialinvoke $r2.<android.support.v4.media.session.MediaSessionCompat: void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl)>($r0, $r3);
        return $r2;
    }

    public void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.ArrayList $r4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener;
        if $r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener may not be null");
        throw $r2;

     label0:
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners>;
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);
        return;
    }

    public android.support.v4.media.session.MediaControllerCompat getController()
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaControllerCompat $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat mController>;
        return $r1;
    }

    public java.lang.Object getMediaSession()
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        java.lang.Object $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: java.lang.Object getMediaSession()>();
        return $r2;
    }

    public java.lang.Object getRemoteControlClient()
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        java.lang.Object $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: java.lang.Object getRemoteControlClient()>();
        return $r2;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        android.support.v4.media.session.MediaSessionCompat$Token $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        $r2 = interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()>();
        return $r2;
    }

    public boolean isActive()
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        $z0 = interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: boolean isActive()>();
        return $z0;
    }

    public void release()
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void release()>();
        return;
    }

    public void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener $r1;
        java.lang.IllegalArgumentException $r2;
        java.util.ArrayList $r4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener;
        if $r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Listener may not be null");
        throw $r2;

     label0:
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners>;
        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);
        return;
    }

    public void sendSessionEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.os.Bundle;
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);
        if $z0 == 0 goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event cannot be null or empty");
        throw $r3;

     label0:
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r4.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void sendSessionEvent(java.lang.String,android.os.Bundle)>($r1, $r2);
        return;
    }

    public void setActive(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        boolean $z0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r3;
        java.util.ArrayList $r4;
        android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $z0 := @parameter0: boolean;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setActive(boolean)>($z0);
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat: java.util.ArrayList mActiveListeners>;
        $r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();
        $r5 = (android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) $r2;
        interfaceinvoke $r5.<android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener: void onActiveChanged()>();
        goto label0;

     label1:
        return;
    }

    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;
        virtualinvoke $r0.<android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)>($r1, null);
        return;
    }

    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback, android.os.Handler)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r1;
        android.os.Handler $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r3;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;
        $r2 := @parameter1: android.os.Handler;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        if $r2 == null goto label1;

     label0:
        interfaceinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)>($r1, $r2);
        return;

     label1:
        $r2 = new android.os.Handler;
        specialinvoke $r2.<android.os.Handler: void <init>()>();
        goto label0;
    }

    public void setExtras(android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.os.Bundle $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.os.Bundle;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setExtras(android.os.Bundle)>($r1);
        return;
    }

    public void setFlags(int)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setFlags(int)>($i0);
        return;
    }

    public void setMediaButtonReceiver(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.app.PendingIntent $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.app.PendingIntent;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setMediaButtonReceiver(android.app.PendingIntent)>($r1);
        return;
    }

    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);
        return;
    }

    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r1);
        return;
    }

    public void setPlaybackToLocal(int)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setPlaybackToLocal(int)>($i0);
        return;
    }

    public void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.support.v4.media.VolumeProviderCompat $r1;
        java.lang.IllegalArgumentException $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.support.v4.media.VolumeProviderCompat;
        if $r1 != null goto label0;

        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("volumeProvider may not be null!");
        throw $r2;

     label0:
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r4.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)>($r1);
        return;
    }

    public void setQueue(java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        java.util.List $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: java.util.List;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setQueue(java.util.List)>($r1);
        return;
    }

    public void setQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        java.lang.CharSequence $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: java.lang.CharSequence;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setQueueTitle(java.lang.CharSequence)>($r1);
        return;
    }

    public void setRatingType(int)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        int $i0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r1.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setRatingType(int)>($i0);
        return;
    }

    public void setSessionActivity(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat $r0;
        android.app.PendingIntent $r1;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat;
        $r1 := @parameter0: android.app.PendingIntent;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl>;
        interfaceinvoke $r2.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl: void setSessionActivity(android.app.PendingIntent)>($r1);
        return;
    }
}
