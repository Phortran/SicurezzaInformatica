class com.google.b.a.a.ap extends java.lang.Object
{

    static java.lang.String a(com.google.b.a.a.ao, long)
    {
        com.google.b.a.a.ao $r0;
        long $l0, $l2;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;
        byte $b3;

        $r0 := @parameter0: com.google.b.a.a.ao;
        $l0 := @parameter1: long;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r0.<com.google.b.a.a.ao: java.lang.String a()>();
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $l2 = virtualinvoke $r0.<com.google.b.a.a.ao: long c()>();
        $b3 = $l2 cmp 0L;
        if $b3 <= 0 goto label0;

        $l2 = virtualinvoke $r0.<com.google.b.a.a.ao: long c()>();
        $l2 = $l0 - $l2;
        $b3 = $l2 cmp 0L;
        if $b3 < 0 goto label0;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&qt");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

     label0:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&z");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $l2 = virtualinvoke $r0.<com.google.b.a.a.ao: long b()>();
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;
    }

    static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;
        java.io.UnsupportedEncodingException $r3;
        java.lang.AssertionError $r4;

        $r0 := @parameter0: java.lang.String;

     label0:
        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

     label1:
        return $r1;

     label2:
        $r3 := @caughtexception;
        $r4 = new java.lang.AssertionError;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URL encoding failed for: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r1);
        throw $r4;

        catch java.io.UnsupportedEncodingException from label0 to label1 with label2;
    }

    static java.util.Map a(java.util.Map)
    {
        java.util.Map $r0;
        java.util.Set $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.util.Map$Entry $r6;
        java.lang.String $r7;

        $r0 := @parameter0: java.util.Map;
        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();
        $r4 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();
        $r6 = (java.util.Map$Entry) $r2;
        $r2 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r7 = (java.lang.String) $r2;
        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("&");
        if $z0 == 0 goto label0;

        $r2 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        if $r2 == null goto label0;

        $r2 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r7 = (java.lang.String) $r2;
        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>(1);
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);
        if $z0 != 0 goto label0;

        $r2 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r2);
        goto label0;

     label1:
        return $r3;
    }
}
