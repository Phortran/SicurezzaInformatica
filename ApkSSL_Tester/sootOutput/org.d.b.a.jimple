public class org.d.b.a extends java.lang.Object
{

    public static java.lang.String a(java.util.Date, int)
    {
        java.util.Date $r0;
        int $i0, $i1, $i5;
        java.util.Calendar $r1;
        java.lang.String $r2;
        char $c3;
        java.util.TimeZone $r3;
        java.lang.StringBuffer $r4;

        $r0 := @parameter0: java.util.Date;
        $i0 := @parameter1: int;
        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");
        virtualinvoke $r1.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r3);
        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r0);
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $i1 = $i0 & 1;
        if $i1 == 0 goto label0;

        $i5 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);
        $i1 = $i5 / 100;
        staticinvoke <org.d.b.a: void a(java.lang.StringBuffer,int)>($r4, $i1);
        $i5 = $i5 % 100;
        staticinvoke <org.d.b.a: void a(java.lang.StringBuffer,int)>($r4, $i5);
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);
        $i5 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);
        $i5 = $i5 + 0;
        $i5 = $i5 + 1;
        staticinvoke <org.d.b.a: void a(java.lang.StringBuffer,int)>($r4, $i5);
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);
        $i5 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);
        staticinvoke <org.d.b.a: void a(java.lang.StringBuffer,int)>($r4, $i5);
        if $i0 != 3 goto label0;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("T");

     label0:
        $i5 = $i0 & 2;
        if $i5 == 0 goto label1;

        $i5 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(11);
        staticinvoke <org.d.b.a: void a(java.lang.StringBuffer,int)>($r4, $i5);
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);
        $i5 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(12);
        staticinvoke <org.d.b.a: void a(java.lang.StringBuffer,int)>($r4, $i5);
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);
        $i5 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(13);
        staticinvoke <org.d.b.a: void a(java.lang.StringBuffer,int)>($r4, $i5);
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);
        $i5 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(14);
        $i1 = $i5 / 100;
        $i1 = $i1 + 48;
        $c3 = (char) $i1;
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);
        $i5 = $i5 % 100;
        staticinvoke <org.d.b.a: void a(java.lang.StringBuffer,int)>($r4, $i5);
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(90);

     label1:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }

    public static java.util.Date a(java.lang.String, int)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3;
        java.util.Calendar $r1;
        java.util.Date $r3;
        char $c9;
        java.lang.StringBuilder $r4;
        java.util.TimeZone $r5;
        java.lang.RuntimeException $r6;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $i3 = 8;
        $i2 = 0;
        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
        $i1 = $i0 & 1;
        if $i1 == 0 goto label8;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 4);
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(1, $i1);
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(5, 7);
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        $i1 = $i1 + -1;
        $i1 = $i1 + 0;
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(2, $i1);
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(8, 10);
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(5, $i1);
        if $i0 != 3 goto label0;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();
        if $i1 >= 11 goto label1;

     label0:
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(11, 0);
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(12, 0);
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(13, 0);
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(14, 0);
        $r3 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();
        return $r3;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(11);

     label2:
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(11, $i1);
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(3, 5);
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(12, $i1);
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(6, 8);
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(13, $i1);
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();
        if 8 >= $i1 goto label10;

        $c9 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(8);
        if $c9 != 46 goto label10;

        $i1 = 100;

     label3:
        $i3 = $i3 + 1;
        $c9 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);
        if $c9 < 48 goto label4;

        if $c9 <= 57 goto label9;

     label4:
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(14, $i2);

     label5:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();
        if $i3 >= $i2 goto label7;

        $c9 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);
        if $c9 == 43 goto label6;

        $c9 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);
        if $c9 != 45 goto label11;

     label6:
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i3);
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r2);
        virtualinvoke $r1.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r5);

     label7:
        $r3 = virtualinvoke $r1.<java.util.Calendar: java.util.Date getTime()>();
        return $r3;

     label8:
        $r3 = new java.util.Date;
        specialinvoke $r3.<java.util.Date: void <init>(long)>(0L);
        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r3);
        goto label2;

     label9:
        $i0 = $c9 + -48;
        $i0 = $i0 * $i1;
        $i2 = $i2 + $i0;
        $i1 = $i1 / 10;
        goto label3;

     label10:
        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(14, 0);
        goto label5;

     label11:
        $c9 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i3);
        if $c9 != 90 goto label12;

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");
        virtualinvoke $r1.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>($r5);
        goto label7;

     label12:
        $r6 = new java.lang.RuntimeException;
        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("illegal time format!");
        throw $r6;
    }

    static void a(java.lang.StringBuffer, int)
    {
        java.lang.StringBuffer $r0;
        int $i0, $i1;
        char $c2;

        $r0 := @parameter0: java.lang.StringBuffer;
        $i0 := @parameter1: int;
        $i1 = $i0 / 10;
        $i1 = $i1 + 48;
        $c2 = (char) $i1;
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);
        $i1 = $i0 % 10;
        $i1 = $i1 + 48;
        $c2 = (char) $i1;
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);
        return;
    }
}
