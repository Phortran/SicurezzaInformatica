public final class android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround extends java.lang.Object
{
    private java.lang.reflect.Method mGetStatusCodeMethod;
    private int mStatusConnecting;

    public void <init>()
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround $r0;
        java.lang.reflect.Field $r1;
        int $i0;
        java.lang.UnsupportedOperationException $r2;
        java.lang.Class $r3;
        java.lang.Class[] $r5;
        java.lang.reflect.Method $r6;
        java.lang.IllegalAccessException $r7;
        java.lang.NoSuchMethodException $r8;
        java.lang.NoSuchFieldException $r9;

        $r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 == 17 goto label0;

        $r2 = new java.lang.UnsupportedOperationException;
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r2;

     label0:
        $r3 = class "android/media/MediaRouter$RouteInfo";

     label1:
        $r1 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("STATUS_CONNECTING");
        $i0 = virtualinvoke $r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
        $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: int mStatusConnecting> = $i0;
        $r3 = class "android/media/MediaRouter$RouteInfo";
        $r5 = newarray (java.lang.Class)[0];
        $r6 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getStatusCode", $r5);

     label2:
        $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod> = $r6;

     label3:
        return;

     label4:
        $r7 := @caughtexception;
        goto label3;

     label5:
        $r8 := @caughtexception;
        goto label3;

     label6:
        $r9 := @caughtexception;
        goto label3;

        catch java.lang.NoSuchFieldException from label1 to label2 with label6;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public boolean isConnecting(java.lang.Object)
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround $r0;
        java.lang.Object $r1;
        int $i0, $i2;
        java.lang.reflect.Method $r2;
        android.media.MediaRouter$RouteInfo $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r5;
        java.lang.reflect.InvocationTargetException $r6;
        java.lang.IllegalAccessException $r7;

        $r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround;
        $r1 := @parameter0: java.lang.Object;
        $r3 = (android.media.MediaRouter$RouteInfo) $r1;
        $r2 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod>;
        if $r2 == null goto label4;

        $r2 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod>;
        $r4 = newarray (java.lang.Object)[0];

     label0:
        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r4);
        $r5 = (java.lang.Integer) $r1;
        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

     label1:
        $i2 = $r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: int mStatusConnecting>;
        if $i0 != $i2 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $r6 := @caughtexception;

     label4:
        return 0;

     label5:
        $r7 := @caughtexception;
        goto label4;

        catch java.lang.IllegalAccessException from label0 to label1 with label5;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label3;
    }
}
