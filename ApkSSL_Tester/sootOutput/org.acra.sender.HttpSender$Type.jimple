public abstract enum class org.acra.sender.HttpSender$Type extends java.lang.Enum
{
    private static final org.acra.sender.HttpSender$Type[] $VALUES;
    public static final enum org.acra.sender.HttpSender$Type FORM;
    public static final enum org.acra.sender.HttpSender$Type JSON;

    static void <clinit>()
    {
        org.acra.sender.HttpSender$Type$1 $r0;
        org.acra.sender.HttpSender$Type$2 $r2;
        org.acra.sender.HttpSender$Type[] $r3;
        org.acra.sender.HttpSender$Type $r4;

        $r0 = new org.acra.sender.HttpSender$Type$1;
        specialinvoke $r0.<org.acra.sender.HttpSender$Type$1: void <init>(java.lang.String,int)>("FORM", 0);
        <org.acra.sender.HttpSender$Type: org.acra.sender.HttpSender$Type FORM> = $r0;
        $r2 = new org.acra.sender.HttpSender$Type$2;
        specialinvoke $r2.<org.acra.sender.HttpSender$Type$2: void <init>(java.lang.String,int)>("JSON", 1);
        <org.acra.sender.HttpSender$Type: org.acra.sender.HttpSender$Type JSON> = $r2;
        $r3 = newarray (org.acra.sender.HttpSender$Type)[2];
        $r4 = <org.acra.sender.HttpSender$Type: org.acra.sender.HttpSender$Type FORM>;
        $r3[0] = $r4;
        $r4 = <org.acra.sender.HttpSender$Type: org.acra.sender.HttpSender$Type JSON>;
        $r3[1] = $r4;
        <org.acra.sender.HttpSender$Type: org.acra.sender.HttpSender$Type[] $VALUES> = $r3;
        return;
    }

    private void <init>(java.lang.String, int)
    {
        org.acra.sender.HttpSender$Type $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: org.acra.sender.HttpSender$Type;
        $r1 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        specialinvoke $r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);
        return;
    }

    void <init>(java.lang.String, int, org.acra.sender.HttpSender$1)
    {
        org.acra.sender.HttpSender$Type $r0;
        java.lang.String $r1;
        int $i0;
        org.acra.sender.HttpSender$1 $r2;

        $r0 := @this: org.acra.sender.HttpSender$Type;
        $r1 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $r2 := @parameter2: org.acra.sender.HttpSender$1;
        specialinvoke $r0.<org.acra.sender.HttpSender$Type: void <init>(java.lang.String,int)>($r1, $i0);
        return;
    }

    public static org.acra.sender.HttpSender$Type valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r2;
        org.acra.sender.HttpSender$Type $r3;

        $r0 := @parameter0: java.lang.String;
        $r2 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/acra/sender/HttpSender$Type", $r0);
        $r3 = (org.acra.sender.HttpSender$Type) $r2;
        return $r3;
    }

    public static org.acra.sender.HttpSender$Type[] values()
    {
        org.acra.sender.HttpSender$Type[] $r0;
        java.lang.Object $r1;

        $r0 = <org.acra.sender.HttpSender$Type: org.acra.sender.HttpSender$Type[] $VALUES>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();
        $r0 = (org.acra.sender.HttpSender$Type[]) $r1;
        return $r0;
    }

    public abstract java.lang.String getContentType();
}
