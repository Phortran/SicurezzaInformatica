final class com.a.a.ac extends java.io.InputStream
{
    private final java.io.InputStream a;
    private long b;
    private long c;
    private long d;
    private long e;

    public void <init>(java.io.InputStream)
    {
        com.a.a.ac $r0;
        java.io.InputStream $r1;

        $r0 := @this: com.a.a.ac;
        $r1 := @parameter0: java.io.InputStream;
        specialinvoke $r0.<com.a.a.ac: void <init>(java.io.InputStream,int)>($r1, 4096);
        return;
    }

    public void <init>(java.io.InputStream, int)
    {
        com.a.a.ac $r0;
        java.io.InputStream $r1;
        int $i0;
        boolean $z0;
        java.io.BufferedInputStream $r2;

        $r0 := @this: com.a.a.ac;
        $r1 := @parameter0: java.io.InputStream;
        $i0 := @parameter1: int;
        specialinvoke $r0.<java.io.InputStream: void <init>()>();
        $r0.<com.a.a.ac: long e> = -1L;
        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();
        if $z0 != 0 goto label0;

        $r2 = new java.io.BufferedInputStream;
        specialinvoke $r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r1, $i0);
        $r1 = $r2;

     label0:
        $r0.<com.a.a.ac: java.io.InputStream a> = $r1;
        return;
    }

    private void a(long, long)
    {
        com.a.a.ac $r0;
        long $l0, $l1, $l3, $l4;
        byte $b2;
        java.io.InputStream $r1;
        int $i5;

        $r0 := @this: com.a.a.ac;
        $l0 := @parameter0: long;
        $l1 := @parameter1: long;

     label0:
        $b2 = $l0 cmp $l1;
        if $b2 >= 0 goto label1;

        $r1 = $r0.<com.a.a.ac: java.io.InputStream a>;
        $l3 = $l1 - $l0;
        $l4 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l3);
        $b2 = $l4 cmp 0L;
        if $b2 != 0 goto label3;

        $i5 = virtualinvoke $r0.<com.a.a.ac: int read()>();
        if $i5 != -1 goto label2;

     label1:
        return;

     label2:
        $l4 = 1L;

     label3:
        $l0 = $l0 + $l4;
        goto label0;
    }

    private void b(long)
    {
        com.a.a.ac $r0;
        long $l0, $l1, $l2;
        java.lang.String $r1;
        java.lang.StringBuilder $r2;
        byte $b3;
        java.io.InputStream $r3;
        int $i4;
        java.io.IOException $r4;
        java.lang.IllegalStateException $r5;

        $r0 := @this: com.a.a.ac;
        $l0 := @parameter0: long;
        $l1 = $r0.<com.a.a.ac: long c>;
        $l2 = $r0.<com.a.a.ac: long b>;
        $b3 = $l1 cmp $l2;
        if $b3 >= 0 goto label2;

        $l2 = $r0.<com.a.a.ac: long b>;
        $l1 = $r0.<com.a.a.ac: long d>;
        $b3 = $l2 cmp $l1;
        if $b3 > 0 goto label2;

        $r3 = $r0.<com.a.a.ac: java.io.InputStream a>;

     label0:
        virtualinvoke $r3.<java.io.InputStream: void reset()>();
        $r3 = $r0.<com.a.a.ac: java.io.InputStream a>;
        $l1 = $r0.<com.a.a.ac: long c>;
        $l2 = $l0 - $l1;
        $i4 = (int) $l2;
        virtualinvoke $r3.<java.io.InputStream: void mark(int)>($i4);
        $l2 = $r0.<com.a.a.ac: long c>;
        $l1 = $r0.<com.a.a.ac: long b>;
        specialinvoke $r0.<com.a.a.ac: void a(long,long)>($l2, $l1);

     label1:
        $r0.<com.a.a.ac: long d> = $l0;
        return;

     label2:
        $l2 = $r0.<com.a.a.ac: long b>;
        $r0.<com.a.a.ac: long c> = $l2;
        $r3 = $r0.<com.a.a.ac: java.io.InputStream a>;
        $l2 = $r0.<com.a.a.ac: long b>;
        $l2 = $l0 - $l2;
        $i4 = (int) $l2;
        virtualinvoke $r3.<java.io.InputStream: void mark(int)>($i4);

     label3:
        goto label1;

     label4:
        $r4 := @caughtexception;
        $r5 = new java.lang.IllegalStateException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to mark: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);
        throw $r5;

        catch java.io.IOException from label0 to label3 with label4;
    }

    public long a(int)
    {
        com.a.a.ac $r0;
        int $i0;
        long $l1, $l2;
        byte $b3;

        $r0 := @this: com.a.a.ac;
        $i0 := @parameter0: int;
        $l1 = $r0.<com.a.a.ac: long b>;
        $l2 = (long) $i0;
        $l2 = $l1 + $l2;
        $l1 = $r0.<com.a.a.ac: long d>;
        $b3 = $l1 cmp $l2;
        if $b3 >= 0 goto label0;

        specialinvoke $r0.<com.a.a.ac: void b(long)>($l2);

     label0:
        $l2 = $r0.<com.a.a.ac: long b>;
        return $l2;
    }

    public void a(long)
    {
        com.a.a.ac $r0;
        long $l0, $l1, $l2;
        byte $b3;
        java.io.IOException $r2;
        java.io.InputStream $r3;

        $r0 := @this: com.a.a.ac;
        $l0 := @parameter0: long;
        $l1 = $r0.<com.a.a.ac: long b>;
        $l2 = $r0.<com.a.a.ac: long d>;
        $b3 = $l1 cmp $l2;
        if $b3 > 0 goto label0;

        $l2 = $r0.<com.a.a.ac: long c>;
        $b3 = $l0 cmp $l2;
        if $b3 >= 0 goto label1;

     label0:
        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Cannot reset");
        throw $r2;

     label1:
        $r3 = $r0.<com.a.a.ac: java.io.InputStream a>;
        virtualinvoke $r3.<java.io.InputStream: void reset()>();
        $l2 = $r0.<com.a.a.ac: long c>;
        specialinvoke $r0.<com.a.a.ac: void a(long,long)>($l2, $l0);
        $r0.<com.a.a.ac: long b> = $l0;
        return;
    }

    public int available()
    {
        com.a.a.ac $r0;
        java.io.InputStream $r1;
        int $i0;

        $r0 := @this: com.a.a.ac;
        $r1 = $r0.<com.a.a.ac: java.io.InputStream a>;
        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();
        return $i0;
    }

    public void close()
    {
        com.a.a.ac $r0;
        java.io.InputStream $r1;

        $r0 := @this: com.a.a.ac;
        $r1 = $r0.<com.a.a.ac: java.io.InputStream a>;
        virtualinvoke $r1.<java.io.InputStream: void close()>();
        return;
    }

    public void mark(int)
    {
        com.a.a.ac $r0;
        int $i0;
        long $l1;

        $r0 := @this: com.a.a.ac;
        $i0 := @parameter0: int;
        $l1 = virtualinvoke $r0.<com.a.a.ac: long a(int)>($i0);
        $r0.<com.a.a.ac: long e> = $l1;
        return;
    }

    public boolean markSupported()
    {
        com.a.a.ac $r0;
        java.io.InputStream $r1;
        boolean $z0;

        $r0 := @this: com.a.a.ac;
        $r1 = $r0.<com.a.a.ac: java.io.InputStream a>;
        $z0 = virtualinvoke $r1.<java.io.InputStream: boolean markSupported()>();
        return $z0;
    }

    public int read()
    {
        com.a.a.ac $r0;
        java.io.InputStream $r1;
        int $i2;
        long $l4;

        $r0 := @this: com.a.a.ac;
        $r1 = $r0.<com.a.a.ac: java.io.InputStream a>;
        $i2 = virtualinvoke $r1.<java.io.InputStream: int read()>();
        if $i2 == -1 goto label0;

        $l4 = $r0.<com.a.a.ac: long b>;
        $l4 = $l4 + 1L;
        $r0.<com.a.a.ac: long b> = $l4;

     label0:
        return $i2;
    }

    public int read(byte[])
    {
        com.a.a.ac $r0;
        byte[] $r1;
        java.io.InputStream $r2;
        long $l1, $l4;
        int $i2;

        $r0 := @this: com.a.a.ac;
        $r1 := @parameter0: byte[];
        $r2 = $r0.<com.a.a.ac: java.io.InputStream a>;
        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>($r1);
        if $i2 == -1 goto label0;

        $l4 = $r0.<com.a.a.ac: long b>;
        $l1 = (long) $i2;
        $l4 = $l4 + $l1;
        $r0.<com.a.a.ac: long b> = $l4;

     label0:
        return $i2;
    }

    public int read(byte[], int, int)
    {
        com.a.a.ac $r0;
        byte[] $r1;
        int $i0, $i1;
        java.io.InputStream $r2;
        long $l3, $l4;

        $r0 := @this: com.a.a.ac;
        $r1 := @parameter0: byte[];
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r2 = $r0.<com.a.a.ac: java.io.InputStream a>;
        $i1 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i0, $i1);
        if $i1 == -1 goto label0;

        $l4 = $r0.<com.a.a.ac: long b>;
        $l3 = (long) $i1;
        $l4 = $l4 + $l3;
        $r0.<com.a.a.ac: long b> = $l4;

     label0:
        return $i1;
    }

    public void reset()
    {
        com.a.a.ac $r0;
        long $l0;

        $r0 := @this: com.a.a.ac;
        $l0 = $r0.<com.a.a.ac: long e>;
        virtualinvoke $r0.<com.a.a.ac: void a(long)>($l0);
        return;
    }

    public long skip(long)
    {
        com.a.a.ac $r0;
        long $l0, $l1, $l2;
        java.io.InputStream $r1;

        $r0 := @this: com.a.a.ac;
        $l0 := @parameter0: long;
        $r1 = $r0.<com.a.a.ac: java.io.InputStream a>;
        $l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l0);
        $l0 = $r0.<com.a.a.ac: long b>;
        $l2 = $l0 + $l1;
        $r0.<com.a.a.ac: long b> = $l2;
        return $l1;
    }
}
