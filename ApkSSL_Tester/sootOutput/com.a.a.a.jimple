public final class com.a.a.a extends java.lang.Object implements java.io.Closeable
{
    static final java.lang.String a;
    static final java.util.regex.Pattern b;
    private static final java.io.OutputStream d;
    final java.util.concurrent.ThreadPoolExecutor c;
    private final int e;
    private final java.io.File f;
    private final java.io.File g;
    private final java.io.File h;
    private final java.io.File i;
    private java.io.Writer j;
    private final java.util.LinkedHashMap k;
    private long l;
    private long m;
    private int n;
    private long o;
    private final int p;
    private final java.util.concurrent.Callable q;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        com.a.a.b $r3;

        $r0 = class "com/a/a/a";
        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();
        <com.a.a.a: java.lang.String a> = $r1;
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-z0-9_-]{1,120}");
        <com.a.a.a: java.util.regex.Pattern b> = $r2;
        $r3 = new com.a.a.b;
        specialinvoke $r3.<com.a.a.b: void <init>()>();
        <com.a.a.a: java.io.OutputStream d> = $r3;
        return;
    }

    private void <init>(java.io.File)
    {
        com.a.a.a $r0;
        java.io.File $r1, $r7;
        java.util.LinkedHashMap $r2;
        java.util.concurrent.ThreadPoolExecutor $r3;
        java.util.concurrent.TimeUnit $r4;
        java.util.concurrent.LinkedBlockingQueue $r5;
        com.a.a.c $r6;
        int i3;

        $r0 := @this: com.a.a.a;
        $r1 := @parameter0: java.io.File;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r3 = new java.util.concurrent.ThreadPoolExecutor;
        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
        $r5 = new java.util.concurrent.LinkedBlockingQueue;
        specialinvoke $r5.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();
        i3 = (int) 1;
        specialinvoke $r3.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>(0, i3, 60L, $r4, $r5);
        $r0.<com.a.a.a: java.util.concurrent.ThreadPoolExecutor c> = $r3;
        $r2 = new java.util.LinkedHashMap;
        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(0, 0.75F, 1);
        $r0.<com.a.a.a: java.util.LinkedHashMap k> = $r2;
        $r0.<com.a.a.a: long m> = 0L;
        $r0.<com.a.a.a: long o> = 0L;
        $r6 = new com.a.a.c;
        specialinvoke $r6.<com.a.a.c: void <init>(com.a.a.a)>($r0);
        $r0.<com.a.a.a: java.util.concurrent.Callable q> = $r6;
        $r0.<com.a.a.a: java.io.File f> = $r1;
        i3 = (int) 1;
        $r0.<com.a.a.a: int e> = i3;
        $r7 = new java.io.File;
        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "journal");
        $r0.<com.a.a.a: java.io.File g> = $r7;
        $r7 = new java.io.File;
        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "journal.tmp");
        $r0.<com.a.a.a: java.io.File i> = $r7;
        $r7 = new java.io.File;
        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "journal.bkp");
        $r0.<com.a.a.a: java.io.File h> = $r7;
        i3 = (int) 1;
        $r0.<com.a.a.a: int p> = i3;
        $r0.<com.a.a.a: long l> = 10485760L;
        return;
    }

    public static com.a.a.a a(java.io.File)
    {
        java.io.File $r0, $r4, $r5;
        java.lang.String $r1, $r8;
        java.lang.StringBuilder $r2;
        boolean $z0;
        byte $b2;
        java.lang.IllegalArgumentException $r3;
        com.a.a.a $r6;
        java.io.IOException $r7;

        $r0 := @parameter0: java.io.File;
        $b2 = 10485760L cmp 0L;
        if $b2 > 0 goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");
        throw $r3;

     label0:
        $r4 = new java.io.File;
        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, "journal.bkp");
        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label1;

        $r5 = new java.io.File;
        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, "journal");
        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label4;

        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label1:
        $r6 = new com.a.a.a;
        specialinvoke $r6.<com.a.a.a: void <init>(java.io.File)>($r0);
        $r5 = $r6.<com.a.a.a: java.io.File g>;
        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label6;

     label2:
        specialinvoke $r6.<com.a.a.a: void g()>();
        specialinvoke $r6.<com.a.a.a: void f()>();

     label3:
        return $r6;

     label4:
        staticinvoke <com.a.a.a: void a(java.io.File,java.io.File,boolean)>($r4, $r5, 0);
        goto label1;

     label5:
        $r7 := @caughtexception;
        $r8 = <com.a.a.a: java.lang.String a>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("diskcache/diskLruCache ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is corrupt");
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, $r1, $r7);
        specialinvoke $r6.<com.a.a.a: void c()>();

     label6:
        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();
        $r6 = new com.a.a.a;
        specialinvoke $r6.<com.a.a.a: void <init>(java.io.File)>($r0);
        specialinvoke $r6.<com.a.a.a: void h()>();
        return $r6;

        catch java.io.IOException from label2 to label3 with label5;
    }

    static java.io.Writer a(com.a.a.a)
    {
        com.a.a.a $r0;
        java.io.Writer $r1;

        $r0 := @parameter0: com.a.a.a;
        $r1 = $r0.<com.a.a.a: java.io.Writer j>;
        return $r1;
    }

    static void a(com.a.a.a, com.a.a.d, boolean)
    {
        com.a.a.a $r0;
        com.a.a.d $r1;
        boolean $z0;

        $r0 := @parameter0: com.a.a.a;
        $r1 := @parameter1: com.a.a.d;
        $z0 := @parameter2: boolean;
        specialinvoke $r0.<com.a.a.a: void a(com.a.a.d,boolean)>($r1, $z0);
        return;
    }

    private void a(com.a.a.d, boolean)
    {
        com.a.a.a $r0;
        com.a.a.d $r1, $r2;
        boolean $z0, $z1;
        int $i0, $i1, $i5;
        com.a.a.e $r3;
        long $l2, $l3, $l4;
        java.lang.IllegalStateException $r4;
        java.lang.Throwable $r5;
        boolean[] $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        java.io.File $r9, $r10;
        long[] $r11;
        java.io.Writer $r12;
        byte $b7;
        java.util.concurrent.ThreadPoolExecutor $r13;
        java.util.concurrent.Callable $r14;
        java.util.LinkedHashMap $r15;

        $r0 := @this: com.a.a.a;
        $r1 := @parameter0: com.a.a.d;
        $z0 := @parameter1: boolean;
        $i0 = 0;
        entermonitor $r0;

     label0:
        $r3 = staticinvoke <com.a.a.d: com.a.a.e a(com.a.a.d)>($r1);
        $r2 = staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e)>($r3);
        if $r2 == $r1 goto label2;

        $r4 = new java.lang.IllegalStateException;
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();
        throw $r4;

     label1:
        $r5 := @caughtexception;
        exitmonitor $r0;
        throw $r5;

     label2:
        if $z0 == 0 goto label8;

     label3:
        $z1 = staticinvoke <com.a.a.e: boolean b(com.a.a.e)>($r3);
        if $z1 != 0 goto label8;

        $i5 = 0;

     label4:
        $i1 = $r0.<com.a.a.a: int p>;
        if $i5 >= $i1 goto label8;

        $r6 = staticinvoke <com.a.a.d: boolean[] b(com.a.a.d)>($r1);
        $z1 = $r6[$i5];
        if $z1 != 0 goto label5;

        virtualinvoke $r1.<com.a.a.d: void a()>();
        $r4 = new java.lang.IllegalStateException;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Newly created entry didn\'t create value for index ");
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);
        throw $r4;

     label5:
        $r9 = virtualinvoke $r3.<com.a.a.e: java.io.File b(int)>($i5);
        $z1 = virtualinvoke $r9.<java.io.File: boolean exists()>();
        if $z1 != 0 goto label7;

        virtualinvoke $r1.<com.a.a.d: void a()>();

     label6:
        exitmonitor $r0;
        return;

     label7:
        $i5 = $i5 + 1;
        goto label4;

     label8:
        $i5 = $r0.<com.a.a.a: int p>;
        if $i0 >= $i5 goto label11;

        $r9 = virtualinvoke $r3.<com.a.a.e: java.io.File b(int)>($i0);
        if $z0 == 0 goto label10;

        $z1 = virtualinvoke $r9.<java.io.File: boolean exists()>();
        if $z1 == 0 goto label9;

        $r10 = virtualinvoke $r3.<com.a.a.e: java.io.File a(int)>($i0);
        virtualinvoke $r9.<java.io.File: boolean renameTo(java.io.File)>($r10);
        $r11 = staticinvoke <com.a.a.e: long[] d(com.a.a.e)>($r3);
        $l2 = $r11[$i0];
        $l3 = virtualinvoke $r10.<java.io.File: long length()>();
        $r11 = staticinvoke <com.a.a.e: long[] d(com.a.a.e)>($r3);
        $r11[$i0] = $l3;
        $l4 = $r0.<com.a.a.a: long o>;
        $l4 = $l4 - $l2;
        $l4 = $l4 + $l3;
        $r0.<com.a.a.a: long o> = $l4;

     label9:
        $i0 = $i0 + 1;
        goto label8;

     label10:
        staticinvoke <com.a.a.a: void b(java.io.File)>($r9);
        goto label9;

     label11:
        $i5 = $r0.<com.a.a.a: int n>;
        $i5 = $i5 + 1;
        $r0.<com.a.a.a: int n> = $i5;
        staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e,com.a.a.d)>($r3, null);
        $z1 = staticinvoke <com.a.a.e: boolean b(com.a.a.e)>($r3);
        $z1 = $z1 | $z0;
        if $z1 == 0 goto label14;

        staticinvoke <com.a.a.e: boolean e(com.a.a.e)>($r3);
        $r12 = $r0.<com.a.a.a: java.io.Writer j>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("CLEAN ");
        $r8 = staticinvoke <com.a.a.e: java.lang.String f(com.a.a.e)>($r3);
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r8 = virtualinvoke $r3.<com.a.a.e: java.lang.String a()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<java.io.Writer: void write(java.lang.String)>($r8);
        if $z0 == 0 goto label12;

        $l4 = $r0.<com.a.a.a: long m>;
        $l3 = 1L + $l4;
        $r0.<com.a.a.a: long m> = $l3;
        staticinvoke <com.a.a.e: long a(com.a.a.e,long)>($r3, $l4);

     label12:
        $r12 = $r0.<com.a.a.a: java.io.Writer j>;
        virtualinvoke $r12.<java.io.Writer: void flush()>();
        $l4 = $r0.<com.a.a.a: long o>;
        $l3 = $r0.<com.a.a.a: long l>;
        $b7 = $l4 cmp $l3;
        if $b7 > 0 goto label13;

        $z1 = specialinvoke $r0.<com.a.a.a: boolean e()>();
        if $z1 == 0 goto label6;

     label13:
        $r13 = $r0.<com.a.a.a: java.util.concurrent.ThreadPoolExecutor c>;
        $r14 = $r0.<com.a.a.a: java.util.concurrent.Callable q>;
        virtualinvoke $r13.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r14);
        goto label6;

     label14:
        $r15 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $r8 = staticinvoke <com.a.a.e: java.lang.String f(com.a.a.e)>($r3);
        virtualinvoke $r15.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r8);
        $r12 = $r0.<com.a.a.a: java.io.Writer j>;
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("REMOVE ");
        $r8 = staticinvoke <com.a.a.e: java.lang.String f(com.a.a.e)>($r3);
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r12.<java.io.Writer: void write(java.lang.String)>($r8);

     label15:
        goto label12;

        catch java.lang.Throwable from label0 to label1 with label1;
        catch java.lang.Throwable from label3 to label6 with label1;
        catch java.lang.Throwable from label8 to label15 with label1;
    }

    private static void a(java.io.File, java.io.File, boolean)
    {
        java.io.File $r0, $r1;
        boolean $z0;
        java.io.IOException $r2;

        $r0 := @parameter0: java.io.File;
        $r1 := @parameter1: java.io.File;
        $z0 := @parameter2: boolean;
        if $z0 == 0 goto label0;

        staticinvoke <com.a.a.a: void b(java.io.File)>($r1);

     label0:
        $z0 = virtualinvoke $r0.<java.io.File: boolean renameTo(java.io.File)>($r1);
        if $z0 != 0 goto label1;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>()>();
        throw $r2;

     label1:
        return;
    }

    static void b(com.a.a.a)
    {
        com.a.a.a $r0;

        $r0 := @parameter0: com.a.a.a;
        specialinvoke $r0.<com.a.a.a: void i()>();
        return;
    }

    private static void b(java.io.File)
    {
        java.io.File $r0;
        boolean $z0;
        java.io.IOException $r1;

        $r0 := @parameter0: java.io.File;
        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label0;

        $z0 = virtualinvoke $r0.<java.io.File: boolean delete()>();
        if $z0 != 0 goto label0;

        $r1 = new java.io.IOException;
        specialinvoke $r1.<java.io.IOException: void <init>()>();
        throw $r1;

     label0:
        return;
    }

    private void c()
    {
        com.a.a.a $r0;
        java.io.File $r1;

        $r0 := @this: com.a.a.a;
        virtualinvoke $r0.<com.a.a.a: void close()>();
        $r1 = $r0.<com.a.a.a: java.io.File f>;
        staticinvoke <com.a.a.i: void a(java.io.File)>($r1);
        return;
    }

    static boolean c(com.a.a.a)
    {
        com.a.a.a $r0;
        boolean $z0;

        $r0 := @parameter0: com.a.a.a;
        $z0 = specialinvoke $r0.<com.a.a.a: boolean e()>();
        return $z0;
    }

    private com.a.a.d d(java.lang.String)
    {
        com.a.a.a $r0;
        java.lang.String $r1, $r3;
        java.util.LinkedHashMap $r2;
        byte $b0;
        java.lang.Object $r4;
        com.a.a.e $r5;
        long $l2;
        com.a.a.d $r6;
        java.io.Writer $r7;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.a.a.a;
        $r1 := @parameter0: java.lang.String;
        entermonitor $r0;

     label0:
        specialinvoke $r0.<com.a.a.a: void d()>();
        staticinvoke <com.a.a.a: void f(java.lang.String)>($r1);
        $r2 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $r4 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1);
        $r5 = (com.a.a.e) $r4;
        $b0 = -1L cmp -1L;
        if $b0 == 0 goto label4;

        if $r5 == null goto label2;

        $l2 = staticinvoke <com.a.a.e: long c(com.a.a.e)>($r5);

     label1:
        $b0 = $l2 cmp -1L;
        if $b0 == 0 goto label4;

     label2:
        $r6 = null;

     label3:
        exitmonitor $r0;
        return $r6;

     label4:
        if $r5 != null goto label9;

     label5:
        $r5 = new com.a.a.e;
        specialinvoke $r5.<com.a.a.e: void <init>(com.a.a.a,java.lang.String,byte)>($r0, $r1, 0);
        $r2 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

     label6:
        $r6 = new com.a.a.d;
        specialinvoke $r6.<com.a.a.d: void <init>(com.a.a.a,com.a.a.e,byte)>($r0, $r5, 0);
        staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e,com.a.a.d)>($r5, $r6);
        $r7 = $r0.<com.a.a.a: java.io.Writer j>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("DIRTY ");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r7.<java.io.Writer: void write(java.lang.String)>($r3);
        $r7 = $r0.<com.a.a.a: java.io.Writer j>;
        virtualinvoke $r7.<java.io.Writer: void flush()>();

     label7:
        goto label3;

     label8:
        $r9 := @caughtexception;
        exitmonitor $r0;
        throw $r9;

     label9:
        $r6 = staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e)>($r5);

     label10:
        if $r6 == null goto label11;

        $r6 = null;
        goto label3;

     label11:
        goto label6;

        catch java.lang.Throwable from label0 to label1 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label9 to label10 with label8;
    }

    private void d()
    {
        com.a.a.a $r0;
        java.io.Writer $r1;
        java.lang.IllegalStateException $r3;

        $r0 := @this: com.a.a.a;
        $r1 = $r0.<com.a.a.a: java.io.Writer j>;
        if $r1 != null goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cache is closed");
        throw $r3;

     label0:
        return;
    }

    static void d(com.a.a.a)
    {
        com.a.a.a $r0;

        $r0 := @parameter0: com.a.a.a;
        specialinvoke $r0.<com.a.a.a: void h()>();
        return;
    }

    static int e(com.a.a.a)
    {
        com.a.a.a $r0;

        $r0 := @parameter0: com.a.a.a;
        $r0.<com.a.a.a: int n> = 0;
        return 0;
    }

    private void e(java.lang.String)
    {
        com.a.a.a $r0;
        java.lang.String $r1, $r5, $r6;
        java.io.IOException $r2;
        int $i1, $i2, $i6;
        java.util.LinkedHashMap $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;
        java.lang.Object $r7;
        com.a.a.e $r8;
        java.lang.String[] $r9;
        com.a.a.d $r10;

        $r0 := @this: com.a.a.a;
        $r1 := @parameter0: java.lang.String;
        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(32);
        if $i1 != -1 goto label0;

        $r2 = new java.io.IOException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("unexpected journal line: ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label0:
        $i6 = $i1 + 1;
        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(32, $i6);
        if $i2 != -1 goto label2;

        $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i6);
        if $i1 != 6 goto label8;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("REMOVE");
        if $z0 == 0 goto label8;

        $r3 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r5);

     label1:
        return;

     label2:
        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i6, $i2);

     label3:
        $r3 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $r7 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r6);
        $r8 = (com.a.a.e) $r7;
        if $r8 != null goto label4;

        $r8 = new com.a.a.e;
        specialinvoke $r8.<com.a.a.e: void <init>(com.a.a.a,java.lang.String,byte)>($r0, $r6, 0);
        $r3 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

     label4:
        if $i2 == -1 goto label5;

        if $i1 != 5 goto label5;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("CLEAN");
        if $z0 == 0 goto label5;

        $i6 = $i2 + 1;
        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i6);
        $r9 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");
        staticinvoke <com.a.a.e: boolean e(com.a.a.e)>($r8);
        staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e,com.a.a.d)>($r8, null);
        staticinvoke <com.a.a.e: void a(com.a.a.e,java.lang.String[])>($r8, $r9);
        goto label1;

     label5:
        if $i2 != -1 goto label6;

        if $i1 != 5 goto label6;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("DIRTY");
        if $z0 == 0 goto label6;

        $r10 = new com.a.a.d;
        specialinvoke $r10.<com.a.a.d: void <init>(com.a.a.a,com.a.a.e,byte)>($r0, $r8, 0);
        staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e,com.a.a.d)>($r8, $r10);
        goto label1;

     label6:
        if $i2 != -1 goto label7;

        if $i1 != 4 goto label7;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("READ");
        if $z0 != 0 goto label1;

     label7:
        $r2 = new java.io.IOException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("unexpected journal line: ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);
        throw $r2;

     label8:
        $r6 = $r5;
        goto label3;
    }

    private boolean e()
    {
        com.a.a.a $r0;
        int $i0, $i2;
        java.util.LinkedHashMap $r1;

        $r0 := @this: com.a.a.a;
        $i0 = $r0.<com.a.a.a: int n>;
        if $i0 < 2000 goto label0;

        $i2 = $r0.<com.a.a.a: int n>;
        $r1 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $i0 = virtualinvoke $r1.<java.util.LinkedHashMap: int size()>();
        if $i2 < $i0 goto label0;

        return 1;

     label0:
        return 0;
    }

    static int f(com.a.a.a)
    {
        com.a.a.a $r0;
        int $i0;

        $r0 := @parameter0: com.a.a.a;
        $i0 = $r0.<com.a.a.a: int p>;
        return $i0;
    }

    private void f()
    {
        com.a.a.a $r0;
        java.io.File $r1;
        com.a.a.d $r2;
        java.util.Iterator $r3;
        int $i1, $i2;
        long[] $r4;
        java.util.Collection $r5;
        java.util.LinkedHashMap $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.a.a.e $r8;
        long $l3, $l4;

        $r0 := @this: com.a.a.a;
        $r1 = $r0.<com.a.a.a: java.io.File i>;
        staticinvoke <com.a.a.a: void b(java.io.File)>($r1);
        $r6 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $r5 = virtualinvoke $r6.<java.util.LinkedHashMap: java.util.Collection values()>();
        $r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();
        $r8 = (com.a.a.e) $r7;
        $r2 = staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e)>($r8);
        if $r2 != null goto label2;

        $i2 = 0;

     label1:
        $i1 = $r0.<com.a.a.a: int p>;
        if $i2 >= $i1 goto label0;

        $l3 = $r0.<com.a.a.a: long o>;
        $r4 = staticinvoke <com.a.a.e: long[] d(com.a.a.e)>($r8);
        $l4 = $r4[$i2];
        $l4 = $l3 + $l4;
        $r0.<com.a.a.a: long o> = $l4;
        $i2 = $i2 + 1;
        goto label1;

     label2:
        staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e,com.a.a.d)>($r8, null);
        $i2 = 0;

     label3:
        $i1 = $r0.<com.a.a.a: int p>;
        if $i2 >= $i1 goto label4;

        $r1 = virtualinvoke $r8.<com.a.a.e: java.io.File a(int)>($i2);
        staticinvoke <com.a.a.a: void b(java.io.File)>($r1);
        $r1 = virtualinvoke $r8.<com.a.a.e: java.io.File b(int)>($i2);
        staticinvoke <com.a.a.a: void b(java.io.File)>($r1);
        $i2 = $i2 + 1;
        goto label3;

     label4:
        interfaceinvoke $r3.<java.util.Iterator: void remove()>();
        goto label0;

     label5:
        return;
    }

    private static void f(java.lang.String)
    {
        java.lang.String $r0, $r3;
        java.util.regex.Pattern $r1;
        java.lang.StringBuilder $r2;
        java.util.regex.Matcher $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;

        $r0 := @parameter0: java.lang.String;
        $r1 = <com.a.a.a: java.util.regex.Pattern b>;
        $r4 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);
        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();
        if $z0 != 0 goto label0;

        $r5 = new java.lang.IllegalArgumentException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("keys must match regex [a-z0-9_-]{1,120}: \"");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);
        throw $r5;

     label0:
        return;
    }

    static java.io.File g(com.a.a.a)
    {
        com.a.a.a $r0;
        java.io.File $r1;

        $r0 := @parameter0: com.a.a.a;
        $r1 = $r0.<com.a.a.a: java.io.File f>;
        return $r1;
    }

    private void g()
    {
        com.a.a.a $r0;
        java.io.FileInputStream $r1;
        com.a.a.g $r2;
        java.io.File $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r9, $r10;
        java.nio.charset.Charset $r8;
        boolean $z0;
        int $i0, $i1;
        java.io.IOException $r11;
        java.lang.StringBuilder $r12;
        java.lang.Throwable $r13;
        java.io.EOFException $r14;
        java.util.LinkedHashMap $r15;
        java.io.BufferedWriter $r16;
        java.io.OutputStreamWriter $r17;
        java.io.FileOutputStream $r18;

        $r0 := @this: com.a.a.a;
        $r2 = new com.a.a.g;
        $r1 = new java.io.FileInputStream;
        $r3 = $r0.<com.a.a.a: java.io.File g>;
        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r3);
        $r8 = <com.a.a.i: java.nio.charset.Charset a>;
        specialinvoke $r2.<com.a.a.g: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r1, $r8);

     label0:
        $r9 = virtualinvoke $r2.<com.a.a.g: java.lang.String b()>();
        $r10 = virtualinvoke $r2.<com.a.a.g: java.lang.String b()>();
        $r4 = virtualinvoke $r2.<com.a.a.g: java.lang.String b()>();
        $r5 = virtualinvoke $r2.<com.a.a.g: java.lang.String b()>();
        $r6 = virtualinvoke $r2.<com.a.a.g: java.lang.String b()>();
        $r7 = "libcore.io.DiskLruCache";
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);
        if $z0 == 0 goto label1;

        $r7 = "1";
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r10);
        if $z0 == 0 goto label1;

        $i0 = $r0.<com.a.a.a: int e>;
        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r4);
        if $z0 == 0 goto label1;

        $i0 = $r0.<com.a.a.a: int p>;
        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r5);
        if $z0 == 0 goto label1;

        $r7 = "";
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z0 != 0 goto label3;

     label1:
        $r11 = new java.io.IOException;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("unexpected journal header: [");
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r10);
        throw $r11;

     label2:
        $r13 := @caughtexception;
        staticinvoke <com.a.a.i: void a(java.io.Closeable)>($r2);
        throw $r13;

     label3:
        $i0 = 0;

     label4:
        $r10 = virtualinvoke $r2.<com.a.a.g: java.lang.String b()>();
        specialinvoke $r0.<com.a.a.a: void e(java.lang.String)>($r10);

     label5:
        $i0 = $i0 + 1;
        goto label4;

     label6:
        $r14 := @caughtexception;

     label7:
        $r15 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $i1 = virtualinvoke $r15.<java.util.LinkedHashMap: int size()>();
        $i1 = $i0 - $i1;
        $r0.<com.a.a.a: int n> = $i1;
        $z0 = virtualinvoke $r2.<com.a.a.g: boolean a()>();
        if $z0 == 0 goto label9;

        specialinvoke $r0.<com.a.a.a: void h()>();

     label8:
        staticinvoke <com.a.a.i: void a(java.io.Closeable)>($r2);
        return;

     label9:
        $r16 = new java.io.BufferedWriter;
        $r17 = new java.io.OutputStreamWriter;
        $r18 = new java.io.FileOutputStream;
        $r3 = $r0.<com.a.a.a: java.io.File g>;
        specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r3, 1);
        $r8 = <com.a.a.i: java.nio.charset.Charset a>;
        specialinvoke $r17.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r18, $r8);
        specialinvoke $r16.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r17);
        $r0.<com.a.a.a: java.io.Writer j> = $r16;

     label10:
        goto label8;

        catch java.lang.Throwable from label0 to label2 with label2;
        catch java.io.EOFException from label4 to label5 with label6;
        catch java.lang.Throwable from label4 to label5 with label2;
        catch java.lang.Throwable from label7 to label8 with label2;
        catch java.lang.Throwable from label9 to label10 with label2;
    }

    private void h()
    {
        com.a.a.a $r0;
        java.io.Writer $r1;
        java.io.BufferedWriter $r2;
        java.io.FileOutputStream $r3;
        java.io.File $r4, $r17;
        java.lang.String $r5;
        java.io.OutputStreamWriter $r6;
        java.nio.charset.Charset $r7;
        int $i0;
        java.util.LinkedHashMap $r8;
        java.util.Collection $r9;
        java.util.Iterator $r10;
        boolean $z0;
        java.lang.Object $r11;
        com.a.a.e $r12;
        com.a.a.d $r13;
        java.lang.StringBuilder $r14;
        java.lang.Throwable $r15, $r16;

        $r0 := @this: com.a.a.a;
        entermonitor $r0;

     label0:
        $r1 = $r0.<com.a.a.a: java.io.Writer j>;
        if $r1 == null goto label1;

        $r1 = $r0.<com.a.a.a: java.io.Writer j>;
        virtualinvoke $r1.<java.io.Writer: void close()>();

     label1:
        $r2 = new java.io.BufferedWriter;
        $r6 = new java.io.OutputStreamWriter;
        $r3 = new java.io.FileOutputStream;
        $r4 = $r0.<com.a.a.a: java.io.File i>;
        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);
        $r7 = <com.a.a.i: java.nio.charset.Charset a>;
        specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r3, $r7);
        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r6);

     label2:
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("libcore.io.DiskLruCache");
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\n");
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("1");
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\n");
        $i0 = $r0.<com.a.a.a: int e>;
        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r5);
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\n");
        $i0 = $r0.<com.a.a.a: int p>;
        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r5);
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\n");
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>("\n");
        $r8 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $r9 = virtualinvoke $r8.<java.util.LinkedHashMap: java.util.Collection values()>();
        $r10 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label10;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();
        $r12 = (com.a.a.e) $r11;
        $r13 = staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e)>($r12);
        if $r13 == null goto label8;

        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("DIRTY ");
        $r5 = staticinvoke <com.a.a.e: java.lang.String f(com.a.a.e)>($r12);
        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r5 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r5);

     label4:
        goto label3;

     label5:
        $r15 := @caughtexception;

     label6:
        virtualinvoke $r2.<java.io.Writer: void close()>();
        throw $r15;

     label7:
        $r16 := @caughtexception;
        exitmonitor $r0;
        throw $r16;

     label8:
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("CLEAN ");
        $r5 = staticinvoke <com.a.a.e: java.lang.String f(com.a.a.e)>($r12);
        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r5 = virtualinvoke $r12.<com.a.a.e: java.lang.String a()>();
        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r5 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r5);

     label9:
        goto label3;

     label10:
        virtualinvoke $r2.<java.io.Writer: void close()>();
        $r4 = $r0.<com.a.a.a: java.io.File g>;
        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label11;

        $r4 = $r0.<com.a.a.a: java.io.File g>;
        $r17 = $r0.<com.a.a.a: java.io.File h>;
        staticinvoke <com.a.a.a: void a(java.io.File,java.io.File,boolean)>($r4, $r17, 1);

     label11:
        $r17 = $r0.<com.a.a.a: java.io.File i>;
        $r4 = $r0.<com.a.a.a: java.io.File g>;
        staticinvoke <com.a.a.a: void a(java.io.File,java.io.File,boolean)>($r17, $r4, 0);
        $r17 = $r0.<com.a.a.a: java.io.File h>;
        virtualinvoke $r17.<java.io.File: boolean delete()>();
        $r2 = new java.io.BufferedWriter;
        $r6 = new java.io.OutputStreamWriter;
        $r3 = new java.io.FileOutputStream;
        $r17 = $r0.<com.a.a.a: java.io.File g>;
        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r17, 1);
        $r7 = <com.a.a.i: java.nio.charset.Charset a>;
        specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r3, $r7);
        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r6);
        $r0.<com.a.a.a: java.io.Writer j> = $r2;

     label12:
        exitmonitor $r0;
        return;

        catch java.lang.Throwable from label0 to label2 with label7;
        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label5;
        catch java.lang.Throwable from label10 to label12 with label7;
    }

    private void i()
    {
        com.a.a.a $r0;
        long $l0, $l1;
        java.util.Set $r1;
        byte $b2;
        java.util.LinkedHashMap $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.String $r6;

        $r0 := @this: com.a.a.a;

     label0:
        $l0 = $r0.<com.a.a.a: long o>;
        $l1 = $r0.<com.a.a.a: long l>;
        $b2 = $l0 cmp $l1;
        if $b2 <= 0 goto label1;

        $r2 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $r1 = virtualinvoke $r2.<java.util.LinkedHashMap: java.util.Set entrySet()>();
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();
        $r5 = (java.util.Map$Entry) $r4;
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r6 = (java.lang.String) $r4;
        virtualinvoke $r0.<com.a.a.a: boolean c(java.lang.String)>($r6);
        goto label0;

     label1:
        return;
    }

    public final long a()
    {
        com.a.a.a $r0;
        long $l0;
        java.lang.Throwable $r1;

        $r0 := @this: com.a.a.a;
        entermonitor $r0;

     label0:
        $l0 = $r0.<com.a.a.a: long l>;

     label1:
        exitmonitor $r0;
        return $l0;

     label2:
        $r1 := @caughtexception;
        exitmonitor $r0;
        throw $r1;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public final com.a.a.d a(java.lang.String)
    {
        com.a.a.a $r0;
        java.lang.String $r1;
        com.a.a.d $r2;

        $r0 := @this: com.a.a.a;
        $r1 := @parameter0: java.lang.String;
        $r2 = specialinvoke $r0.<com.a.a.a: com.a.a.d d(java.lang.String)>($r1);
        return $r2;
    }

    public final void a(long)
    {
        com.a.a.a $r0;
        long $l0;
        java.util.concurrent.ThreadPoolExecutor $r1;
        java.util.concurrent.Callable $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.a.a.a;
        $l0 := @parameter0: long;
        entermonitor $r0;

     label0:
        $r0.<com.a.a.a: long l> = $l0;
        $r1 = $r0.<com.a.a.a: java.util.concurrent.ThreadPoolExecutor c>;
        $r2 = $r0.<com.a.a.a: java.util.concurrent.Callable q>;
        virtualinvoke $r1.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r2);

     label1:
        exitmonitor $r0;
        return;

     label2:
        $r3 := @caughtexception;
        exitmonitor $r0;
        throw $r3;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public final long b()
    {
        com.a.a.a $r0;
        long $l0;
        java.lang.Throwable $r1;

        $r0 := @this: com.a.a.a;
        entermonitor $r0;

     label0:
        $l0 = $r0.<com.a.a.a: long o>;

     label1:
        exitmonitor $r0;
        return $l0;

     label2:
        $r1 := @caughtexception;
        exitmonitor $r0;
        throw $r1;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public final com.a.a.f b(java.lang.String)
    {
        com.a.a.a $r0;
        java.lang.String $r1, $r6;
        java.util.LinkedHashMap $r2;
        com.a.a.f $r3;
        boolean $z0;
        int $i1, $i2;
        java.io.File $r4;
        java.io.RandomAccessFile[] $r5;
        java.lang.Object $r7;
        com.a.a.e $r8;
        java.io.RandomAccessFile $r9;
        java.io.FileNotFoundException $r10;
        java.io.Writer $r11;
        java.lang.StringBuilder $r12;
        java.util.concurrent.ThreadPoolExecutor $r13;
        java.util.concurrent.Callable $r14;
        long $l4;
        long[] $r15;
        java.lang.Throwable $r17;

        $r0 := @this: com.a.a.a;
        $r1 := @parameter0: java.lang.String;
        $r3 = null;
        entermonitor $r0;

     label0:
        specialinvoke $r0.<com.a.a.a: void d()>();
        staticinvoke <com.a.a.a: void f(java.lang.String)>($r1);
        $r2 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $r7 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1);
        $r8 = (com.a.a.e) $r7;

     label1:
        if $r8 != null goto label3;

     label2:
        exitmonitor $r0;
        return $r3;

     label3:
        $z0 = staticinvoke <com.a.a.e: boolean b(com.a.a.e)>($r8);
        if $z0 == 0 goto label2;

        $i1 = $r0.<com.a.a.a: int p>;
        $r5 = newarray (java.io.RandomAccessFile)[$i1];

     label4:
        $i2 = 0;

     label5:
        $i1 = $r0.<com.a.a.a: int p>;
        if $i2 >= $i1 goto label11;

        $r9 = new java.io.RandomAccessFile;

     label6:
        $r4 = virtualinvoke $r8.<com.a.a.e: java.io.File a(int)>($i2);
        specialinvoke $r9.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r4, "r");

     label7:
        $r5[$i2] = $r9;

     label8:
        $i2 = $i2 + 1;
        goto label5;

     label9:
        $r10 := @caughtexception;
        $i2 = 0;

     label10:
        $i1 = $r0.<com.a.a.a: int p>;
        if $i2 >= $i1 goto label2;

        $r9 = $r5[$i2];
        if $r9 == null goto label2;

        $r9 = $r5[$i2];
        staticinvoke <com.a.a.i: void a(java.io.Closeable)>($r9);
        $i2 = $i2 + 1;
        goto label10;

     label11:
        $i2 = $r0.<com.a.a.a: int n>;
        $i2 = $i2 + 1;
        $r0.<com.a.a.a: int n> = $i2;
        $r11 = $r0.<com.a.a.a: java.io.Writer j>;
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("READ ");
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r6);
        $z0 = specialinvoke $r0.<com.a.a.a: boolean e()>();
        if $z0 == 0 goto label12;

        $r13 = $r0.<com.a.a.a: java.util.concurrent.ThreadPoolExecutor c>;
        $r14 = $r0.<com.a.a.a: java.util.concurrent.Callable q>;
        virtualinvoke $r13.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r14);

     label12:
        $r3 = new com.a.a.f;
        $l4 = staticinvoke <com.a.a.e: long c(com.a.a.e)>($r8);
        $r15 = staticinvoke <com.a.a.e: long[] d(com.a.a.e)>($r8);
        specialinvoke $r3.<com.a.a.f: void <init>(com.a.a.a,java.lang.String,long,java.io.RandomAccessFile[],long[],byte)>($r0, $r1, $l4, $r5, $r15, 0);

     label13:
        goto label2;

     label14:
        $r17 := @caughtexception;
        exitmonitor $r0;
        throw $r17;

        catch java.lang.Throwable from label0 to label1 with label14;
        catch java.lang.Throwable from label3 to label4 with label14;
        catch java.io.FileNotFoundException from label6 to label7 with label9;
        catch java.lang.Throwable from label5 to label8 with label14;
        catch java.lang.Throwable from label10 to label13 with label14;
    }

    public final boolean c(java.lang.String)
    {
        com.a.a.a $r0;
        java.lang.String $r1, $r12;
        java.util.LinkedHashMap $r2;
        int $i0, $i3;
        com.a.a.d $r3;
        boolean $z0;
        long[] $r4;
        java.lang.Object $r5;
        com.a.a.e $r6;
        long $l1, $l2;
        java.io.File $r7;
        java.io.IOException $r8;
        java.lang.StringBuilder $r9;
        java.lang.Throwable $r10;
        java.io.Writer $r11;
        java.util.concurrent.ThreadPoolExecutor $r13;
        java.util.concurrent.Callable $r14;

        $r0 := @this: com.a.a.a;
        $r1 := @parameter0: java.lang.String;
        $i0 = 0;
        entermonitor $r0;

     label0:
        specialinvoke $r0.<com.a.a.a: void d()>();
        staticinvoke <com.a.a.a: void f(java.lang.String)>($r1);
        $r2 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $r5 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r1);
        $r6 = (com.a.a.e) $r5;
        if $r6 == null goto label2;

        $r3 = staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e)>($r6);

     label1:
        if $r3 == null goto label5;

     label2:
        $i0 = 0;

     label3:
        exitmonitor $r0;
        $z0 = (boolean) $i0;
        return $z0;

     label4:
        $l1 = $r0.<com.a.a.a: long o>;
        $r4 = staticinvoke <com.a.a.e: long[] d(com.a.a.e)>($r6);
        $l2 = $r4[$i0];
        $l2 = $l1 - $l2;
        $r0.<com.a.a.a: long o> = $l2;
        $r4 = staticinvoke <com.a.a.e: long[] d(com.a.a.e)>($r6);
        $r4[$i0] = 0L;
        $i0 = $i0 + 1;

     label5:
        $i3 = $r0.<com.a.a.a: int p>;
        if $i0 >= $i3 goto label7;

        $r7 = virtualinvoke $r6.<com.a.a.e: java.io.File a(int)>($i0);
        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r7.<java.io.File: boolean delete()>();
        if $z0 != 0 goto label4;

        $r8 = new java.io.IOException;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("failed to delete ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r1);
        throw $r8;

     label6:
        $r10 := @caughtexception;
        exitmonitor $r0;
        throw $r10;

     label7:
        $i3 = $r0.<com.a.a.a: int n>;
        $i3 = $i3 + 1;
        $r0.<com.a.a.a: int n> = $i3;
        $r11 = $r0.<com.a.a.a: java.io.Writer j>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("REMOVE ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r11.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r12);
        $r2 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r1);
        $z0 = specialinvoke $r0.<com.a.a.a: boolean e()>();
        if $z0 == 0 goto label8;

        $r13 = $r0.<com.a.a.a: java.util.concurrent.ThreadPoolExecutor c>;
        $r14 = $r0.<com.a.a.a: java.util.concurrent.Callable q>;
        virtualinvoke $r13.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r14);

     label8:
        $i0 = 1;
        goto label3;

        catch java.lang.Throwable from label0 to label1 with label6;
        catch java.lang.Throwable from label4 to label6 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public final void close()
    {
        com.a.a.a $r0;
        java.io.Writer $r1;
        java.util.LinkedHashMap $r2;
        com.a.a.d $r3;
        java.util.Collection $r4;
        java.util.ArrayList $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.a.a.e $r8;
        java.lang.Throwable $r9;

        $r0 := @this: com.a.a.a;
        entermonitor $r0;

     label0:
        $r1 = $r0.<com.a.a.a: java.io.Writer j>;

     label1:
        if $r1 != null goto label3;

     label2:
        exitmonitor $r0;
        return;

     label3:
        $r5 = new java.util.ArrayList;
        $r2 = $r0.<com.a.a.a: java.util.LinkedHashMap k>;
        $r4 = virtualinvoke $r2.<java.util.LinkedHashMap: java.util.Collection values()>();
        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);
        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();
        $r8 = (com.a.a.e) $r7;
        $r3 = staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e)>($r8);
        if $r3 == null goto label4;

        $r3 = staticinvoke <com.a.a.e: com.a.a.d a(com.a.a.e)>($r8);
        virtualinvoke $r3.<com.a.a.d: void a()>();

     label5:
        goto label4;

     label6:
        $r9 := @caughtexception;
        exitmonitor $r0;
        throw $r9;

     label7:
        specialinvoke $r0.<com.a.a.a: void i()>();
        $r1 = $r0.<com.a.a.a: java.io.Writer j>;
        virtualinvoke $r1.<java.io.Writer: void close()>();
        $r0.<com.a.a.a: java.io.Writer j> = null;

     label8:
        goto label2;

        catch java.lang.Throwable from label0 to label1 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
