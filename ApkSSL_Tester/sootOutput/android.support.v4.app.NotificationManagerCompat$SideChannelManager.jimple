class android.support.v4.app.NotificationManagerCompat$SideChannelManager extends java.lang.Object implements android.os.Handler$Callback, android.content.ServiceConnection
{
    private static final java.lang.String KEY_BINDER;
    private static final int MSG_QUEUE_TASK;
    private static final int MSG_RETRY_LISTENER_QUEUE;
    private static final int MSG_SERVICE_CONNECTED;
    private static final int MSG_SERVICE_DISCONNECTED;
    private java.util.Set mCachedEnabledPackages;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final android.os.HandlerThread mHandlerThread;
    private final java.util.Map mRecordMap;

    public void <init>(android.content.Context)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.Context $r1;
        java.util.HashMap $r2;
        android.os.Looper $r4;
        java.util.HashSet $r5;
        android.os.HandlerThread $r6;
        android.os.Handler $r7;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.content.Context;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap> = $r2;
        $r5 = new java.util.HashSet;
        specialinvoke $r5.<java.util.HashSet: void <init>()>();
        $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages> = $r5;
        $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext> = $r1;
        $r6 = new android.os.HandlerThread;
        specialinvoke $r6.<android.os.HandlerThread: void <init>(java.lang.String)>("NotificationManagerCompat");
        $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread> = $r6;
        $r6 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread>;
        virtualinvoke $r6.<android.os.HandlerThread: void start()>();
        $r7 = new android.os.Handler;
        $r6 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread>;
        $r4 = virtualinvoke $r6.<android.os.HandlerThread: android.os.Looper getLooper()>();
        specialinvoke $r7.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r4, $r0);
        $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler> = $r7;
        return;
    }

    private boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r1;
        android.content.Intent $r2;
        boolean $z0;
        java.lang.String $r3;
        android.content.ComponentName $r4;
        android.content.Context $r5;
        int $i0;
        java.lang.StringBuilder $r7;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;
        $z0 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;
        if $z0 == 0 goto label0;

        return 1;

     label0:
        $r2 = new android.content.Intent;
        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.support.BIND_NOTIFICATION_SIDE_CHANNEL");
        $r4 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;
        $r2 = virtualinvoke $r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r4);
        $r5 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;
        $i0 = staticinvoke <android.support.v4.app.NotificationManagerCompat: int access$000()>();
        $z0 = virtualinvoke $r5.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r2, $r0, $i0);
        $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound> = $z0;
        $z0 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;
        if $z0 == 0 goto label2;

        $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount> = 0;

     label1:
        $z0 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;
        return $z0;

     label2:
        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind to listener ");
        $r4 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotifManCompat", $r3);
        $r5 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;
        virtualinvoke $r5.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r0);
        goto label1;
    }

    private void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r1;
        boolean $z0;
        android.content.Context $r2;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;
        $z0 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound>;
        if $z0 == 0 goto label0;

        $r2 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;
        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r0);
        $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound> = 0;

     label0:
        $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service> = null;
        return;
    }

    private void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.support.v4.app.NotificationManagerCompat$Task $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        java.util.Collection $r5;
        boolean $z0;
        android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r6;
        java.util.LinkedList $r7;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.support.v4.app.NotificationManagerCompat$Task;
        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()>();
        $r4 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;
        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();
        $r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();
        $r6 = (android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r3;
        $r7 = $r6.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.LinkedList taskQueue>;
        virtualinvoke $r7.<java.util.LinkedList: boolean add(java.lang.Object)>($r1);
        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r6);
        goto label0;

     label1:
        return;
    }

    private void handleRetryListenerQueue(android.content.ComponentName)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r4;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.content.ComponentName;
        $r3 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;
        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);
        $r4 = (android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r2;
        if $r4 == null goto label0;

        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r4);

     label0:
        return;
    }

    private void handleServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r5;
        android.support.v4.app.INotificationSideChannel $r6;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.content.ComponentName;
        $r2 := @parameter1: android.os.IBinder;
        $r4 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;
        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);
        $r5 = (android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r3;
        if $r5 == null goto label0;

        $r6 = staticinvoke <android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)>($r2);
        $r5.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service> = $r6;
        $r5.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount> = 0;
        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r5);

     label0:
        return;
    }

    private void handleServiceDisconnected(android.content.ComponentName)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r4;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.content.ComponentName;
        $r3 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;
        $r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);
        $r4 = (android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r2;
        if $r4 == null goto label0;

        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r4);

     label0:
        return;
    }

    private void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r1;
        android.os.DeadObjectException $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;
        android.content.ComponentName $r7;
        java.util.LinkedList $r8;
        int $i1;
        android.support.v4.app.INotificationSideChannel $r9;
        android.support.v4.app.NotificationManagerCompat$Task $r10;
        android.os.RemoteException $r11;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);
        if $z0 == 0 goto label0;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing component ");
        $r7 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
        $r8 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.LinkedList taskQueue>;
        $i1 = virtualinvoke $r8.<java.util.LinkedList: int size()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" queued tasks");
        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r4);

     label0:
        $r8 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.LinkedList taskQueue>;
        $z0 = virtualinvoke $r8.<java.util.LinkedList: boolean isEmpty()>();
        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $z0 = specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r1);
        if $z0 == 0 goto label3;

        $r9 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service>;
        if $r9 != null goto label6;

     label3:
        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r1);
        goto label1;

     label4:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);
        if $z0 == 0 goto label5;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending task ");
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);
        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r4);

     label5:
        $r9 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service>;
        interfaceinvoke $r10.<android.support.v4.app.NotificationManagerCompat$Task: void send(android.support.v4.app.INotificationSideChannel)>($r9);
        $r8 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.LinkedList taskQueue>;
        virtualinvoke $r8.<java.util.LinkedList: java.lang.Object remove()>();

     label6:
        $r8 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.LinkedList taskQueue>;
        $r3 = virtualinvoke $r8.<java.util.LinkedList: java.lang.Object peek()>();
        $r10 = (android.support.v4.app.NotificationManagerCompat$Task) $r3;
        if $r10 != null goto label4;

     label7:
        $r8 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.LinkedList taskQueue>;
        $z0 = virtualinvoke $r8.<java.util.LinkedList: boolean isEmpty()>();
        if $z0 != 0 goto label1;

        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r1);
        goto label1;

     label8:
        $r2 := @caughtexception;
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);
        if $z0 == 0 goto label7;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote service has died: ");
        $r7 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r4);
        goto label7;

     label9:
        $r11 := @caughtexception;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException communicating with ");
        $r7 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotifManCompat", $r4, $r11);
        goto label7;

        catch android.os.DeadObjectException from label4 to label6 with label8;
        catch android.os.RemoteException from label4 to label6 with label9;
    }

    private void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r1;
        int $i0;
        android.os.Message $r2;
        android.os.Handler $r3;
        android.content.ComponentName $r4;
        java.lang.String $r5;
        boolean $z0;
        java.lang.StringBuilder $r7;
        java.util.LinkedList $r8;
        long $l3;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;
        $r3 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;
        $r4 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;
        $z0 = virtualinvoke $r3.<android.os.Handler: boolean hasMessages(int,java.lang.Object)>(3, $r4);
        if $z0 == 0 goto label1;

     label0:
        return;

     label1:
        $i0 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;
        $i0 = $i0 + 1;
        $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount> = $i0;
        $i0 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;
        if $i0 <= 6 goto label2;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Giving up on delivering ");
        $r8 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.LinkedList taskQueue>;
        $i0 = virtualinvoke $r8.<java.util.LinkedList: int size()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tasks to ");
        $r4 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" after ");
        $i0 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" retries");
        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotifManCompat", $r5);
        $r8 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.LinkedList taskQueue>;
        virtualinvoke $r8.<java.util.LinkedList: void clear()>();
        goto label0;

     label2:
        $i0 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount>;
        $i0 = $i0 + -1;
        $i0 = 1 << $i0;
        $i0 = $i0 * 1000;
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);
        if $z0 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling retry for ");
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");
        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r5);

     label3:
        $r3 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;
        $r4 = $r1.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName>;
        $r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, $r4);
        $r3 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;
        $l3 = (long) $i0;
        virtualinvoke $r3.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r2, $l3);
        goto label0;
    }

    private void updateListenerMap()
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        java.util.HashSet $r2;
        java.util.Set $r3, $r10;
        java.lang.Object $r4;
        java.util.Iterator $r5;
        java.util.List $r6;
        android.content.Context $r7;
        android.content.Intent $r8;
        java.lang.String $r9, $r14;
        boolean $z0;
        android.content.pm.PackageManager $r11;
        android.content.pm.ResolveInfo $r12;
        android.content.pm.ServiceInfo $r13;
        java.lang.StringBuilder $r15;
        java.util.Map $r16;
        android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord $r17;
        java.util.Map$Entry $r18;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r7 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;
        $r3 = staticinvoke <android.support.v4.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)>($r7);
        $r10 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages>;
        $z0 = interfaceinvoke $r3.<java.util.Set: boolean equals(java.lang.Object)>($r10);
        if $z0 == 0 goto label1;

     label0:
        return;

     label1:
        $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages> = $r3;
        $r7 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext>;
        $r11 = virtualinvoke $r7.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();
        $r8 = new android.content.Intent;
        specialinvoke $r8.<android.content.Intent: void <init>()>();
        $r8 = virtualinvoke $r8.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.support.BIND_NOTIFICATION_SIDE_CHANNEL");
        $r6 = virtualinvoke $r11.<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>($r8, 4);
        $r2 = new java.util.HashSet;
        specialinvoke $r2.<java.util.HashSet: void <init>()>();
        $r5 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();
        $r12 = (android.content.pm.ResolveInfo) $r4;
        $r13 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;
        $r9 = $r13.<android.content.pm.ServiceInfo: java.lang.String packageName>;
        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r9);
        if $z0 == 0 goto label2;

        $r1 = new android.content.ComponentName;
        $r13 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;
        $r9 = $r13.<android.content.pm.ServiceInfo: java.lang.String packageName>;
        $r13 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;
        $r14 = $r13.<android.content.pm.ServiceInfo: java.lang.String name>;
        specialinvoke $r1.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r9, $r14);
        $r13 = $r12.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;
        $r14 = $r13.<android.content.pm.ServiceInfo: java.lang.String permission>;
        if $r14 == null goto label3;

        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission present on component ");
        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);
        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", not adding listener record.");
        $r9 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NotifManCompat", $r9);
        goto label2;

     label3:
        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);
        goto label2;

     label4:
        $r5 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label7;

        $r4 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();
        $r1 = (android.content.ComponentName) $r4;
        $r16 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;
        $z0 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);
        if $z0 != 0 goto label5;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);
        if $z0 == 0 goto label6;

        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding listener record for ");
        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);
        $r9 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r9);

     label6:
        $r16 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;
        $r17 = new android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord;
        specialinvoke $r17.<android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: void <init>(android.content.ComponentName)>($r1);
        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r17);
        goto label5;

     label7:
        $r16 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap>;
        $r10 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>();
        $r5 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label8:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label0;

        $r4 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();
        $r18 = (java.util.Map$Entry) $r4;
        $r4 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getKey()>();
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r4);
        if $z0 != 0 goto label8;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);
        if $z0 == 0 goto label9;

        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing listener record for ");
        $r4 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);
        $r9 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r9);

     label9:
        $r4 = interfaceinvoke $r18.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r17 = (android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) $r4;
        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)>($r17);
        interfaceinvoke $r5.<java.util.Iterator: void remove()>();
        goto label8;
    }

    public boolean handleMessage(android.os.Message)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.os.Message $r1;
        java.lang.Object $r2;
        int $i0;
        android.os.IBinder $r3;
        android.support.v4.app.NotificationManagerCompat$Task $r4;
        android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent $r5;
        android.content.ComponentName $r6;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.os.Message;
        $i0 = $r1.<android.os.Message: int what>;
        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label0;
        };

     label0:
        return 0;

     label1:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;
        $r4 = (android.support.v4.app.NotificationManagerCompat$Task) $r2;
        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task)>($r4);
        return 1;

     label2:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;
        $r5 = (android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent) $r2;
        $r6 = $r5.<android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent: android.content.ComponentName componentName>;
        $r3 = $r5.<android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent: android.os.IBinder iBinder>;
        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)>($r6, $r3);
        return 1;

     label3:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;
        $r6 = (android.content.ComponentName) $r2;
        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void handleServiceDisconnected(android.content.ComponentName)>($r6);
        return 1;

     label4:
        $r2 = $r1.<android.os.Message: java.lang.Object obj>;
        $r6 = (android.content.ComponentName) $r2;
        specialinvoke $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)>($r6);
        return 1;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        android.os.IBinder $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.StringBuilder $r5;
        android.os.Handler $r6;
        android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent $r7;
        android.os.Message $r8;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.content.ComponentName;
        $r2 := @parameter1: android.os.IBinder;
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);
        if $z0 == 0 goto label0;

        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connected to service ");
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);
        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r3);

     label0:
        $r6 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;
        $r7 = new android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent;
        specialinvoke $r7.<android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent: void <init>(android.content.ComponentName,android.os.IBinder)>($r1, $r2);
        $r8 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r7);
        virtualinvoke $r8.<android.os.Message: void sendToTarget()>();
        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.content.ComponentName $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.StringBuilder $r4;
        android.os.Handler $r5;
        android.os.Message $r6;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.content.ComponentName;
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NotifManCompat", 3);
        if $z0 == 0 goto label0;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnected from service ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NotifManCompat", $r2);

     label0:
        $r5 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;
        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r1);
        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();
        return;
    }

    public void queueTask(android.support.v4.app.NotificationManagerCompat$Task)
    {
        android.support.v4.app.NotificationManagerCompat$SideChannelManager $r0;
        android.support.v4.app.NotificationManagerCompat$Task $r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        $r0 := @this: android.support.v4.app.NotificationManagerCompat$SideChannelManager;
        $r1 := @parameter0: android.support.v4.app.NotificationManagerCompat$Task;
        $r2 = $r0.<android.support.v4.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler>;
        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(0, $r1);
        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();
        return;
    }
}
