public class android.support.v4.widget.SlidingPaneLayout extends android.view.ViewGroup
{
    private static final int DEFAULT_FADE_COLOR;
    private static final int DEFAULT_OVERHANG_SIZE;
    static final android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL;
    private static final int MIN_FLING_VELOCITY;
    private static final java.lang.String TAG;
    private boolean mCanSlide;
    private int mCoveredFadeColor;
    private final android.support.v4.widget.ViewDragHelper mDragHelper;
    private boolean mFirstLayout;
    private float mInitialMotionX;
    private float mInitialMotionY;
    private boolean mIsUnableToDrag;
    private final int mOverhangSize;
    private android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener;
    private int mParallaxBy;
    private float mParallaxOffset;
    private final java.util.ArrayList mPostedRunnables;
    private boolean mPreservedOpenState;
    private android.graphics.drawable.Drawable mShadowDrawableLeft;
    private android.graphics.drawable.Drawable mShadowDrawableRight;
    private float mSlideOffset;
    private int mSlideRange;
    private android.view.View mSlideableView;
    private int mSliderFadeColor;
    private final android.graphics.Rect mTmpRect;

    static void <clinit>()
    {
        int $i0;
        android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 $r0;
        android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB $r1;
        android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase $r2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 17 goto label1;

        $r0 = new android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1: void <init>()>();
        <android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL> = $r0;

     label0:
        return;

     label1:
        if $i0 < 16 goto label2;

        $r1 = new android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB;
        specialinvoke $r1.<android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB: void <init>()>();
        <android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL> = $r1;
        goto label0;

     label2:
        $r2 = new android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase;
        specialinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase: void <init>()>();
        <android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL> = $r2;
        goto label0;
    }

    public void <init>(android.content.Context)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.content.Context $r1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.content.Context;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        float $f0, $f2;
        android.content.res.Resources $r3;
        android.graphics.Rect $r4;
        java.util.ArrayList $r5;
        android.util.DisplayMetrics $r6;
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate $r7;
        android.support.v4.widget.SlidingPaneLayout$DragHelperCallback $r8;
        android.support.v4.widget.ViewDragHelper $r9;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        $i0 := @parameter2: int;
        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);
        $r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor> = -858993460;
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;
        $r4 = new android.graphics.Rect;
        specialinvoke $r4.<android.graphics.Rect: void <init>()>();
        $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect> = $r4;
        $r5 = new java.util.ArrayList;
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();
        $r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables> = $r5;
        $r3 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();
        $r6 = virtualinvoke $r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f0 = $r6.<android.util.DisplayMetrics: float density>;
        $f2 = 32.0F * $f0;
        $f2 = $f2 + 0.5F;
        $i0 = (int) $f2;
        $r0.<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize> = $i0;
        staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void setWillNotDraw(boolean)>(0);
        $r7 = new android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;
        specialinvoke $r7.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: void <init>(android.support.v4.widget.SlidingPaneLayout)>($r0);
        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>($r0, $r7);
        $i0 = (int) 1;
        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>($r0, $i0);
        $r8 = new android.support.v4.widget.SlidingPaneLayout$DragHelperCallback;
        specialinvoke $r8.<android.support.v4.widget.SlidingPaneLayout$DragHelperCallback: void <init>(android.support.v4.widget.SlidingPaneLayout,android.support.v4.widget.SlidingPaneLayout$1)>($r0, null);
        $r9 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)>($r0, 0.5F, $r8);
        $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper> = $r9;
        $r9 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $f2 = 400.0F * $f0;
        virtualinvoke $r9.<android.support.v4.widget.ViewDragHelper: void setMinVelocity(float)>($f2);
        return;
    }

    static boolean access$100(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag>;
        return $z0;
    }

    static void access$1000(android.support.v4.widget.SlidingPaneLayout, android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter1: android.view.View;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void invalidateChildRegion(android.view.View)>($r1);
        return;
    }

    static java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        java.util.ArrayList $r1;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $r1 = $r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;
        return $r1;
    }

    static android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.support.v4.widget.ViewDragHelper $r1;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $r1 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        return $r1;
    }

    static float access$300(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        float $f0;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $f0 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        return $f0;
    }

    static android.view.View access$400(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $r1 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        return $r1;
    }

    static boolean access$502(android.support.v4.widget.SlidingPaneLayout, boolean)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $z0 := @parameter1: boolean;
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z0;
        return $z0;
    }

    static void access$600(android.support.v4.widget.SlidingPaneLayout, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter1: int;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void onPanelDragged(int)>($i0);
        return;
    }

    static boolean access$700(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        return $z0;
    }

    static int access$800(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;
        $i0 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;
        return $i0;
    }

    private boolean closePane(android.view.View, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        int $i0;
        boolean $z0, $z1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $z0 = 0;
        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;
        if $z1 != 0 goto label0;

        $z1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean smoothSlideTo(float,int)>(0.0F, $i0);
        if $z1 == 0 goto label1;

     label0:
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = 0;
        $z0 = 1;

     label1:
        return $z0;
    }

    private void dimChildView(android.view.View, float, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        float $f0, $f1;
        int $i0, $i1, $i4;
        android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.graphics.PorterDuff$Mode $r4;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r5;
        byte $b3;
        android.graphics.Paint $r6;
        android.graphics.PorterDuffColorFilter $r7;
        java.util.ArrayList $r8;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $f0 := @parameter1: float;
        $i0 := @parameter2: int;
        $r3 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r5 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;
        $b3 = $f0 cmpl 0.0F;
        if $b3 <= 0 goto label3;

        if $i0 == 0 goto label3;

        $i1 = -16777216 & $i0;
        $i1 = $i1 >>> 24;
        $f1 = (float) $i1;
        $f1 = $f1 * $f0;
        $i1 = (int) $f1;
        $i4 = $i1 << 24;
        $i1 = 16777215 & $i0;
        $i1 = $i4 | $i1;
        $r6 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;
        if $r6 != null goto label0;

        $r6 = new android.graphics.Paint;
        specialinvoke $r6.<android.graphics.Paint: void <init>()>();
        $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint> = $r6;

     label0:
        $r6 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;
        $r7 = new android.graphics.PorterDuffColorFilter;
        $r4 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_OVER>;
        specialinvoke $r7.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>($i1, $r4);
        virtualinvoke $r6.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r7);
        $i4 = staticinvoke <android.support.v4.view.ViewCompat: int getLayerType(android.view.View)>($r1);
        if $i4 == 2 goto label1;

        $r6 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;
        staticinvoke <android.support.v4.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)>($r1, 2, $r6);

     label1:
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void invalidateChildRegion(android.view.View)>($r1);

     label2:
        return;

     label3:
        $i4 = staticinvoke <android.support.v4.view.ViewCompat: int getLayerType(android.view.View)>($r1);
        if $i4 == 0 goto label2;

        $r6 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;
        if $r6 == null goto label4;

        $r6 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;
        virtualinvoke $r6.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

     label4:
        $r2 = new android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable;
        specialinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable: void <init>(android.support.v4.widget.SlidingPaneLayout,android.view.View)>($r0, $r1);
        $r8 = $r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;
        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);
        staticinvoke <android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>($r0, $r2);
        goto label2;
    }

    private void invalidateChildRegion(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl $r2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $r2 = <android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL>;
        interfaceinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl: void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)>($r0, $r1);
        return;
    }

    private boolean isLayoutRtlSupport()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);
        if $i1 != 1 goto label0;

        return 1;

     label0:
        return 0;
    }

    private void onPanelDragged(int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r1;
        android.view.View $r2;
        float $f0, $f1;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r3;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter0: int;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        if $r2 != null goto label1;

        $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = 0.0F;

     label0:
        return;

     label1:
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r3 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r1;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $i1 = virtualinvoke $r2.<android.view.View: int getWidth()>();
        if $z0 == 0 goto label7;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();
        $i2 = $i2 - $i0;
        $i0 = $i2 - $i1;

     label2:
        if $z0 == 0 goto label8;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

     label3:
        if $z0 == 0 goto label9;

        $i1 = $r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

     label4:
        $i2 = $i2 + $i1;
        $i2 = $i0 - $i2;
        $f0 = (float) $i2;
        $i2 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;
        $f1 = (float) $i2;
        $f1 = $f0 / $f1;
        $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = $f1;
        $i2 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;
        if $i2 == 0 goto label5;

        $f1 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void parallaxOtherViews(float)>($f1);

     label5:
        $z0 = $r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;
        if $z0 == 0 goto label6;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $f1 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        $i2 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r2, $f1, $i2);

     label6:
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void dispatchOnPanelSlide(android.view.View)>($r2);
        goto label0;

     label7:
        goto label2;

     label8:
        $i2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();
        goto label3;

     label9:
        $i1 = $r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;
        goto label4;
    }

    private boolean openPane(android.view.View, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        int $i0;
        boolean $z1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;
        if $z1 != 0 goto label0;

        $z1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean smoothSlideTo(float,int)>(1.0F, $i0);
        if $z1 == 0 goto label1;

     label0:
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = 1;
        return 1;

     label1:
        return 0;
    }

    private void parallaxOtherViews(float)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        float $f0, $f2, $f3;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r1;
        android.view.View $r2, $r4;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r3;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $f0 := @parameter0: float;
        $z1 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r3 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r1;
        $z0 = $r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;
        if $z0 == 0 goto label5;

        if $z1 == 0 goto label4;

        $i3 = $r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

     label0:
        if $i3 > 0 goto label5;

        $z0 = 1;

     label1:
        $i0 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();
        $i2 = 0;

     label2:
        if $i2 >= $i0 goto label10;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>($i2);
        $r4 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        if $r2 != $r4 goto label6;

     label3:
        $i2 = $i2 + 1;
        goto label2;

     label4:
        $i3 = $r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;
        goto label0;

     label5:
        $z0 = 0;
        goto label1;

     label6:
        $f2 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>;
        $f2 = 1.0F - $f2;
        $i3 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;
        $f3 = (float) $i3;
        $f3 = $f2 * $f3;
        $i3 = (int) $f3;
        $r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset> = $f0;
        $f3 = 1.0F - $f0;
        $i1 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;
        $f2 = (float) $i1;
        $f3 = $f3 * $f2;
        $i1 = (int) $f3;
        $i1 = $i3 - $i1;
        if $z1 == 0 goto label7;

        $i1 = neg $i1;

     label7:
        virtualinvoke $r2.<android.view.View: void offsetLeftAndRight(int)>($i1);
        if $z0 == 0 goto label3;

        if $z1 == 0 goto label9;

        $f3 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>;
        $f3 = $f3 - 1.0F;

     label8:
        $i3 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor>;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r2, $f3, $i3);
        goto label3;

     label9:
        $f3 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>;
        $f3 = 1.0F - $f3;
        goto label8;

     label10:
        return;
    }

    private static boolean viewIsOpaque(android.view.View)
    {
        android.view.View $r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z1;
        int $i1;

        $r0 := @parameter0: android.view.View;
        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean isOpaque(android.view.View)>($r0);
        if $z1 == 0 goto label1;

     label0:
        return 1;

     label1:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;
        if $i1 < 18 goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke $r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();
        if $r1 == null goto label3;

        $i1 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getOpacity()>();
        if $i1 == -1 goto label0;

        return 0;

     label3:
        return 0;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1, $r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.ViewGroup $r3;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $z0 := @parameter1: boolean;
        $i0 := @parameter2: int;
        $i1 := @parameter3: int;
        $i2 := @parameter4: int;
        $z1 = $r1 instanceof android.view.ViewGroup;
        if $z1 == 0 goto label2;

        $r3 = (android.view.ViewGroup) $r1;
        $i6 = virtualinvoke $r1.<android.view.View: int getScrollX()>();
        $i7 = virtualinvoke $r1.<android.view.View: int getScrollY()>();
        $i4 = virtualinvoke $r3.<android.view.ViewGroup: int getChildCount()>();
        $i5 = $i4 + -1;

     label0:
        if $i5 < 0 goto label2;

        $r2 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View getChildAt(int)>($i5);
        $i4 = $i1 + $i6;
        $i3 = virtualinvoke $r2.<android.view.View: int getLeft()>();
        if $i4 < $i3 goto label1;

        $i4 = $i1 + $i6;
        $i3 = virtualinvoke $r2.<android.view.View: int getRight()>();
        if $i4 >= $i3 goto label1;

        $i4 = $i2 + $i7;
        $i3 = virtualinvoke $r2.<android.view.View: int getTop()>();
        if $i4 < $i3 goto label1;

        $i4 = $i2 + $i7;
        $i3 = virtualinvoke $r2.<android.view.View: int getBottom()>();
        if $i4 >= $i3 goto label1;

        $i4 = $i1 + $i6;
        $i3 = virtualinvoke $r2.<android.view.View: int getLeft()>();
        $i3 = $i4 - $i3;
        $i4 = $i2 + $i7;
        $i8 = virtualinvoke $r2.<android.view.View: int getTop()>();
        $i4 = $i4 - $i8;
        $z1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean canScroll(android.view.View,boolean,int,int,int)>($r2, 1, $i0, $i3, $i4);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        $i5 = $i5 + -1;
        goto label0;

     label2:
        if $z0 == 0 goto label5;

        $z1 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        if $z1 == 0 goto label4;

     label3:
        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r1, $i0);
        if $z1 == 0 goto label5;

        return 1;

     label4:
        $i0 = neg $i0;
        goto label3;

     label5:
        return 0;
    }

    public boolean canSlide()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        return $z0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;
        $z0 = $r1 instanceof android.support.v4.widget.SlidingPaneLayout$LayoutParams;
        if $z0 == 0 goto label0;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);
        if $z0 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public boolean closePane()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane(android.view.View,int)>($r1, 0);
        return $z0;
    }

    public void computeScroll()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.support.v4.widget.ViewDragHelper $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $z0 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);
        if $z0 == 0 goto label0;

        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z0 != 0 goto label1;

        $r1 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: void abort()>();

     label0:
        return;

     label1:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);
        goto label0;
    }

    void dispatchOnPanelClosed(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;
        interfaceinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$PanelSlideListener: void onPanelClosed(android.view.View)>($r1);

     label0:
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void sendAccessibilityEvent(int)>(32);
        return;
    }

    void dispatchOnPanelOpened(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;
        interfaceinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$PanelSlideListener: void onPanelOpened(android.view.View)>($r1);

     label0:
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void sendAccessibilityEvent(int)>(32);
        return;
    }

    void dispatchOnPanelSlide(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r2;
        float $f0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;
        $f0 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        interfaceinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$PanelSlideListener: void onPanelSlide(android.view.View,float)>($r1, $f0);

     label0:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.graphics.drawable.Drawable $r2;
        android.view.View $r3;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.graphics.Canvas;
        specialinvoke $r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>($r1);
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        if $z0 == 0 goto label3;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableRight>;

     label0:
        $i4 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();
        if $i4 <= 1 goto label4;

        $r3 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(1);

     label1:
        if $r3 == null goto label2;

        if $r2 != null goto label5;

     label2:
        return;

     label3:
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableLeft>;
        goto label0;

     label4:
        $r3 = null;
        goto label1;

     label5:
        $i4 = virtualinvoke $r3.<android.view.View: int getTop()>();
        $i0 = virtualinvoke $r3.<android.view.View: int getBottom()>();
        $i3 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        if $z0 == 0 goto label7;

        $i1 = virtualinvoke $r3.<android.view.View: int getRight()>();
        $i2 = $i1 + $i3;

     label6:
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i4, $i2, $i0);
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);
        goto label2;

     label7:
        $i2 = virtualinvoke $r3.<android.view.View: int getLeft()>();
        $i1 = $i2 - $i3;
        goto label6;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.graphics.Canvas $r1;
        android.view.View $r2, $r6;
        long $l0;
        android.graphics.Bitmap $r3;
        android.view.ViewGroup$LayoutParams $r4;
        boolean $z0;
        int $i1, $i3, $i4;
        byte $b2;
        android.graphics.Rect $r5, $r8;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r7;
        float $f0, $f1;
        android.graphics.Paint $r9;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.graphics.Canvas;
        $r2 := @parameter1: android.view.View;
        $l0 := @parameter2: long;
        $r4 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r7 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r4;
        $i1 = virtualinvoke $r1.<android.graphics.Canvas: int save(int)>(2);
        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z0 == 0 goto label1;

        $z0 = $r7.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable>;
        if $z0 != 0 goto label1;

        $r6 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        if $r6 == null goto label1;

        $r5 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;
        virtualinvoke $r1.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>($r5);
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        if $z0 == 0 goto label3;

        $r8 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;
        $r5 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;
        $i3 = $r5.<android.graphics.Rect: int left>;
        $r6 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $i4 = virtualinvoke $r6.<android.view.View: int getRight()>();
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i4);
        $r8.<android.graphics.Rect: int left> = $i4;

     label0:
        $r8 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;
        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>($r8);

     label1:
        $i4 = <android.os.Build$VERSION: int SDK_INT>;
        if $i4 < 11 goto label4;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r2, $l0);

     label2:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i1);
        return $z0;

     label3:
        $r8 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;
        $r5 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;
        $i4 = $r5.<android.graphics.Rect: int right>;
        $r6 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $i3 = virtualinvoke $r6.<android.view.View: int getLeft()>();
        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);
        $r8.<android.graphics.Rect: int right> = $i4;
        goto label0;

     label4:
        $z0 = $r7.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;
        if $z0 == 0 goto label7;

        $f0 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        $b2 = $f0 cmpl 0.0F;
        if $b2 <= 0 goto label7;

        $z0 = virtualinvoke $r2.<android.view.View: boolean isDrawingCacheEnabled()>();
        if $z0 != 0 goto label5;

        virtualinvoke $r2.<android.view.View: void setDrawingCacheEnabled(boolean)>(1);

     label5:
        $r3 = virtualinvoke $r2.<android.view.View: android.graphics.Bitmap getDrawingCache()>();
        if $r3 == null goto label6;

        $i4 = virtualinvoke $r2.<android.view.View: int getLeft()>();
        $f1 = (float) $i4;
        $i4 = virtualinvoke $r2.<android.view.View: int getTop()>();
        $f0 = (float) $i4;
        $r9 = $r7.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r3, $f1, $f0, $r9);
        $z0 = 0;
        goto label2;

     label6:
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("drawChild: child view ");
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned null drawing cache");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SlidingPaneLayout", $r12);
        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r2, $l0);
        goto label2;

     label7:
        $z0 = virtualinvoke $r2.<android.view.View: boolean isDrawingCacheEnabled()>();
        if $z0 == 0 goto label8;

        virtualinvoke $r2.<android.view.View: void setDrawingCacheEnabled(boolean)>(0);

     label8:
        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>($r1, $r2, $l0);
        goto label2;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;
        specialinvoke $r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>()>();
        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.util.AttributeSet $r1;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.util.AttributeSet;
        $r2 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;
        $r3 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.content.Context getContext()>();
        specialinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);
        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;
        $z0 = $r1 instanceof android.view.ViewGroup$MarginLayoutParams;
        if $z0 == 0 goto label0;

        $r2 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;
        $r3 = (android.view.ViewGroup$MarginLayoutParams) $r1;
        specialinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r3);
        return $r2;

     label0:
        $r2 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;
        specialinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);
        return $r2;
    }

    public int getCoveredFadeColor()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor>;
        return $i0;
    }

    public int getParallaxDistance()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;
        return $i0;
    }

    public int getSliderFadeColor()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;
        return $i0;
    }

    boolean isDimmed(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        boolean $z0;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r3;
        float $f1;
        byte $b0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        if $r1 != null goto label1;

     label0:
        return 0;

     label1:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r3 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r2;
        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z0 == 0 goto label0;

        $z0 = $r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;
        if $z0 == 0 goto label0;

        $f1 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        $b0 = $f1 cmpl 0.0F;
        if $b0 <= 0 goto label0;

        return 1;
    }

    public boolean isOpen()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        boolean $z0;
        float $f1;
        byte $b0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z0 == 0 goto label0;

        $f1 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        $b0 = $f1 cmpl 1.0F;
        if $b0 != 0 goto label1;

     label0:
        return 1;

     label1:
        return 0;
    }

    public boolean isSlideable()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        return $z0;
    }

    protected void onAttachedToWindow()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        specialinvoke $r0.<android.view.ViewGroup: void onAttachedToWindow()>();
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable $r3;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        specialinvoke $r0.<android.view.ViewGroup: void onDetachedFromWindow()>();
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;
        $i1 = 0;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label0:
        if $i1 >= $i0 goto label1;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;
        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);
        $r3 = (android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable) $r1;
        virtualinvoke $r3.<android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable: void run()>();
        $i1 = $i1 + 1;
        goto label0;

     label1:
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;
        virtualinvoke $r2.<java.util.ArrayList: void clear()>();
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2;
        boolean $z0, $z1;
        android.view.View $r2;
        android.support.v4.widget.ViewDragHelper $r3;
        byte $b3;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.MotionEvent;
        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);
        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z1 != 0 goto label1;

        if $i0 != 0 goto label1;

        $i2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();
        if $i2 <= 1 goto label1;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(1);
        if $r2 == null goto label1;

        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $i2 = (int) $f1;
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $i1 = (int) $f1;
        $z1 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r2, $i2, $i1);
        if $z1 != 0 goto label3;

        $z1 = 1;

     label0:
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z1;

     label1:
        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z1 == 0 goto label2;

        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag>;
        if $z1 == 0 goto label4;

        if $i0 == 0 goto label4;

     label2:
        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: void cancel()>();
        $z1 = specialinvoke $r0.<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>($r1);
        return $z1;

     label3:
        $z1 = 0;
        goto label0;

     label4:
        if $i0 == 3 goto label5;

        if $i0 != 1 goto label6;

     label5:
        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: void cancel()>();
        return 0;

     label6:
        $z1 = 0;
        lookupswitch($i0)
        {
            case 0: goto label9;
            case 1: goto label7;
            case 2: goto label10;
            default: goto label7;
        };

     label7:
        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $z0 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>($r1);
        if $z0 != 0 goto label8;

        if $z1 == 0 goto label11;

     label8:
        return 1;

     label9:
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag> = 0;
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX> = $f1;
        $r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY> = $f0;
        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $i2 = (int) $f1;
        $i1 = (int) $f0;
        $z0 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r2, $i2, $i1);
        if $z0 == 0 goto label7;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $z0 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isDimmed(android.view.View)>($r2);
        if $z0 == 0 goto label7;

        $z1 = 1;
        goto label7;

     label10:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $f0 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX>;
        $f1 = $f1 - $f0;
        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f1);
        $f1 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY>;
        $f2 = $f2 - $f1;
        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f2);
        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $i0 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>();
        $f2 = (float) $i0;
        $b3 = $f0 cmpl $f2;
        if $b3 <= 0 goto label7;

        $b3 = $f1 cmpl $f0;
        if $b3 <= 0 goto label7;

        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: void cancel()>();
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag> = 1;
        return 0;

     label11:
        return 0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13;
        float $f0, $f1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v4.widget.ViewDragHelper $r4;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r5;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $z0 := @parameter0: boolean;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 := @parameter4: int;
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        if $z0 == 0 goto label7;

        $r4 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(2);

     label0:
        $i9 = $i2 - $i0;
        if $z0 == 0 goto label8;

        $i5 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

     label1:
        if $z0 == 0 goto label9;

        $i6 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

     label2:
        $i7 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();
        $i10 = $i5;
        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;
        if $z1 == 0 goto label4;

        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z1 == 0 goto label10;

        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState>;
        if $z1 == 0 goto label10;

        $f0 = 1.0F;

     label3:
        $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = $f0;

     label4:
        $i4 = 0;

     label5:
        if $i4 >= $i2 goto label21;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>($i4);
        $i8 = virtualinvoke $r2.<android.view.View: int getVisibility()>();
        if $i8 != 8 goto label11;

     label6:
        $i4 = $i4 + 1;
        goto label5;

     label7:
        $r4 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(1);
        goto label0;

     label8:
        $i5 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();
        goto label1;

     label9:
        $i6 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();
        goto label2;

     label10:
        $f0 = 0.0F;
        goto label3;

     label11:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r5 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;
        $i3 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();
        $i0 = 0;
        $z1 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable>;
        if $z1 == 0 goto label18;

        $i8 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;
        $i1 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;
        $i1 = $i8 + $i1;
        $i8 = $i9 - $i6;
        $i12 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize>;
        $i12 = $i8 - $i12;
        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i12);
        $i12 = $i12 - $i10;
        $i8 = $i12 - $i1;
        $r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange> = $i8;
        if $z0 == 0 goto label16;

        $i1 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

     label12:
        $i12 = $i10 + $i1;
        $i12 = $i12 + $i8;
        $i13 = $i3 / 2;
        $i13 = $i12 + $i13;
        $i12 = $i9 - $i6;
        if $i13 <= $i12 goto label17;

        $z1 = 1;

     label13:
        $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset> = $z1;
        $f0 = (float) $i8;
        $f1 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        $f1 = $f0 * $f1;
        $i8 = (int) $f1;
        $i13 = $i8 + $i1;
        $i10 = $i10 + $i13;
        $f1 = (float) $i8;
        $i13 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;
        $f0 = (float) $i13;
        $f1 = $f1 / $f0;
        $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = $f1;

     label14:
        if $z0 == 0 goto label20;

        $i13 = $i9 - $i10;
        $i0 = $i13 + $i0;
        $i1 = $i0 - $i3;

     label15:
        $i13 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();
        $i3 = $i7 + $i13;
        virtualinvoke $r2.<android.view.View: void layout(int,int,int,int)>($i1, $i7, $i0, $i3);
        $i13 = virtualinvoke $r2.<android.view.View: int getWidth()>();
        $i5 = $i5 + $i13;
        goto label6;

     label16:
        $i1 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;
        goto label12;

     label17:
        $z1 = 0;
        goto label13;

     label18:
        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z1 == 0 goto label19;

        $i13 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;
        if $i13 == 0 goto label19;

        $f0 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        $f1 = 1.0F - $f0;
        $i13 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;
        $f0 = (float) $i13;
        $f1 = $f1 * $f0;
        $i0 = (int) $f1;
        $i10 = $i5;
        goto label14;

     label19:
        $i10 = $i5;
        goto label14;

     label20:
        $i1 = $i10 - $i0;
        $i0 = $i1 + $i3;
        goto label15;

     label21:
        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;
        if $z1 == 0 goto label24;

        $z1 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z1 == 0 goto label25;

        $i13 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;
        if $i13 == 0 goto label22;

        $f1 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void parallaxOtherViews(float)>($f1);

     label22:
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r5 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;
        $z1 = $r5.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;
        if $z1 == 0 goto label23;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $f0 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;
        $i3 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r2, $f0, $i3);

     label23:
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void updateObscuredViewsVisibility(android.view.View)>($r2);

     label24:
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 0;
        return;

     label25:
        $i13 = 0;

     label26:
        if $i13 >= $i2 goto label23;

        $r2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>($i13);
        $i12 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r2, 0.0F, $i12);
        $i13 = $i13 + 1;
        goto label26;
    }

    protected void onMeasure(int, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13;
        boolean $z0, $z1, $z2;
        android.view.View $r1, $r9;
        android.view.ViewGroup$LayoutParams $r2;
        float $f0, $f1, $f2;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r6, $r8;
        java.lang.IllegalStateException $r7;
        byte $b10;
        android.support.v4.widget.ViewDragHelper $r10;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i7 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);
        $i9 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i0);
        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);
        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>($i1);
        if $i7 == 1073741824 goto label7;

        $z1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isInEditMode()>();
        if $z1 == 0 goto label6;

        if $i7 != -2147483648 goto label5;

     label0:
        $i5 = 0;
        $i6 = -1;
        lookupswitch($i3)
        {
            case -2147483648: goto label10;
            case 1073741824: goto label9;
            default: goto label1;
        };

     label1:
        $f0 = 0.0F;
        $z0 = 0;
        $i8 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();
        $i7 = $i9 - $i8;
        $i8 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();
        $i7 = $i7 - $i8;
        $i8 = $i7;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();
        if $i0 <= 2 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SlidingPaneLayout", "onMeasure: More than two child views are not supported.");

     label2:
        $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView> = null;
        $i4 = 0;

     label3:
        if $i4 >= $i0 goto label22;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>($i4);
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r6 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r2;
        $i2 = virtualinvoke $r1.<android.view.View: int getVisibility()>();
        if $i2 != 8 goto label11;

        $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset> = 0;

     label4:
        $i4 = $i4 + 1;
        goto label3;

     label5:
        if $i7 != 0 goto label0;

        $i9 = 300;
        goto label0;

     label6:
        $r7 = new java.lang.IllegalStateException;
        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Width must have an exact value or MATCH_PARENT");
        throw $r7;

     label7:
        if $i3 != 0 goto label0;

        $z1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isInEditMode()>();
        if $z1 == 0 goto label8;

        if $i3 != 0 goto label0;

        $i3 = -2147483648;
        $i2 = 300;
        goto label0;

     label8:
        $r7 = new java.lang.IllegalStateException;
        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Height must not be UNSPECIFIED");
        throw $r7;

     label9:
        $i8 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();
        $i8 = $i2 - $i8;
        $i7 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();
        $i6 = $i8 - $i7;
        $i5 = $i6;
        goto label1;

     label10:
        $i8 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();
        $i8 = $i2 - $i8;
        $i7 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();
        $i6 = $i8 - $i7;
        goto label1;

     label11:
        $f1 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;
        $b10 = $f1 cmpl 0.0F;
        if $b10 <= 0 goto label12;

        $f2 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;
        $f0 = $f0 + $f2;
        $i2 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;
        if $i2 == 0 goto label4;

     label12:
        $i2 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;
        $i1 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;
        $i2 = $i2 + $i1;
        $i1 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;
        if $i1 != -2 goto label17;

        $i2 = $i7 - $i2;
        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, -2147483648);

     label13:
        $i1 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;
        if $i1 != -2 goto label19;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, -2147483648);

     label14:
        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i2, $i1);
        $i2 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();
        $i1 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();
        if $i3 != -2147483648 goto label15;

        if $i1 <= $i5 goto label15;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i6);

     label15:
        $i8 = $i8 - $i2;
        if $i8 >= 0 goto label21;

        $z1 = 1;

     label16:
        $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable> = $z1;
        $z0 = $z0 | $z1;
        $z2 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable>;
        if $z2 == 0 goto label4;

        $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView> = $r1;
        goto label4;

     label17:
        $i11 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;
        if $i11 != -1 goto label18;

        $i11 = $i7 - $i2;
        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i11, 1073741824);
        goto label13;

     label18:
        $i11 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;
        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i11, 1073741824);
        goto label13;

     label19:
        $i11 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;
        if $i11 != -1 goto label20;

        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, 1073741824);
        goto label14;

     label20:
        $i11 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;
        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i11, 1073741824);
        goto label14;

     label21:
        $z1 = 0;
        goto label16;

     label22:
        if $z0 != 0 goto label23;

        $b10 = $f0 cmpl 0.0F;
        if $b10 <= 0 goto label42;

     label23:
        $i11 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize>;
        $i2 = $i7 - $i11;
        $i11 = 0;

     label24:
        if $i11 >= $i0 goto label42;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>($i11);
        $i4 = virtualinvoke $r1.<android.view.View: int getVisibility()>();
        if $i4 != 8 goto label26;

     label25:
        $i11 = $i11 + 1;
        goto label24;

     label26:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r8 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r2;
        $i4 = virtualinvoke $r1.<android.view.View: int getVisibility()>();
        if $i4 == 8 goto label25;

        $i4 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;
        if $i4 != 0 goto label31;

        $f2 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;
        $b10 = $f2 cmpl 0.0F;
        if $b10 <= 0 goto label31;

        $z1 = 1;

     label27:
        if $z1 == 0 goto label32;

        $i4 = 0;

     label28:
        if $z0 == 0 goto label36;

        $r9 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        if $r1 == $r9 goto label36;

        $i3 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;
        if $i3 >= 0 goto label25;

        if $i4 > $i2 goto label29;

        $f2 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;
        $b10 = $f2 cmpl 0.0F;
        if $b10 <= 0 goto label25;

     label29:
        if $z1 == 0 goto label35;

        $i4 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;
        if $i4 != -2 goto label33;

        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, -2147483648);

     label30:
        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);
        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i3, $i4);
        goto label25;

     label31:
        $z1 = 0;
        goto label27;

     label32:
        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();
        goto label28;

     label33:
        $i4 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;
        if $i4 != -1 goto label34;

        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, 1073741824);
        goto label30;

     label34:
        $i4 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;
        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, 1073741824);
        goto label30;

     label35:
        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();
        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i4, 1073741824);
        goto label30;

     label36:
        $f2 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;
        $b10 = $f2 cmpl 0.0F;
        if $b10 <= 0 goto label25;

        $i3 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;
        if $i3 != 0 goto label40;

        $i3 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;
        if $i3 != -2 goto label38;

        $i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, -2147483648);

     label37:
        if $z0 == 0 goto label41;

        $i3 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;
        $i1 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;
        $i3 = $i3 + $i1;
        $i3 = $i7 - $i3;
        $i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, 1073741824);
        if $i4 == $i3 goto label25;

        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i13, $i12);
        goto label25;

     label38:
        $i13 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;
        if $i13 != -1 goto label39;

        $i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, 1073741824);
        goto label37;

     label39:
        $i13 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;
        $i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i13, 1073741824);
        goto label37;

     label40:
        $i13 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();
        $i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i13, 1073741824);
        goto label37;

     label41:
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i8);
        $f2 = $r8.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;
        $f1 = (float) $i3;
        $f2 = $f2 * $f1;
        $f2 = $f2 / $f0;
        $i1 = (int) $f2;
        $i13 = $i4 + $i1;
        $i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i13, 1073741824);
        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i13, $i12);
        goto label25;

     label42:
        $i12 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();
        $i12 = $i12 + $i5;
        $i11 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();
        $i1 = $i12 + $i11;
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void setMeasuredDimension(int,int)>($i9, $i1);
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide> = $z0;
        $r10 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $i13 = virtualinvoke $r10.<android.support.v4.widget.ViewDragHelper: int getViewDragState()>();
        if $i13 == 0 goto label43;

        if $z0 != 0 goto label43;

        $r10 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        virtualinvoke $r10.<android.support.v4.widget.ViewDragHelper: void abort()>();

     label43:
        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.os.Parcelable $r1;
        android.support.v4.widget.SlidingPaneLayout$SavedState $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.os.Parcelable;
        $r2 = (android.support.v4.widget.SlidingPaneLayout$SavedState) $r1;
        $r1 = virtualinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable getSuperState()>();
        specialinvoke $r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r1);
        $z0 = $r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: boolean isOpen>;
        if $z0 == 0 goto label1;

        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean openPane()>();

     label0:
        $z0 = $r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: boolean isOpen>;
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z0;
        return;

     label1:
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane()>();
        goto label0;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.support.v4.widget.SlidingPaneLayout$SavedState $r1;
        android.os.Parcelable $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r2 = specialinvoke $r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();
        $r1 = new android.support.v4.widget.SlidingPaneLayout$SavedState;
        specialinvoke $r1.<android.support.v4.widget.SlidingPaneLayout$SavedState: void <init>(android.os.Parcelable)>($r2);
        $z0 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isSlideable()>();
        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isOpen()>();

     label0:
        $r1.<android.support.v4.widget.SlidingPaneLayout$SavedState: boolean isOpen> = $z0;
        return $r1;

     label1:
        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState>;
        goto label0;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        specialinvoke $r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);
        if $i0 == $i2 goto label0;

        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;

     label0:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z1;
        android.support.v4.widget.ViewDragHelper $r2;
        android.view.View $r3;
        byte $b2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.MotionEvent;
        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z0 != 0 goto label1;

        $z0 = specialinvoke $r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>($r1);

     label0:
        return $z0;

     label1:
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>($r1);
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();
        $z0 = 1;
        $i1 = $i0 & 255;
        lookupswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label2;
        };

     label2:
        return 1;

     label3:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX> = $f1;
        $r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY> = $f0;
        return 1;

     label4:
        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $z1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isDimmed(android.view.View)>($r3);
        if $z1 == 0 goto label0;

        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $f3 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $f1 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX>;
        $f0 = $f2 - $f1;
        $f1 = $r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY>;
        $f1 = $f3 - $f1;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $i0 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>();
        $f0 = $f0 * $f0;
        $f1 = $f1 * $f1;
        $f1 = $f0 + $f1;
        $i1 = $i0 * $i0;
        $f0 = (float) $i1;
        $b2 = $f1 cmpg $f0;
        if $b2 >= 0 goto label0;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $i0 = (int) $f2;
        $i1 = (int) $f3;
        $z1 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r3, $i0, $i1);
        if $z1 == 0 goto label0;

        $r3 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane(android.view.View,int)>($r3, 0);
        return 1;
    }

    public boolean openPane()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean openPane(android.view.View,int)>($r1, 0);
        return $z0;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1, $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $r2 := @parameter1: android.view.View;
        specialinvoke $r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>($r1, $r2);
        $z0 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isInTouchMode()>();
        if $z0 != 0 goto label1;

        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z0 != 0 goto label1;

        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        if $r1 != $r2 goto label2;

        $z0 = 1;

     label0:
        $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z0;

     label1:
        return;

     label2:
        $z0 = 0;
        goto label0;
    }

    void setAllChildrenVisible()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i1 = 0;
        $i0 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

     label0:
        if $i1 >= $i0 goto label2;

        $r1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>($i1);
        $i2 = virtualinvoke $r1.<android.view.View: int getVisibility()>();
        if $i2 != 4 goto label1;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(0);

     label1:
        $i1 = $i1 + 1;
        goto label0;

     label2:
        return;
    }

    public void setCoveredFadeColor(int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter0: int;
        $r0.<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor> = $i0;
        return;
    }

    public void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener;
        $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener> = $r1;
        return;
    }

    public void setParallaxDistance(int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter0: int;
        $r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy> = $i0;
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void requestLayout()>();
        return;
    }

    public void setShadowDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)>($r1);
        return;
    }

    public void setShadowDrawableLeft(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableLeft> = $r1;
        return;
    }

    public void setShadowDrawableRight(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableRight> = $r1;
        return;
    }

    public void setShadowResource(int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter0: int;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.content.res.Resources getResources()>();
        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)>($r2);
        return;
    }

    public void setShadowResourceLeft(int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter0: int;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.content.res.Resources getResources()>();
        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)>($r2);
        return;
    }

    public void setShadowResourceRight(int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter0: int;
        $r1 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.content.res.Resources getResources()>();
        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i0);
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableRight(android.graphics.drawable.Drawable)>($r2);
        return;
    }

    public void setSliderFadeColor(int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $i0 := @parameter0: int;
        $r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor> = $i0;
        return;
    }

    public void smoothSlideClosed()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane()>();
        return;
    }

    public void smoothSlideOpen()
    {
        android.support.v4.widget.SlidingPaneLayout $r0;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean openPane()>();
        return;
    }

    boolean smoothSlideTo(float, int)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r1;
        android.view.View $r2, $r5;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r3;
        android.support.v4.widget.ViewDragHelper $r4;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $f0 := @parameter0: float;
        $i0 := @parameter1: int;
        $z0 = $r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;
        if $z0 != 0 goto label1;

     label0:
        return 0;

     label1:
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r3 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r1;
        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();
        $i1 = $r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;
        $i1 = $i0 + $i1;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $i0 = virtualinvoke $r2.<android.view.View: int getWidth()>();
        $i2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();
        $f1 = (float) $i2;
        $f2 = (float) $i1;
        $i1 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;
        $f3 = (float) $i1;
        $f3 = $f3 * $f0;
        $f3 = $f2 + $f3;
        $f2 = (float) $i0;
        $f3 = $f3 + $f2;
        $f3 = $f1 - $f3;
        $i1 = (int) $f3;

     label2:
        $r4 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;
        $r2 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $r5 = $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;
        $i2 = virtualinvoke $r5.<android.view.View: int getTop()>();
        $z0 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($r2, $i1, $i2);
        if $z0 == 0 goto label0;

        virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: void setAllChildrenVisible()>();
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>($r0);
        return 1;

     label3:
        $i2 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();
        $i1 = $r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;
        $i2 = $i2 + $i1;
        $f3 = (float) $i2;
        $i2 = $r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;
        $f2 = (float) $i2;
        $f2 = $f2 * $f0;
        $f3 = $f3 + $f2;
        $i1 = (int) $f3;
        goto label2;
    }

    void updateObscuredViewsVisibility(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout $r0;
        android.view.View $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0, $z1;
        byte $b14;

        $r0 := @this: android.support.v4.widget.SlidingPaneLayout;
        $r1 := @parameter0: android.view.View;
        $z0 = specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();
        if $z0 == 0 goto label5;

        $i13 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();
        $i12 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();
        $i11 = $i13 - $i12;

     label0:
        if $z0 == 0 goto label6;

        $i7 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

     label1:
        $i13 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();
        $i12 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getHeight()>();
        $i10 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();
        $i2 = $i12 - $i10;
        if $r1 == null goto label7;

        $z1 = staticinvoke <android.support.v4.widget.SlidingPaneLayout: boolean viewIsOpaque(android.view.View)>($r1);
        if $z1 == 0 goto label7;

        $i9 = virtualinvoke $r1.<android.view.View: int getLeft()>();
        $i10 = virtualinvoke $r1.<android.view.View: int getRight()>();
        $i12 = virtualinvoke $r1.<android.view.View: int getTop()>();
        $i1 = virtualinvoke $r1.<android.view.View: int getBottom()>();

     label2:
        $i8 = 0;
        $i3 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

     label3:
        if $i8 >= $i3 goto label4;

        $r3 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>($i8);
        if $r3 != $r1 goto label8;

     label4:
        return;

     label5:
        $i11 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();
        goto label0;

     label6:
        $i13 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();
        $i12 = virtualinvoke $r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();
        $i7 = $i13 - $i12;
        goto label1;

     label7:
        $i1 = 0;
        $i12 = 0;
        $i10 = 0;
        $i9 = 0;
        goto label2;

     label8:
        if $z0 == 0 goto label12;

        $i6 = $i7;

     label9:
        $i5 = virtualinvoke $r3.<android.view.View: int getLeft()>();
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i5);
        $i0 = virtualinvoke $r3.<android.view.View: int getTop()>();
        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i13, $i0);
        if $z0 == 0 goto label13;

        $i5 = $i11;

     label10:
        $i0 = virtualinvoke $r3.<android.view.View: int getRight()>();
        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i0);
        $i0 = virtualinvoke $r3.<android.view.View: int getBottom()>();
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i0);
        if $i4 < $i9 goto label14;

        if $i6 < $i12 goto label14;

        if $i5 > $i10 goto label14;

        if $i0 > $i1 goto label14;

        $b14 = 4;

     label11:
        virtualinvoke $r3.<android.view.View: void setVisibility(int)>($b14);
        $i8 = $i8 + 1;
        goto label3;

     label12:
        $i6 = $i11;
        goto label9;

     label13:
        $i5 = $i7;
        goto label10;

     label14:
        $b14 = 0;
        goto label11;
    }
}
