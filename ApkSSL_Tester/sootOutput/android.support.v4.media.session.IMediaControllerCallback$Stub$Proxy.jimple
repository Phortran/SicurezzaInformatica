class android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy extends java.lang.Object implements android.support.v4.media.session.IMediaControllerCallback
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 := @parameter0: android.os.IBinder;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote> = $r1;
        return;
    }

    public android.os.IBinder asBinder()
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 = $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;
        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        return "android.support.v4.media.session.IMediaControllerCallback";
    }

    public void onEvent(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.Parcel $r3;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.os.Bundle;
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");
        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);
        if $r2 == null goto label3;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label1:
        $r5 = $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r3, null, 1);

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r6 := @caughtexception;
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        throw $r6;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onExtrasChanged(android.os.Bundle) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        android.os.Bundle $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 := @parameter0: android.os.Bundle;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");
        if $r1 == null goto label3;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label1:
        $r4 = $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r2, null, 1);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");
        if $r1 == null goto label3;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label1:
        $r4 = $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r2, null, 1);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");
        if $r1 == null goto label3;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label1:
        $r4 = $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r2, null, 1);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onQueueChanged(java.util.List) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        java.util.List $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 := @parameter0: java.util.List;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");
        virtualinvoke $r2.<android.os.Parcel: void writeTypedList(java.util.List)>($r1);
        $r4 = $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r2, null, 1);

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void onQueueTitleChanged(java.lang.CharSequence) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        java.lang.CharSequence $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 := @parameter0: java.lang.CharSequence;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");
        if $r1 == null goto label3;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);
        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r1, $r2, 0);

     label1:
        $r4 = $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r2, null, 1);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void onSessionDestroyed() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        android.os.Parcel $r1;
        android.os.IBinder $r3;
        java.lang.Throwable $r4;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");
        $r3 = $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r1, null, 1);

     label1:
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r4 := @caughtexception;
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy $r0;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy;
        $r1 := @parameter0: android.support.v4.media.session.ParcelableVolumeInfo;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaControllerCallback");
        if $r1 == null goto label3;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r1.<android.support.v4.media.session.ParcelableVolumeInfo: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label1:
        $r4 = $r0.<android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r2, null, 1);

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
