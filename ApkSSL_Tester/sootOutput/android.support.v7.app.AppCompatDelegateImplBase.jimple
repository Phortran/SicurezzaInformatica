abstract class android.support.v7.app.AppCompatDelegateImplBase extends android.support.v7.app.AppCompatDelegate
{
    private android.support.v7.app.ActionBar mActionBar;
    final android.support.v7.app.AppCompatCallback mAppCompatCallback;
    final android.content.Context mContext;
    boolean mHasActionBar;
    private boolean mIsDestroyed;
    boolean mIsFloating;
    private android.view.MenuInflater mMenuInflater;
    final android.view.Window$Callback mOriginalWindowCallback;
    boolean mOverlayActionBar;
    boolean mOverlayActionMode;
    private java.lang.CharSequence mTitle;
    final android.view.Window mWindow;
    boolean mWindowNoTitle;

    void <init>(android.content.Context, android.view.Window, android.support.v7.app.AppCompatCallback)
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        android.content.Context $r1;
        android.view.Window $r2;
        android.support.v7.app.AppCompatCallback $r3;
        android.view.Window$Callback $r5;
        boolean $z0;
        java.lang.IllegalStateException $r6;
        android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallback $r7;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.view.Window;
        $r3 := @parameter2: android.support.v7.app.AppCompatCallback;
        specialinvoke $r0.<android.support.v7.app.AppCompatDelegate: void <init>()>();
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.content.Context mContext> = $r1;
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.Window mWindow> = $r2;
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.support.v7.app.AppCompatCallback mAppCompatCallback> = $r3;
        $r2 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.Window mWindow>;
        $r5 = virtualinvoke $r2.<android.view.Window: android.view.Window$Callback getCallback()>();
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.Window$Callback mOriginalWindowCallback> = $r5;
        $r5 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.Window$Callback mOriginalWindowCallback>;
        $z0 = $r5 instanceof android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallback;
        if $z0 == 0 goto label0;

        $r6 = new java.lang.IllegalStateException;
        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AppCompat has already installed itself into the Window");
        throw $r6;

     label0:
        $r2 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.Window mWindow>;
        $r7 = new android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallback;
        $r5 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.Window$Callback mOriginalWindowCallback>;
        specialinvoke $r7.<android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallback: void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.view.Window$Callback)>($r0, $r5);
        virtualinvoke $r2.<android.view.Window: void setCallback(android.view.Window$Callback)>($r7);
        return;
    }

    abstract android.support.v7.app.ActionBar createSupportActionBar();

    abstract boolean dispatchKeyEvent(android.view.KeyEvent);

    final android.content.Context getActionBarThemedContext()
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        android.support.v7.app.ActionBar $r1;
        android.content.Context $r2;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r2 = null;
        $r1 = virtualinvoke $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.support.v7.app.ActionBar getSupportActionBar()>();
        if $r1 == null goto label0;

        $r2 = virtualinvoke $r1.<android.support.v7.app.ActionBar: android.content.Context getThemedContext()>();

     label0:
        if $r2 != null goto label1;

        $r2 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.content.Context mContext>;

     label1:
        return $r2;
    }

    public final android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl $r1;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r1 = new android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl;
        specialinvoke $r1.<android.support.v7.app.AppCompatDelegateImplBase$ActionBarDrawableToggleImpl: void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.support.v7.app.AppCompatDelegateImplBase$1)>($r0, null);
        return $r1;
    }

    public android.view.MenuInflater getMenuInflater()
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        android.view.MenuInflater $r1;
        android.content.Context $r2;
        android.support.v7.internal.view.SupportMenuInflater $r3;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r1 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.MenuInflater mMenuInflater>;
        if $r1 != null goto label0;

        $r3 = new android.support.v7.internal.view.SupportMenuInflater;
        $r2 = virtualinvoke $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.content.Context getActionBarThemedContext()>();
        specialinvoke $r3.<android.support.v7.internal.view.SupportMenuInflater: void <init>(android.content.Context)>($r2);
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.MenuInflater mMenuInflater> = $r3;

     label0:
        $r1 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.MenuInflater mMenuInflater>;
        return $r1;
    }

    public android.support.v7.app.ActionBar getSupportActionBar()
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        boolean $z0;
        android.support.v7.app.ActionBar $r1;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $z0 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: boolean mHasActionBar>;
        if $z0 == 0 goto label0;

        $r1 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.support.v7.app.ActionBar mActionBar>;
        if $r1 != null goto label0;

        $r1 = virtualinvoke $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.support.v7.app.ActionBar createSupportActionBar()>();
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.support.v7.app.ActionBar mActionBar> = $r1;

     label0:
        $r1 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.support.v7.app.ActionBar mActionBar>;
        return $r1;
    }

    final java.lang.CharSequence getTitle()
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        android.view.Window$Callback $r1;
        java.lang.CharSequence $r2;
        boolean $z0;
        android.app.Activity $r3;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r1 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.Window$Callback mOriginalWindowCallback>;
        $z0 = $r1 instanceof android.app.Activity;
        if $z0 == 0 goto label0;

        $r1 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.Window$Callback mOriginalWindowCallback>;
        $r3 = (android.app.Activity) $r1;
        $r2 = virtualinvoke $r3.<android.app.Activity: java.lang.CharSequence getTitle()>();
        return $r2;

     label0:
        $r2 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: java.lang.CharSequence mTitle>;
        return $r2;
    }

    final android.view.Window$Callback getWindowCallback()
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        android.view.Window $r1;
        android.view.Window$Callback $r2;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r1 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.view.Window mWindow>;
        $r2 = virtualinvoke $r1.<android.view.Window: android.view.Window$Callback getCallback()>();
        return $r2;
    }

    final boolean isDestroyed()
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $z0 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: boolean mIsDestroyed>;
        return $z0;
    }

    public void onCreate(android.os.Bundle)
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        android.os.Bundle $r1;
        android.content.res.TypedArray $r2;
        android.content.Context $r3;
        int[] $r4;
        int $i0;
        boolean $z2;
        java.lang.IllegalStateException $r5;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r1 := @parameter0: android.os.Bundle;
        $r3 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.content.Context mContext>;
        $r4 = <android.support.v7.appcompat.R$styleable: int[] Theme>;
        $r2 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r4);
        $i0 = <android.support.v7.appcompat.R$styleable: int Theme_windowActionBar>;
        $z2 = virtualinvoke $r2.<android.content.res.TypedArray: boolean hasValue(int)>($i0);
        if $z2 != 0 goto label0;

        virtualinvoke $r2.<android.content.res.TypedArray: void recycle()>();
        $r5 = new java.lang.IllegalStateException;
        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You need to use a Theme.AppCompat theme (or descendant) with this activity.");
        throw $r5;

     label0:
        $i0 = <android.support.v7.appcompat.R$styleable: int Theme_windowActionBar>;
        $z2 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);
        if $z2 == 0 goto label1;

        $r0.<android.support.v7.app.AppCompatDelegateImplBase: boolean mHasActionBar> = 1;

     label1:
        $i0 = <android.support.v7.appcompat.R$styleable: int Theme_windowActionBarOverlay>;
        $z2 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);
        if $z2 == 0 goto label2;

        $r0.<android.support.v7.app.AppCompatDelegateImplBase: boolean mOverlayActionBar> = 1;

     label2:
        $i0 = <android.support.v7.appcompat.R$styleable: int Theme_windowActionModeOverlay>;
        $z2 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);
        if $z2 == 0 goto label3;

        $r0.<android.support.v7.app.AppCompatDelegateImplBase: boolean mOverlayActionMode> = 1;

     label3:
        $i0 = <android.support.v7.appcompat.R$styleable: int Theme_android_windowIsFloating>;
        $z2 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: boolean mIsFloating> = $z2;
        $i0 = <android.support.v7.appcompat.R$styleable: int Theme_windowNoTitle>;
        $z2 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: boolean mWindowNoTitle> = $z2;
        virtualinvoke $r2.<android.content.res.TypedArray: void recycle()>();
        return;
    }

    public final void onDestroy()
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: boolean mIsDestroyed> = 1;
        return;
    }

    abstract boolean onKeyShortcut(int, android.view.KeyEvent);

    abstract boolean onMenuOpened(int, android.view.Menu);

    abstract boolean onPanelClosed(int, android.view.Menu);

    abstract void onTitleChanged(java.lang.CharSequence);

    final android.support.v7.app.ActionBar peekSupportActionBar()
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        android.support.v7.app.ActionBar $r1;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r1 = $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.support.v7.app.ActionBar mActionBar>;
        return $r1;
    }

    final void setSupportActionBar(android.support.v7.app.ActionBar)
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        android.support.v7.app.ActionBar $r1;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r1 := @parameter0: android.support.v7.app.ActionBar;
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: android.support.v7.app.ActionBar mActionBar> = $r1;
        return;
    }

    public final void setTitle(java.lang.CharSequence)
    {
        android.support.v7.app.AppCompatDelegateImplBase $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.support.v7.app.AppCompatDelegateImplBase;
        $r1 := @parameter0: java.lang.CharSequence;
        $r0.<android.support.v7.app.AppCompatDelegateImplBase: java.lang.CharSequence mTitle> = $r1;
        virtualinvoke $r0.<android.support.v7.app.AppCompatDelegateImplBase: void onTitleChanged(java.lang.CharSequence)>($r1);
        return;
    }

    abstract android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback);
}
