public final class com.google.android.gms.internal.cp extends java.lang.Object
{
    private static final java.util.concurrent.ThreadFactory a;
    private static final java.util.concurrent.ThreadPoolExecutor b;

    static void <clinit>()
    {
        com.google.android.gms.internal.cr $r0;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.SynchronousQueue $r2;
        java.util.concurrent.ThreadPoolExecutor $r3;
        java.util.concurrent.ThreadFactory $r4;

        $r0 = new com.google.android.gms.internal.cr;
        specialinvoke $r0.<com.google.android.gms.internal.cr: void <init>()>();
        <com.google.android.gms.internal.cp: java.util.concurrent.ThreadFactory a> = $r0;
        $r3 = new java.util.concurrent.ThreadPoolExecutor;
        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
        $r2 = new java.util.concurrent.SynchronousQueue;
        specialinvoke $r2.<java.util.concurrent.SynchronousQueue: void <init>(boolean)>(1);
        $r4 = <com.google.android.gms.internal.cp: java.util.concurrent.ThreadFactory a>;
        specialinvoke $r3.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(0, 10, 65L, $r1, $r2, $r4);
        <com.google.android.gms.internal.cp: java.util.concurrent.ThreadPoolExecutor b> = $r3;
        return;
    }

    public static void a(java.lang.Runnable)
    {
        java.lang.Runnable $r0;
        java.util.concurrent.ThreadPoolExecutor $r1;
        com.google.android.gms.internal.cq $r2;
        java.util.concurrent.RejectedExecutionException $r3;

        $r0 := @parameter0: java.lang.Runnable;
        $r1 = <com.google.android.gms.internal.cp: java.util.concurrent.ThreadPoolExecutor b>;
        $r2 = new com.google.android.gms.internal.cq;

     label0:
        specialinvoke $r2.<com.google.android.gms.internal.cq: void <init>(java.lang.Runnable)>($r0);
        virtualinvoke $r1.<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)>($r2);

     label1:
        return;

     label2:
        $r3 := @caughtexception;
        staticinvoke <com.google.android.gms.internal.dc: void b(java.lang.String,java.lang.Throwable)>("Too many background threads already running. Aborting task.", $r3);
        goto label1;

        catch java.util.concurrent.RejectedExecutionException from label0 to label1 with label2;
    }
}
