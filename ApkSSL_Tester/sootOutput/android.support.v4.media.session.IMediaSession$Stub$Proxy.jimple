class android.support.v4.media.session.IMediaSession$Stub$Proxy extends java.lang.Object implements android.support.v4.media.session.IMediaSession
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 := @parameter0: android.os.IBinder;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote> = $r1;
        return;
    }

    public void adjustVolume(int, int, java.lang.String) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        int $i0, $i1;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $r1 := @parameter2: java.lang.String;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i1);
        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, $r2, $r3, 0);
        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r6 := @caughtexception;
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r6;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public android.os.IBinder asBinder()
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.IBinder $r1;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        return $r1;
    }

    public void fastForward() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public android.os.Bundle getExtras() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        java.lang.Object $r3;
        android.os.IBinder $r5;
        int $i2;
        android.os.Parcelable$Creator $r6;
        android.os.Bundle $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(30, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();
        if $i2 == 0 goto label2;

        $r6 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;
        $r3 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r2);
        $r7 = (android.os.Bundle) $r3;

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $r7;

     label2:
        $r7 = null;
        goto label1;

     label3:
        $r8 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r8;

        catch java.lang.Throwable from label0 to label1 with label3;
    }

    public long getFlags() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        long $l2;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $l2 = virtualinvoke $r2.<android.os.Parcel: long readLong()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $l2;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        return "android.support.v4.media.session.IMediaSession";
    }

    public android.app.PendingIntent getLaunchPendingIntent() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        java.lang.Object $r3;
        android.os.IBinder $r5;
        int $i2;
        android.os.Parcelable$Creator $r6;
        android.app.PendingIntent $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();
        if $i2 == 0 goto label2;

        $r6 = <android.app.PendingIntent: android.os.Parcelable$Creator CREATOR>;
        $r3 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r2);
        $r7 = (android.app.PendingIntent) $r3;

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $r7;

     label2:
        $r7 = null;
        goto label1;

     label3:
        $r8 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r8;

        catch java.lang.Throwable from label0 to label1 with label3;
    }

    public android.support.v4.media.MediaMetadataCompat getMetadata() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        java.lang.Object $r3;
        android.os.IBinder $r5;
        int $i2;
        android.os.Parcelable$Creator $r6;
        android.support.v4.media.MediaMetadataCompat $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(26, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();
        if $i2 == 0 goto label2;

        $r6 = <android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR>;
        $r3 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r2);
        $r7 = (android.support.v4.media.MediaMetadataCompat) $r3;

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $r7;

     label2:
        $r7 = null;
        goto label1;

     label3:
        $r8 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r8;

        catch java.lang.Throwable from label0 to label1 with label3;
    }

    public java.lang.String getPackageName() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $r3 = virtualinvoke $r2.<android.os.Parcel: java.lang.String readString()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $r3;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public android.support.v4.media.session.PlaybackStateCompat getPlaybackState() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        java.lang.Object $r3;
        android.os.IBinder $r5;
        int $i2;
        android.os.Parcelable$Creator $r6;
        android.support.v4.media.session.PlaybackStateCompat $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(27, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();
        if $i2 == 0 goto label2;

        $r6 = <android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR>;
        $r3 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r2);
        $r7 = (android.support.v4.media.session.PlaybackStateCompat) $r3;

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $r7;

     label2:
        $r7 = null;
        goto label1;

     label3:
        $r8 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r8;

        catch java.lang.Throwable from label0 to label1 with label3;
    }

    public java.util.List getQueue() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        android.os.Parcelable$Creator $r5;
        java.util.ArrayList $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(28, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $r5 = <android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR>;
        $r6 = virtualinvoke $r2.<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>($r5);

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $r6;

     label2:
        $r7 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r7;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.CharSequence getQueueTitle() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        java.lang.Object $r3;
        android.os.IBinder $r5;
        int $i2;
        android.os.Parcelable$Creator $r6;
        java.lang.CharSequence $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(29, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();
        if $i2 == 0 goto label2;

        $r6 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;
        $r3 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r2);
        $r7 = (java.lang.CharSequence) $r3;

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $r7;

     label2:
        $r7 = null;
        goto label1;

     label3:
        $r8 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r8;

        catch java.lang.Throwable from label0 to label1 with label3;
    }

    public int getRatingType() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        int $i2;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(31, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $i2;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String getTag() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        java.lang.String $r3;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $r3 = virtualinvoke $r2.<android.os.Parcel: java.lang.String readString()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $r3;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        java.lang.Object $r3;
        android.os.IBinder $r5;
        int $i2;
        android.os.Parcelable$Creator $r6;
        android.support.v4.media.session.ParcelableVolumeInfo $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();
        if $i2 == 0 goto label2;

        $r6 = <android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR>;
        $r3 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>($r2);
        $r7 = (android.support.v4.media.session.ParcelableVolumeInfo) $r3;

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $r7;

     label2:
        $r7 = null;
        goto label1;

     label3:
        $r8 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r8;

        catch java.lang.Throwable from label0 to label1 with label3;
    }

    public boolean isTransportControlEnabled() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        boolean $z0;
        android.os.IBinder $r4;
        int $i2;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $z0 = 0;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();
        $i2 = virtualinvoke $r2.<android.os.Parcel: int readInt()>();

     label1:
        if $i2 == 0 goto label2;

        $z0 = 1;

     label2:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return $z0;

     label3:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label3;
    }

    public void next() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void pause() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void play() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void playFromMediaId(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.os.Bundle;
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);
        if $r2 == null goto label3;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label1:
        $r6 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, $r3, $r4, 0);
        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r7 := @caughtexception;
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        throw $r7;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void playFromSearch(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.os.Bundle;
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);
        if $r2 == null goto label3;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label1:
        $r6 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, $r3, $r4, 0);
        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r7 := @caughtexception;
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        throw $r7;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void previous() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void rate(android.support.v4.media.RatingCompat) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.support.v4.media.RatingCompat $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 := @parameter0: android.support.v4.media.RatingCompat;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        if $r1 == null goto label3;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r1.<android.support.v4.media.RatingCompat: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label1:
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, $r2, $r3, 0);
        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r6 := @caughtexception;
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r6;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.support.v4.media.session.IMediaControllerCallback $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 := @parameter0: android.support.v4.media.session.IMediaControllerCallback;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        if $r1 == null goto label3;

        $r5 = interfaceinvoke $r1.<android.support.v4.media.session.IMediaControllerCallback: android.os.IBinder asBinder()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, $r2, $r3, 0);
        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label3:
        $r5 = null;
        goto label1;

     label4:
        $r6 := @caughtexception;
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r6;

        catch java.lang.Throwable from label0 to label2 with label4;
    }

    public void rewind() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void seekTo(long) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        long $l0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $l0 := @parameter0: long;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void sendCommand(java.lang.String, android.os.Bundle, android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper $r3;
        android.os.Parcel $r4, $r5;
        android.os.IBinder $r7;
        java.lang.Throwable $r8;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.os.Bundle;
        $r3 := @parameter2: android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper;
        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r1);
        if $r2 == null goto label4;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r4, 0);

     label1:
        if $r3 == null goto label7;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: void writeToParcel(android.os.Parcel,int)>($r4, 0);

     label2:
        $r7 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, $r4, $r5, 0);
        virtualinvoke $r5.<android.os.Parcel: void readException()>();

     label3:
        virtualinvoke $r5.<android.os.Parcel: void recycle()>();
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();
        return;

     label4:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label1;

     label6:
        $r8 := @caughtexception;
        virtualinvoke $r5.<android.os.Parcel: void recycle()>();
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();
        throw $r8;

     label7:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(0);

     label8:
        goto label2;

        catch java.lang.Throwable from label0 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void sendCustomAction(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.Parcel $r3, $r4;
        android.os.IBinder $r6;
        java.lang.Throwable $r7;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.os.Bundle;
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        virtualinvoke $r3.<android.os.Parcel: void writeString(java.lang.String)>($r1);
        if $r2 == null goto label3;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>($r3, 0);

     label1:
        $r6 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, $r3, $r4, 0);
        virtualinvoke $r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        return;

     label3:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(0);

     label4:
        goto label1;

     label5:
        $r7 := @caughtexception;
        virtualinvoke $r4.<android.os.Parcel: void recycle()>();
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        throw $r7;

        catch java.lang.Throwable from label0 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean sendMediaButton(android.view.KeyEvent) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.view.KeyEvent $r1;
        android.os.Parcel $r2, $r3;
        boolean $z0;
        android.os.IBinder $r5;
        int $i2;
        java.lang.Throwable $r6;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 := @parameter0: android.view.KeyEvent;
        $z0 = 1;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        if $r1 == null goto label4;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);
        virtualinvoke $r1.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>($r2, 0);

     label1:
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, $r2, $r3, 0);
        virtualinvoke $r3.<android.os.Parcel: void readException()>();
        $i2 = virtualinvoke $r3.<android.os.Parcel: int readInt()>();

     label2:
        if $i2 == 0 goto label7;

     label3:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return $z0;

     label4:
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        goto label1;

     label6:
        $r6 := @caughtexception;
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r6;

     label7:
        $z0 = 0;
        goto label3;

        catch java.lang.Throwable from label0 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void setVolumeTo(int, int, java.lang.String) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        int $i0, $i1;
        java.lang.String $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $r1 := @parameter2: java.lang.String;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i0);
        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>($i1);
        virtualinvoke $r2.<android.os.Parcel: void writeString(java.lang.String)>($r1);
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, $r2, $r3, 0);
        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r6 := @caughtexception;
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r6;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void skipToQueueItem(long) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        long $l0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $l0 := @parameter0: long;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        virtualinvoke $r1.<android.os.Parcel: void writeLong(long)>($l0);
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void stop() throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.os.Parcel $r1, $r2;
        android.os.IBinder $r4;
        java.lang.Throwable $r5;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        $r4 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, $r1, $r2, 0);
        virtualinvoke $r2.<android.os.Parcel: void readException()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        return;

     label2:
        $r5 := @caughtexception;
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        virtualinvoke $r1.<android.os.Parcel: void recycle()>();
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) throws android.os.RemoteException
    {
        android.support.v4.media.session.IMediaSession$Stub$Proxy $r0;
        android.support.v4.media.session.IMediaControllerCallback $r1;
        android.os.Parcel $r2, $r3;
        android.os.IBinder $r5;
        java.lang.Throwable $r6;

        $r0 := @this: android.support.v4.media.session.IMediaSession$Stub$Proxy;
        $r1 := @parameter0: android.support.v4.media.session.IMediaControllerCallback;
        $r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();
        $r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label0:
        virtualinvoke $r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.support.v4.media.session.IMediaSession");
        if $r1 == null goto label3;

        $r5 = interfaceinvoke $r1.<android.support.v4.media.session.IMediaControllerCallback: android.os.IBinder asBinder()>();

     label1:
        virtualinvoke $r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r5);
        $r5 = $r0.<android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote>;
        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, $r2, $r3, 0);
        virtualinvoke $r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        return;

     label3:
        $r5 = null;
        goto label1;

     label4:
        $r6 := @caughtexception;
        virtualinvoke $r3.<android.os.Parcel: void recycle()>();
        virtualinvoke $r2.<android.os.Parcel: void recycle()>();
        throw $r6;

        catch java.lang.Throwable from label0 to label2 with label4;
    }
}
