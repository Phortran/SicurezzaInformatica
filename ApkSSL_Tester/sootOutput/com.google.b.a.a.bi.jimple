class com.google.b.a.a.bi extends java.lang.Object
{
    private static final char[] a;

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];
        $r0[0] = 48;
        $r0[1] = 49;
        $r0[2] = 50;
        $r0[3] = 51;
        $r0[4] = 52;
        $r0[5] = 53;
        $r0[6] = 54;
        $r0[7] = 55;
        $r0[8] = 56;
        $r0[9] = 57;
        $r0[10] = 65;
        $r0[11] = 66;
        $r0[12] = 67;
        $r0[13] = 68;
        $r0[14] = 69;
        $r0[15] = 70;
        <com.google.b.a.a.bi: char[] a> = $r0;
        return;
    }

    public static double a(java.lang.String, double)
    {
        java.lang.String $r0;
        double $d0, $d1;
        java.lang.NumberFormatException $r1;

        $r0 := @parameter0: java.lang.String;
        $d0 := @parameter1: double;
        if $r0 != null goto label0;

        return $d0;

     label0:
        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

     label1:
        return $d1;

     label2:
        $r1 := @caughtexception;
        return $d0;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    static java.lang.String a(java.util.Locale)
    {
        java.util.Locale $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3;

        $r0 := @parameter0: java.util.Locale;
        if $r0 != null goto label1;

     label0:
        return null;

     label1:
        $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getLanguage()>();
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);
        if $z0 != 0 goto label0;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getLanguage()>();
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>();
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);
        if $z0 != 0 goto label2;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
        $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>();
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label2:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r1;
    }

    public static java.util.Map a(java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.util.HashMap $r2;
        java.lang.String[] $r3, $r4;
        int $i1, $i3, $i4;

        $r0 := @parameter0: java.lang.String;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("&");
        $i1 = lengthof $r3;
        $i3 = 0;

     label0:
        if $i3 >= $i1 goto label3;

        $r1 = $r3[$i3];
        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");
        $i4 = lengthof $r4;
        if $i4 <= 1 goto label2;

        $r1 = $r4[0];
        $r0 = $r4[1];
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0);

     label1:
        $i3 = $i3 + 1;
        goto label0;

     label2:
        $i4 = lengthof $r4;
        if $i4 != 1 goto label1;

        $r1 = $r4[0];
        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();
        if $i4 == 0 goto label1;

        $r1 = $r4[0];
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, null);
        goto label1;

     label3:
        return $r2;
    }

    public static void a(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;
        $r1 := @parameter1: java.lang.String;
        $r2 := @parameter2: java.lang.String;
        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);
        if $z0 != 0 goto label0;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label0:
        return;
    }

    public static boolean a(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0, $z1;

        $r0 := @parameter0: java.lang.String;
        $z0 := @parameter1: boolean;
        if $r0 == null goto label1;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");
        if $z1 != 0 goto label0;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("yes");
        if $z1 != 0 goto label0;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("1");
        if $z1 == 0 goto label2;

     label0:
        $z0 = 1;

     label1:
        return $z0;

     label2:
        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");
        if $z1 != 0 goto label3;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("no");
        if $z1 != 0 goto label3;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("0");
        if $z1 == 0 goto label1;

     label3:
        return 0;
    }

    public static java.lang.String b(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i1, $i4;
        java.lang.String[] $r2;
        java.util.Map $r3;
        java.lang.StringBuilder $r4, $r7;
        java.lang.Object $r5;
        java.lang.CharSequence $r6;
        java.io.UnsupportedEncodingException $r8;

        $r0 := @parameter0: java.lang.String;
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);
        if $z0 == 0 goto label0;

        return null;

     label0:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("?");
        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("[\\?]");
        $i1 = lengthof $r2;
        if $i1 <= 1 goto label1;

        $r0 = $r2[1];

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("%3D");
        if $z0 == 0 goto label9;

     label2:
        $r1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r0, "UTF-8");

     label3:
        $r0 = $r1;

     label4:
        $r3 = staticinvoke <com.google.b.a.a.bi: java.util.Map a(java.lang.String)>($r0);
        $r2 = newarray (java.lang.String)[9];
        $r2[0] = "dclid";
        $r2[1] = "utm_source";
        $r2[2] = "gclid";
        $r2[3] = "utm_campaign";
        $r2[4] = "utm_medium";
        $r2[5] = "utm_term";
        $r2[6] = "utm_content";
        $r2[7] = "utm_id";
        $r2[8] = "gmob_t";
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $i1 = 0;

     label5:
        $i4 = lengthof $r2;
        if $i1 >= $i4 goto label10;

        $r1 = $r2[$i1];
        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);
        $r6 = (java.lang.CharSequence) $r5;
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);
        if $z0 != 0 goto label7;

        $i4 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();
        if $i4 <= 0 goto label6;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label6:
        $r1 = $r2[$i1];
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r1 = $r2[$i1];
        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);
        $r1 = (java.lang.String) $r5;
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label7:
        $i1 = $i1 + 1;
        goto label5;

     label8:
        $r8 := @caughtexception;
        return null;

     label9:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("=");
        if $z0 != 0 goto label4;

        return null;

     label10:
        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r1;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label8;
    }
}
