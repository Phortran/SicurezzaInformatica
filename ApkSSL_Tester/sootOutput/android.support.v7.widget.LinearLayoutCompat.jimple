public class android.support.v7.widget.LinearLayoutCompat extends android.view.ViewGroup
{
    public static final int HORIZONTAL;
    private static final int INDEX_BOTTOM;
    private static final int INDEX_CENTER_VERTICAL;
    private static final int INDEX_FILL;
    private static final int INDEX_TOP;
    public static final int SHOW_DIVIDER_BEGINNING;
    public static final int SHOW_DIVIDER_END;
    public static final int SHOW_DIVIDER_MIDDLE;
    public static final int SHOW_DIVIDER_NONE;
    public static final int VERTICAL;
    private static final int VERTICAL_GRAVITY_COUNT;
    private boolean mBaselineAligned;
    private int mBaselineAlignedChildIndex;
    private int mBaselineChildTop;
    private android.graphics.drawable.Drawable mDivider;
    private int mDividerHeight;
    private int mDividerPadding;
    private int mDividerWidth;
    private int mGravity;
    private int[] mMaxAscent;
    private int[] mMaxDescent;
    private int mOrientation;
    private int mShowDividers;
    private int mTotalLength;
    private boolean mUseLargestChild;
    private float mWeightSum;

    public void <init>(android.content.Context)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.content.Context $r1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.content.Context;
        specialinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        specialinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, $i1;
        android.support.v7.internal.widget.TintTypedArray $r3;
        boolean $z0;
        int[] $r4;
        float $f0;
        android.graphics.drawable.Drawable $r5;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        $i0 := @parameter2: int;
        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);
        $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned> = 1;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex> = -1;
        $i1 = (int) 0;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineChildTop> = $i1;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity> = 8388659;
        $r4 = <android.support.v7.appcompat.R$styleable: int[] LinearLayoutCompat>;
        $i1 = (int) 0;
        $r3 = staticinvoke <android.support.v7.internal.widget.TintTypedArray: android.support.v7.internal.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>($r1, $r2, $r4, $i0, $i1);
        $i1 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_orientation>;
        $i0 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: int getInt(int,int)>($i1, -1);
        if $i0 < 0 goto label0;

        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void setOrientation(int)>($i0);

     label0:
        $i1 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_gravity>;
        $i1 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: int getInt(int,int)>($i1, -1);
        if $i1 < 0 goto label1;

        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void setGravity(int)>($i1);

     label1:
        $i1 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAligned>;
        $z0 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i1, 1);
        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void setBaselineAligned(boolean)>($z0);

     label2:
        $i1 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_weightSum>;
        $f0 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: float getFloat(int,float)>($i1, -1.0F);
        $r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum> = $f0;
        $i1 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex>;
        $i1 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: int getInt(int,int)>($i1, -1);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex> = $i1;
        $i1 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_measureWithLargestChild>;
        $z0 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i1, 0);
        $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild> = $z0;
        $i1 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_divider>;
        $r5 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i1);
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)>($r5);
        $i1 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_showDividers>;
        $i0 = (int) 0;
        $i1 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: int getInt(int,int)>($i1, $i0);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers> = $i1;
        $i1 = <android.support.v7.appcompat.R$styleable: int LinearLayoutCompat_dividerPadding>;
        $i0 = (int) 0;
        $i1 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: int getDimensionPixelSize(int,int)>($i1, $i0);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding> = $i1;
        virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: void recycle()>();
        return;
    }

    private void forceUniformHeight(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1, $i2, $i3, $i6, $i7;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r3;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getMeasuredHeight()>();
        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);
        $i2 = 0;

     label0:
        if $i2 >= $i0 goto label2;

        $r1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i2);
        $i6 = virtualinvoke $r1.<android.view.View: int getVisibility()>();
        if $i6 == 8 goto label1;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r3 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;
        $i6 = $r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        if $i6 != -1 goto label1;

        $i6 = $r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        $i7 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();
        $r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = $i7;
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i1, 0, $i3, 0);
        $r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = $i6;

     label1:
        $i2 = $i2 + 1;
        goto label0;

     label2:
        return;
    }

    private void forceUniformWidth(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1, $i2, $i4, $i6, $i7;
        android.view.View $r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r3;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getMeasuredWidth()>();
        $i2 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i2, 1073741824);
        $i4 = 0;

     label0:
        if $i4 >= $i0 goto label2;

        $r1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i4);
        $i6 = virtualinvoke $r1.<android.view.View: int getVisibility()>();
        if $i6 == 8 goto label1;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r3 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;
        $i6 = $r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        if $i6 != -1 goto label1;

        $i6 = $r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        $i7 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();
        $r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height> = $i7;
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i2, 0, $i1, 0);
        $r3.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height> = $i6;

     label1:
        $i4 = $i4 + 1;
        goto label0;

     label2:
        return;
    }

    private void setChildFrame(android.view.View, int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 := @parameter4: int;
        $i2 = $i0 + $i2;
        $i3 = $i1 + $i3;
        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i1, $i2, $i3);
        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;
        $z0 = $r1 instanceof android.support.v7.widget.LinearLayoutCompat$LayoutParams;
        return $z0;
    }

    void drawDividersHorizontal(android.graphics.Canvas)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.graphics.Canvas $r1;
        android.view.View $r2;
        int $i0, $i1, $i2, $i4;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r4;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.graphics.Canvas;
        $i0 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();
        $z0 = staticinvoke <android.support.v7.internal.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>($r0);
        $i1 = 0;

     label0:
        if $i1 >= $i0 goto label4;

        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i1);
        if $r2 == null goto label2;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();
        if $i2 == 8 goto label2;

        $z1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i1);
        if $z1 == 0 goto label2;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r2.<android.view.View: int getRight()>();
        $i4 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i2 = $i2 + $i4;

     label1:
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void drawVerticalDivider(android.graphics.Canvas,int)>($r1, $i2);

     label2:
        $i1 = $i1 + 1;
        goto label0;

     label3:
        $i4 = virtualinvoke $r2.<android.view.View: int getLeft()>();
        $i2 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i4 = $i4 - $i2;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;
        $i2 = $i4 - $i2;
        goto label1;

     label4:
        $z1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i0);
        if $z1 == 0 goto label6;

        $i4 = $i0 + -1;
        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i4);
        if $r2 != null goto label8;

        if $z0 == 0 goto label7;

        $i4 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

     label5:
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void drawVerticalDivider(android.graphics.Canvas,int)>($r1, $i4);

     label6:
        return;

     label7:
        $i4 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getWidth()>();
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();
        $i4 = $i4 - $i2;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;
        $i4 = $i4 - $i2;
        goto label5;

     label8:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        if $z0 == 0 goto label9;

        $i4 = virtualinvoke $r2.<android.view.View: int getLeft()>();
        $i2 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i4 = $i4 - $i2;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;
        $i4 = $i4 - $i2;
        goto label5;

     label9:
        $i4 = virtualinvoke $r2.<android.view.View: int getRight()>();
        $i2 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i4 = $i4 + $i2;
        goto label5;
    }

    void drawDividersVertical(android.graphics.Canvas)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i4;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r4;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.graphics.Canvas;
        $i0 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();
        $i1 = 0;

     label0:
        if $i1 >= $i0 goto label2;

        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i1);
        if $r2 == null goto label1;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();
        if $i2 == 8 goto label1;

        $z0 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i1);
        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        $i2 = virtualinvoke $r2.<android.view.View: int getTop()>();
        $i4 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i4 = $i2 - $i4;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;
        $i2 = $i4 - $i2;
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void drawHorizontalDivider(android.graphics.Canvas,int)>($r1, $i2);

     label1:
        $i1 = $i1 + 1;
        goto label0;

     label2:
        $z0 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i0);
        if $z0 == 0 goto label4;

        $i4 = $i0 + -1;
        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i4);
        if $r2 != null goto label5;

        $i4 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getHeight()>();
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i4 = $i4 - $i2;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;
        $i0 = $i4 - $i2;

     label3:
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void drawHorizontalDivider(android.graphics.Canvas,int)>($r1, $i0);

     label4:
        return;

     label5:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        $i4 = virtualinvoke $r2.<android.view.View: int getBottom()>();
        $i2 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i0 = $i4 + $i2;
        goto label3;
    }

    void drawHorizontalDivider(android.graphics.Canvas, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.graphics.Canvas;
        $i0 := @parameter1: int;
        $r2 = $r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;
        $i1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;
        $i1 = $i1 + $i2;
        $i3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getWidth()>();
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();
        $i3 = $i3 - $i2;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;
        $i3 = $i3 - $i2;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;
        $i2 = $i2 + $i0;
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i0, $i3, $i2);
        $r2 = $r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);
        return;
    }

    void drawVerticalDivider(android.graphics.Canvas, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.graphics.Canvas;
        $i0 := @parameter1: int;
        $r2 = $r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;
        $i1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;
        $i3 = $i1 + $i2;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;
        $i4 = $i2 + $i0;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getHeight()>();
        $i1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i2 = $i2 - $i1;
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;
        $i2 = $i2 - $i1;
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i0, $i3, $i4, $i2);
        $r2 = $r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;
        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);
        return;
    }

    protected android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i2;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;
        if $i0 != 0 goto label0;

        $r1 = new android.support.v7.widget.LinearLayoutCompat$LayoutParams;
        specialinvoke $r1.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: void <init>(int,int)>(-2, -2);
        return $r1;

     label0:
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;
        if $i2 != 1 goto label1;

        $r1 = new android.support.v7.widget.LinearLayoutCompat$LayoutParams;
        specialinvoke $r1.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: void <init>(int,int)>(-1, -2);
        return $r1;

     label1:
        return null;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()>();
        return $r1;
    }

    public android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.util.AttributeSet $r1;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r2;
        android.content.Context $r3;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.util.AttributeSet;
        $r2 = new android.support.v7.widget.LinearLayoutCompat$LayoutParams;
        $r3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.content.Context getContext()>();
        specialinvoke $r2.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1);
        return $r2;
    }

    protected android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r2;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;
        $r2 = new android.support.v7.widget.LinearLayoutCompat$LayoutParams;
        specialinvoke $r2.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>($r1);
        return $r2;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.util.AttributeSet $r1;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r2;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.util.AttributeSet;
        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1);
        return $r2;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r2;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.ViewGroup$LayoutParams;
        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1);
        return $r2;
    }

    public int getBaseline()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.RuntimeException $r3;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r5;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i2 = -1;
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;
        if $i1 >= 0 goto label1;

        $i2 = specialinvoke $r0.<android.view.ViewGroup: int getBaseline()>();

     label0:
        return $i2;

     label1:
        $i0 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;
        if $i0 > $i1 goto label2;

        $r3 = new java.lang.RuntimeException;
        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.");
        throw $r3;

     label2:
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;
        $r1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getChildAt(int)>($i1);
        $i0 = virtualinvoke $r1.<android.view.View: int getBaseline()>();
        if $i0 != -1 goto label3;

        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;
        if $i1 == 0 goto label0;

        $r3 = new java.lang.RuntimeException;
        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("mBaselineAlignedChildIndex of LinearLayout points to a View that doesn\'t know how to get its baseline.");
        throw $r3;

     label3:
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineChildTop>;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;
        if $i2 != 1 goto label4;

        $i3 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        $i2 = $i3 & 112;
        if $i2 == 48 goto label4;

        lookupswitch($i2)
        {
            case 16: goto label6;
            case 80: goto label5;
            default: goto label4;
        };

     label4:
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r2;
        $i3 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i3 = $i3 + $i1;
        $i2 = $i3 + $i0;
        return $i2;

     label5:
        $i3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getBottom()>();
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getTop()>();
        $i3 = $i3 - $i2;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i3 = $i3 - $i2;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i1 = $i3 - $i2;
        goto label4;

     label6:
        $i3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getBottom()>();
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getTop()>();
        $i3 = $i3 - $i2;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();
        $i3 = $i3 - $i2;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i3 = $i3 - $i2;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i3 = $i3 - $i2;
        $i3 = $i3 / 2;
        $i1 = $i1 + $i3;
        goto label4;
    }

    public int getBaselineAlignedChildIndex()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;
        return $i0;
    }

    int getChildrenSkipCount(android.view.View, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.View $r1;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        return 0;
    }

    public android.graphics.drawable.Drawable getDividerDrawable()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 = $r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;
        return $r1;
    }

    public int getDividerPadding()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding>;
        return $i0;
    }

    public int getDividerWidth()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;
        return $i0;
    }

    int getLocationOffset(android.view.View)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.View;
        return 0;
    }

    int getNextLocationOffset(android.view.View)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.View;
        return 0;
    }

    public int getOrientation()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;
        return $i0;
    }

    public int getShowDividers()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;
        return $i0;
    }

    android.view.View getVirtualChildAt(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0;
        android.view.View $r1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $r1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getChildAt(int)>($i0);
        return $r1;
    }

    int getVirtualChildCount()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();
        return $i0;
    }

    public float getWeightSum()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        float $f0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $f0 = $r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;
        return $f0;
    }

    protected boolean hasDividerBeforeChildAt(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1;
        boolean $z0;
        android.view.View $r1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        if $i0 != 0 goto label2;

        $i0 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;
        $i1 = $i0 & 1;
        if $i1 == 0 goto label1;

     label0:
        return 1;

     label1:
        return 0;

     label2:
        $i1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();
        if $i0 != $i1 goto label3;

        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;
        $i1 = $i1 & 4;
        if $i1 != 0 goto label0;

        return 0;

     label3:
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;
        $i1 = $i1 & 2;
        if $i1 == 0 goto label7;

        $z0 = 0;
        $i0 = $i0 + -1;

     label4:
        if $i0 < 0 goto label5;

        $r1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getChildAt(int)>($i0);
        $i1 = virtualinvoke $r1.<android.view.View: int getVisibility()>();
        if $i1 == 8 goto label6;

        $z0 = 1;

     label5:
        return $z0;

     label6:
        $i0 = $i0 + -1;
        goto label4;

     label7:
        return 0;
    }

    public boolean isBaselineAligned()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $z0 = $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned>;
        return $z0;
    }

    public boolean isMeasureWithLargestChildEnabled()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $z0 = $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild>;
        return $z0;
    }

    void layoutHorizontal(int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i15;
        android.view.View $r2;
        boolean $z0, $z1;
        byte $b9;
        android.view.ViewGroup$LayoutParams $r3;
        int[] $r4, $r5;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r6;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $z1 = staticinvoke <android.support.v7.internal.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>($r0);
        $i12 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();
        $i8 = $i3 - $i1;
        $i3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i4 = $i8 - $i3;
        $i13 = $i8 - $i12;
        $i3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i7 = $i13 - $i3;
        $i8 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();
        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        $i6 = $i13 & 8388615;
        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        $i11 = $i13 & 112;
        $z0 = $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned>;
        $r4 = $r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxAscent>;
        $r5 = $r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxDescent>;
        $i3 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);
        $i13 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i6, $i3);
        lookupswitch($i13)
        {
            case 1: goto label6;
            case 5: goto label5;
            default: goto label0;
        };

     label0:
        $i6 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();

     label1:
        $i13 = 0;
        $b9 = 1;
        if $z1 == 0 goto label2;

        $i13 = $i8 + -1;
        $b9 = -1;

     label2:
        $i10 = 0;

     label3:
        if $i10 >= $i8 goto label16;

        $i5 = $b9 * $i10;
        $i5 = $i13 + $i5;
        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i5);
        if $r2 != null goto label7;

        $i5 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>($i5);
        $i6 = $i6 + $i5;

     label4:
        $i10 = $i10 + 1;
        goto label3;

     label5:
        $i13 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();
        $i13 = $i13 + $i2;
        $i13 = $i13 - $i0;
        $i10 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i6 = $i13 - $i10;
        goto label1;

     label6:
        $i10 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();
        $i6 = $i2 - $i0;
        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i13 = $i6 - $i13;
        $i13 = $i13 / 2;
        $i6 = $i10 + $i13;
        goto label1;

     label7:
        $i3 = virtualinvoke $r2.<android.view.View: int getVisibility()>();
        if $i3 == 8 goto label4;

        $i2 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();
        $i1 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();
        $i0 = -1;
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r6 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        if $z0 == 0 goto label8;

        $i3 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        if $i3 == -1 goto label8;

        $i0 = virtualinvoke $r2.<android.view.View: int getBaseline()>();

     label8:
        $i3 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;
        if $i3 >= 0 goto label9;

        $i3 = $i11;

     label9:
        $i3 = $i3 & 112;
        lookupswitch($i3)
        {
            case 16: goto label14;
            case 48: goto label13;
            case 80: goto label15;
            default: goto label10;
        };

     label10:
        $i3 = $i12;

     label11:
        $z1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i5);
        if $z1 == 0 goto label12;

        $i0 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;
        $i6 = $i6 + $i0;

     label12:
        $i0 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i6 = $i6 + $i0;
        $i0 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getLocationOffset(android.view.View)>($r2);
        $i0 = $i6 + $i0;
        specialinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void setChildFrame(android.view.View,int,int,int,int)>($r2, $i0, $i3, $i2, $i1);
        $i3 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i3 = $i3 + $i2;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r2);
        $i3 = $i3 + $i2;
        $i6 = $i6 + $i3;
        $i5 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r2, $i5);
        $i10 = $i10 + $i5;
        goto label4;

     label13:
        $i3 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i3 = $i12 + $i3;
        if $i0 == -1 goto label11;

        $i15 = $r4[1];
        $i15 = $i15 - $i0;
        $i3 = $i3 + $i15;
        goto label11;

     label14:
        $i15 = $i7 - $i1;
        $i15 = $i15 / 2;
        $i15 = $i15 + $i12;
        $i3 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i15 = $i15 + $i3;
        $i3 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i3 = $i15 - $i3;
        goto label11;

     label15:
        $i15 = $i4 - $i1;
        $i3 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i3 = $i15 - $i3;
        if $i0 == -1 goto label11;

        $i15 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();
        $i0 = $i15 - $i0;
        $i15 = $r5[2];
        $i15 = $i15 - $i0;
        $i3 = $i3 - $i15;
        goto label11;

     label16:
        return;
    }

    void layoutVertical(int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r4;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $i10 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();
        $i9 = $i2 - $i0;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();
        $i0 = $i9 - $i2;
        $i9 = $i9 - $i10;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();
        $i4 = $i9 - $i2;
        $i6 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();
        $i9 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        $i8 = $i9 & 112;
        $i9 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        $i9 = $i9 & 8388615;
        lookupswitch($i8)
        {
            case 16: goto label5;
            case 80: goto label4;
            default: goto label0;
        };

     label0:
        $i5 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();

     label1:
        $i7 = 0;

     label2:
        if $i7 >= $i6 goto label13;

        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i7);
        if $r2 != null goto label6;

        $i8 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>($i7);
        $i5 = $i5 + $i8;

     label3:
        $i7 = $i7 + 1;
        goto label2;

     label4:
        $i8 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();
        $i8 = $i8 + $i3;
        $i8 = $i8 - $i1;
        $i7 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i5 = $i8 - $i7;
        goto label1;

     label5:
        $i7 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();
        $i5 = $i3 - $i1;
        $i8 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i8 = $i5 - $i8;
        $i8 = $i8 / 2;
        $i5 = $i7 + $i8;
        goto label1;

     label6:
        $i8 = virtualinvoke $r2.<android.view.View: int getVisibility()>();
        if $i8 == 8 goto label3;

        $i2 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();
        $i1 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r4 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        $i3 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;
        if $i3 >= 0 goto label7;

        $i3 = $i9;

     label7:
        $i8 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>($r0);
        $i3 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i3, $i8);
        $i8 = $i3 & 7;
        lookupswitch($i8)
        {
            case 1: goto label11;
            case 5: goto label12;
            default: goto label8;
        };

     label8:
        $i8 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i3 = $i10 + $i8;

     label9:
        $z0 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i7);
        if $z0 == 0 goto label10;

        $i8 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;
        $i5 = $i5 + $i8;

     label10:
        $i8 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i8 = $i5 + $i8;
        $i5 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getLocationOffset(android.view.View)>($r2);
        $i5 = $i8 + $i5;
        specialinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void setChildFrame(android.view.View,int,int,int,int)>($r2, $i3, $i5, $i2, $i1);
        $i5 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i5 = $i5 + $i1;
        $i3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r2);
        $i5 = $i5 + $i3;
        $i5 = $i8 + $i5;
        $i8 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r2, $i7);
        $i7 = $i7 + $i8;
        goto label3;

     label11:
        $i8 = $i4 - $i2;
        $i8 = $i8 / 2;
        $i8 = $i8 + $i10;
        $i3 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i8 = $i8 + $i3;
        $i3 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i3 = $i8 - $i3;
        goto label9;

     label12:
        $i8 = $i0 - $i2;
        $i3 = $r4.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i3 = $i8 - $i3;
        goto label9;

     label13:
        return;
    }

    void measureChildBeforeLayout(android.view.View, int, int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 := @parameter4: int;
        $i4 := @parameter5: int;
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildWithMargins(android.view.View,int,int,int,int)>($r1, $i1, $i2, $i3, $i4);
        return;
    }

    void measureHorizontal(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1, $i2, $i4, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20;
        android.view.View $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        float $f0, $f1, $f2;
        android.view.ViewGroup$LayoutParams $r3;
        int[] $r4, $r5;
        byte $b19;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r6, $r7;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;
        $i16 = 0;
        $i10 = 0;
        $i8 = 0;
        $i17 = 0;
        $z0 = 1;
        $f0 = 0.0F;
        $i11 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();
        $i18 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);
        $i13 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);
        $z3 = 0;
        $z5 = 0;
        $r5 = $r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxAscent>;
        if $r5 == null goto label0;

        $r5 = $r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxDescent>;
        if $r5 != null goto label1;

     label0:
        $r5 = newarray (int)[4];
        $r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxAscent> = $r5;
        $r5 = newarray (int)[4];
        $r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxDescent> = $r5;

     label1:
        $r4 = $r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxAscent>;
        $r5 = $r0.<android.support.v7.widget.LinearLayoutCompat: int[] mMaxDescent>;
        $r4[3] = -1;
        $r4[2] = -1;
        $r4[1] = -1;
        $r4[0] = -1;
        $r5[3] = -1;
        $r5[2] = -1;
        $r5[1] = -1;
        $r5[0] = -1;
        $z1 = $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned>;
        $z6 = $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild>;
        if $i18 != 1073741824 goto label5;

        $z2 = 1;

     label2:
        $i14 = -2147483648;
        $i4 = 0;

     label3:
        if $i4 >= $i11 goto label32;

        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i4);
        if $r2 != null goto label6;

        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i12 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>($i4);
        $i15 = $i15 + $i12;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i15;

     label4:
        $i4 = $i4 + 1;
        goto label3;

     label5:
        $z2 = 0;
        goto label2;

     label6:
        $i15 = virtualinvoke $r2.<android.view.View: int getVisibility()>();
        if $i15 != 8 goto label7;

        $i15 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r2, $i4);
        $i4 = $i4 + $i15;
        goto label4;

     label7:
        $z4 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i4);
        if $z4 == 0 goto label8;

        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i12 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;
        $i15 = $i15 + $i12;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i15;

     label8:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r6 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        $f1 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $f0 = $f0 + $f1;
        if $i18 != 1073741824 goto label19;

        $i15 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        if $i15 != 0 goto label19;

        $f1 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b19 = $f1 cmpl 0.0F;
        if $b19 <= 0 goto label19;

        if $z2 == 0 goto label17;

        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i12 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i9 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i12 = $i12 + $i9;
        $i15 = $i15 + $i12;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i15;

     label9:
        if $z1 == 0 goto label18;

        $i9 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);
        virtualinvoke $r2.<android.view.View: void measure(int,int)>($i9, $i9);

     label10:
        $z4 = 0;
        if $i13 == 1073741824 goto label11;

        $i15 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        if $i15 != -1 goto label11;

        $z3 = 1;
        $z4 = 1;

     label11:
        $i15 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i12 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i15 = $i15 + $i12;
        $i12 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();
        $i9 = $i12 + $i15;
        $i12 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredState(android.view.View)>($r2);
        $i10 = staticinvoke <android.support.v7.internal.widget.ViewUtils: int combineMeasuredStates(int,int)>($i10, $i12);
        if $z1 == 0 goto label13;

        $i2 = virtualinvoke $r2.<android.view.View: int getBaseline()>();
        if $i2 == -1 goto label13;

        $i12 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;
        if $i12 >= 0 goto label26;

        $i12 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

     label12:
        $i12 = $i12 & 112;
        $i12 = $i12 >> 4;
        $i12 = $i12 & -2;
        $i12 = $i12 >> 1;
        $i20 = $r4[$i12];
        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i2);
        $r4[$i12] = $i20;
        $i20 = $r5[$i12];
        $i2 = $i9 - $i2;
        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i2);
        $r5[$i12] = $i20;

     label13:
        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i9);
        if $z0 == 0 goto label27;

        $i20 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        if $i20 != -1 goto label27;

        $z0 = 1;

     label14:
        $f2 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b19 = $f2 cmpl 0.0F;
        if $b19 <= 0 goto label29;

        if $z4 == 0 goto label28;

     label15:
        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i15);

     label16:
        $i20 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r2, $i4);
        $i4 = $i4 + $i20;
        goto label4;

     label17:
        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i20 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i20 = $i20 + $i15;
        $i12 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i20 = $i20 + $i12;
        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i20);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i20;
        goto label9;

     label18:
        $z5 = 1;
        goto label10;

     label19:
        $i15 = -2147483648;
        $i20 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        if $i20 != 0 goto label20;

        $f2 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b19 = $f2 cmpl 0.0F;
        if $b19 <= 0 goto label20;

        $i15 = 0;
        $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = -2;

     label20:
        $b19 = $f0 cmpl 0.0F;
        if $b19 != 0 goto label24;

        $i20 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

     label21:
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>($r2, $i4, $i0, $i20, $i1, 0);
        if $i15 == -2147483648 goto label22;

        $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width> = $i15;

     label22:
        $i9 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();
        if $z2 == 0 goto label25;

        $i20 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i15 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i15 = $i15 + $i9;
        $i12 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i15 = $i15 + $i12;
        $i12 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r2);
        $i15 = $i15 + $i12;
        $i20 = $i20 + $i15;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i20;

     label23:
        if $z6 == 0 goto label10;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i14);
        goto label10;

     label24:
        $i20 = 0;
        goto label21;

     label25:
        $i20 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i15 = $i20 + $i9;
        $i12 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i15 = $i15 + $i12;
        $i12 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i15 = $i15 + $i12;
        $i12 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r2);
        $i15 = $i15 + $i12;
        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i15);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i20;
        goto label23;

     label26:
        $i12 = $r6.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;
        goto label12;

     label27:
        $z0 = 0;
        goto label14;

     label28:
        $i15 = $i9;
        goto label15;

     label29:
        if $z4 == 0 goto label31;

     label30:
        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i15);
        goto label16;

     label31:
        $i15 = $i9;
        goto label30;

     label32:
        $i20 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        if $i20 <= 0 goto label33;

        $z4 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i11);
        if $z4 == 0 goto label33;

        $i20 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth>;
        $i20 = $i20 + $i15;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i20;

     label33:
        $i20 = $r4[1];
        if $i20 != -1 goto label34;

        $i20 = $r4[0];
        if $i20 != -1 goto label34;

        $i20 = $r4[2];
        if $i20 != -1 goto label34;

        $i20 = $r4[3];
        if $i20 == -1 goto label35;

     label34:
        $i20 = $r4[3];
        $i15 = $r4[0];
        $i12 = $r4[1];
        $i9 = $r4[2];
        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i9);
        $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i12);
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i15);
        $i20 = $r5[3];
        $i15 = $r5[0];
        $i12 = $r5[1];
        $i9 = $r5[2];
        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i9);
        $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i12);
        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i15);
        $i20 = $i4 + $i9;
        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i20);

     label35:
        if $z6 == 0 goto label42;

        if $i18 == -2147483648 goto label36;

        if $i18 != 0 goto label42;

     label36:
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;
        $i20 = 0;

     label37:
        if $i20 >= $i11 goto label42;

        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i20);
        if $r2 != null goto label39;

        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i12 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>($i20);
        $i15 = $i15 + $i12;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i15;

     label38:
        $i20 = $i20 + 1;
        goto label37;

     label39:
        $i15 = virtualinvoke $r2.<android.view.View: int getVisibility()>();
        if $i15 != 8 goto label40;

        $i15 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r2, $i20);
        $i20 = $i20 + $i15;
        goto label38;

     label40:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r7 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        if $z2 == 0 goto label41;

        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i12 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i12 = $i12 + $i14;
        $i9 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i12 = $i12 + $i9;
        $i9 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r2);
        $i12 = $i12 + $i9;
        $i15 = $i15 + $i12;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i15;
        goto label38;

     label41:
        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i12 = $i15 + $i14;
        $i9 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i12 = $i12 + $i9;
        $i9 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i12 = $i12 + $i9;
        $i9 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r2);
        $i12 = $i12 + $i9;
        $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i12);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i15;
        goto label38;

     label42:
        $i20 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i15 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();
        $i12 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();
        $i15 = $i15 + $i12;
        $i20 = $i20 + $i15;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i20;
        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i20 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getSuggestedMinimumWidth()>();
        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i20);
        $i12 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>($i20, $i0, 0);
        $i20 = $i12 & 16777215;
        $i15 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i4 = $i20 - $i15;
        if $z5 != 0 goto label43;

        if $i4 == 0 goto label71;

        $b19 = $f0 cmpl 0.0F;
        if $b19 <= 0 goto label71;

     label43:
        $f2 = $r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;
        $b19 = $f2 cmpl 0.0F;
        if $b19 <= 0 goto label47;

        $f1 = $r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;

     label44:
        $r4[3] = -1;
        $r4[2] = -1;
        $r4[1] = -1;
        $r4[0] = -1;
        $r5[3] = -1;
        $r5[2] = -1;
        $r5[1] = -1;
        $r5[0] = -1;
        $i16 = -1;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;
        $i20 = 0;

     label45:
        if $i20 >= $i11 goto label66;

        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i20);
        if $r2 == null goto label46;

        $i17 = virtualinvoke $r2.<android.view.View: int getVisibility()>();
        if $i17 != 8 goto label48;

     label46:
        $i20 = $i20 + 1;
        goto label45;

     label47:
        $f1 = $f0;
        goto label44;

     label48:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r7 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        $f0 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b19 = $f0 cmpl 0.0F;
        if $b19 <= 0 goto label52;

        $f2 = (float) $i4;
        $f2 = $f2 * $f0;
        $f2 = $f2 / $f1;
        $i15 = (int) $f2;
        $f1 = $f1 - $f0;
        $i4 = $i4 - $i15;
        $i17 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();
        $i14 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i17 = $i17 + $i14;
        $i14 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i17 = $i17 + $i14;
        $i14 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i17 = $i17 + $i14;
        $i14 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        $i9 = staticinvoke <android.support.v7.widget.LinearLayoutCompat: int getChildMeasureSpec(int,int,int)>($i1, $i17, $i14);
        $i17 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        if $i17 != 0 goto label49;

        if $i18 == 1073741824 goto label58;

     label49:
        $i17 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();
        $i17 = $i17 + $i15;
        if $i17 >= 0 goto label50;

        $i17 = 0;

     label50:
        $i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i17, 1073741824);
        virtualinvoke $r2.<android.view.View: void measure(int,int)>($i17, $i9);

     label51:
        $i17 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredState(android.view.View)>($r2);
        $i17 = $i17 & -16777216;
        $i10 = staticinvoke <android.support.v7.internal.widget.ViewUtils: int combineMeasuredStates(int,int)>($i10, $i17);

     label52:
        if $z2 == 0 goto label61;

        $i17 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i15 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();
        $i14 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i15 = $i15 + $i14;
        $i14 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i15 = $i15 + $i14;
        $i14 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r2);
        $i15 = $i15 + $i14;
        $i17 = $i17 + $i15;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i17;

     label53:
        if $i13 == 1073741824 goto label62;

        $i17 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        if $i17 != -1 goto label62;

        $z6 = 1;

     label54:
        $i17 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i15 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i17 = $i17 + $i15;
        $i15 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();
        $i15 = $i15 + $i17;
        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i15);
        if $z6 == 0 goto label63;

     label55:
        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i17);
        if $z0 == 0 goto label64;

        $i17 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        if $i17 != -1 goto label64;

        $z0 = 1;

     label56:
        if $z1 == 0 goto label46;

        $i17 = virtualinvoke $r2.<android.view.View: int getBaseline()>();
        if $i17 == -1 goto label46;

        $i14 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;
        if $i14 >= 0 goto label65;

        $i14 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;

     label57:
        $i14 = $i14 & 112;
        $i14 = $i14 >> 4;
        $i14 = $i14 & -2;
        $i14 = $i14 >> 1;
        $i9 = $r4[$i14];
        $i9 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i17);
        $r4[$i14] = $i9;
        $i9 = $r5[$i14];
        $i17 = $i15 - $i17;
        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i17);
        $r5[$i14] = $i17;
        goto label46;

     label58:
        if $i15 <= 0 goto label60;

     label59:
        $i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i15, 1073741824);
        virtualinvoke $r2.<android.view.View: void measure(int,int)>($i17, $i9);
        goto label51;

     label60:
        $i15 = 0;
        goto label59;

     label61:
        $i17 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i15 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();
        $i15 = $i15 + $i17;
        $i14 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i15 = $i15 + $i14;
        $i14 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i15 = $i15 + $i14;
        $i14 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r2);
        $i15 = $i15 + $i14;
        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i15);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i17;
        goto label53;

     label62:
        $z6 = 0;
        goto label54;

     label63:
        $i17 = $i15;
        goto label55;

     label64:
        $z0 = 0;
        goto label56;

     label65:
        $i14 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int gravity>;
        goto label57;

     label66:
        $i20 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i18 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();
        $i17 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();
        $i18 = $i18 + $i17;
        $i20 = $i20 + $i18;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i20;
        $i20 = $r4[1];
        if $i20 != -1 goto label67;

        $i20 = $r4[0];
        if $i20 != -1 goto label67;

        $i20 = $r4[2];
        if $i20 != -1 goto label67;

        $i20 = $r4[3];
        if $i20 == -1 goto label68;

     label67:
        $i20 = $r4[3];
        $i18 = $r4[0];
        $i17 = $r4[1];
        $i15 = $r4[2];
        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i15);
        $i18 = staticinvoke <java.lang.Math: int max(int,int)>($i18, $i17);
        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i18);
        $i18 = $r5[3];
        $i17 = $r5[0];
        $i15 = $r5[1];
        $i14 = $r5[2];
        $i15 = staticinvoke <java.lang.Math: int max(int,int)>($i15, $i14);
        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i15);
        $i18 = staticinvoke <java.lang.Math: int max(int,int)>($i18, $i17);
        $i20 = $i20 + $i18;
        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i16, $i20);

     label68:
        if $z0 != 0 goto label69;

        if $i13 == 1073741824 goto label69;

        $i16 = $i8;

     label69:
        $i20 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();
        $i18 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i20 = $i20 + $i18;
        $i18 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getSuggestedMinimumHeight()>();
        $i20 = $i16 + $i20;
        $i20 = staticinvoke <java.lang.Math: int max(int,int)>($i20, $i18);
        $i18 = -16777216 & $i10;
        $i18 = $i18 | $i12;
        $i17 = $i10 << 16;
        $i20 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>($i20, $i1, $i17);
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void setMeasuredDimension(int,int)>($i18, $i20);
        if $z3 == 0 goto label70;

        specialinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void forceUniformHeight(int,int)>($i11, $i0);

     label70:
        return;

     label71:
        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i17);
        if $z6 == 0 goto label68;

        if $i18 == 1073741824 goto label68;

        $i20 = 0;

     label72:
        if $i20 >= $i11 goto label68;

        $r2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i20);
        if $r2 == null goto label73;

        $i18 = virtualinvoke $r2.<android.view.View: int getVisibility()>();
        if $i18 != 8 goto label74;

     label73:
        $i20 = $i20 + 1;
        goto label72;

     label74:
        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r7 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r3;
        $f2 = $r7.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b19 = $f2 cmpl 0.0F;
        if $b19 <= 0 goto label73;

        $i18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i14, 1073741824);
        $i17 = virtualinvoke $r2.<android.view.View: int getMeasuredHeight()>();
        $i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i17, 1073741824);
        virtualinvoke $r2.<android.view.View: void measure(int,int)>($i18, $i17);
        goto label73;
    }

    int measureNullChild(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        return 0;
    }

    void measureVertical(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17;
        byte $b2, $b16;
        android.view.View $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.v7.widget.LinearLayoutCompat$LayoutParams $r5;
        java.lang.RuntimeException $r6;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;
        $i12 = 0;
        $i8 = 0;
        $i6 = 0;
        $i14 = 0;
        $z0 = 1;
        $f0 = 0.0F;
        $i9 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getVirtualChildCount()>();
        $i15 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i0);
        $i10 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>($i1);
        $z1 = 0;
        $z3 = 0;
        $i7 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex>;
        $z4 = $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild>;
        $i11 = -2147483648;
        $i3 = 0;

     label0:
        if $i3 >= $i9 goto label22;

        $r3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i3);
        if $r3 != null goto label2;

        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i4 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>($i3);
        $i13 = $i13 + $i4;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i13;

     label1:
        $i3 = $i3 + 1;
        goto label0;

     label2:
        $i13 = virtualinvoke $r3.<android.view.View: int getVisibility()>();
        if $i13 != 8 goto label3;

        $i13 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r3, $i3);
        $i3 = $i3 + $i13;
        goto label1;

     label3:
        $z2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i3);
        if $z2 == 0 goto label4;

        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i5 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;
        $i13 = $i13 + $i5;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i13;

     label4:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;
        $f1 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $f0 = $f0 + $f1;
        if $i10 != 1073741824 goto label7;

        $i13 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        if $i13 != 0 goto label7;

        $f1 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b2 = $f1 cmpl 0.0F;
        if $b2 <= 0 goto label7;

        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i5 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i5 = $i5 + $i13;
        $i4 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i5 = $i5 + $i4;
        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i13, $i5);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i13;
        $z3 = 1;

     label5:
        if $i7 < 0 goto label6;

        $i13 = $i3 + 1;
        if $i7 != $i13 goto label6;

        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineChildTop> = $i13;

     label6:
        if $i3 >= $i7 goto label12;

        $f2 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b2 = $f2 cmpl 0.0F;
        if $b2 <= 0 goto label12;

        $r6 = new java.lang.RuntimeException;
        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("A child of LinearLayout with index less than mBaselineAlignedChildIndex has weight > 0, which won\'t work.  Either remove the weight, or don\'t set mBaselineAlignedChildIndex.");
        throw $r6;

     label7:
        $i13 = -2147483648;
        $i5 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        if $i5 != 0 goto label8;

        $f2 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b2 = $f2 cmpl 0.0F;
        if $b2 <= 0 goto label8;

        $i13 = 0;
        $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height> = -2;

     label8:
        $b16 = $f0 cmpl 0.0F;
        if $b16 != 0 goto label11;

        $i5 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;

     label9:
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)>($r3, $i3, $i0, 0, $i1, $i5);
        if $i13 == -2147483648 goto label10;

        $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height> = $i13;

     label10:
        $i5 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();
        $i17 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i13 = $i17 + $i5;
        $i4 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i13 = $i13 + $i4;
        $i4 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i13 = $i13 + $i4;
        $i4 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);
        $i13 = $i13 + $i4;
        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i13);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i17;
        if $z4 == 0 goto label5;

        $i11 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i11);
        goto label5;

     label11:
        $i5 = 0;
        goto label9;

     label12:
        $z2 = 0;
        if $i15 == 1073741824 goto label13;

        $i17 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        if $i17 != -1 goto label13;

        $z1 = 1;
        $z2 = 1;

     label13:
        $i17 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i13 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i5 = $i17 + $i13;
        $i17 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();
        $i4 = $i17 + $i5;
        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i4);
        $i17 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredState(android.view.View)>($r3);
        $i8 = staticinvoke <android.support.v7.internal.widget.ViewUtils: int combineMeasuredStates(int,int)>($i8, $i17);
        if $z0 == 0 goto label17;

        $i17 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        if $i17 != -1 goto label17;

        $z0 = 1;

     label14:
        $f2 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b16 = $f2 cmpl 0.0F;
        if $b16 <= 0 goto label19;

        if $z2 == 0 goto label18;

     label15:
        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i5);

     label16:
        $i17 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r3, $i3);
        $i3 = $i3 + $i17;
        goto label1;

     label17:
        $z0 = 0;
        goto label14;

     label18:
        $i5 = $i4;
        goto label15;

     label19:
        if $z2 == 0 goto label21;

     label20:
        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i5);
        goto label16;

     label21:
        $i5 = $i4;
        goto label20;

     label22:
        $i17 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        if $i17 <= 0 goto label23;

        $z2 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)>($i9);
        if $z2 == 0 goto label23;

        $i17 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight>;
        $i17 = $i17 + $i13;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i17;

     label23:
        if $z4 == 0 goto label29;

        if $i10 == -2147483648 goto label24;

        if $i10 != 0 goto label29;

     label24:
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;
        $i17 = 0;

     label25:
        if $i17 >= $i9 goto label29;

        $r3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i17);
        if $r3 != null goto label27;

        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i7 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int measureNullChild(int)>($i17);
        $i13 = $i13 + $i7;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i13;

     label26:
        $i17 = $i17 + 1;
        goto label25;

     label27:
        $i13 = virtualinvoke $r3.<android.view.View: int getVisibility()>();
        if $i13 != 8 goto label28;

        $i13 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)>($r3, $i17);
        $i17 = $i17 + $i13;
        goto label26;

     label28:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;
        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i7 = $i13 + $i11;
        $i5 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i7 = $i7 + $i5;
        $i5 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i7 = $i7 + $i5;
        $i5 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);
        $i7 = $i7 + $i5;
        $i13 = staticinvoke <java.lang.Math: int max(int,int)>($i13, $i7);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i13;
        goto label26;

     label29:
        $i17 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i13 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();
        $i7 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i13 = $i13 + $i7;
        $i17 = $i17 + $i13;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i17;
        $i7 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i17 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getSuggestedMinimumHeight()>();
        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i17);
        $i4 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>($i17, $i1, 0);
        $i17 = $i4 & 16777215;
        $i13 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i5 = $i17 - $i13;
        if $z3 != 0 goto label30;

        if $i5 == 0 goto label53;

        $b16 = $f0 cmpl 0.0F;
        if $b16 <= 0 goto label53;

     label30:
        $f2 = $r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;
        $b16 = $f2 cmpl 0.0F;
        if $b16 <= 0 goto label34;

        $f1 = $r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum>;

     label31:
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = 0;
        $i17 = 0;

     label32:
        if $i17 >= $i9 goto label49;

        $r3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i17);
        $i14 = virtualinvoke $r3.<android.view.View: int getVisibility()>();
        if $i14 != 8 goto label35;

     label33:
        $i17 = $i17 + 1;
        goto label32;

     label34:
        $f1 = $f0;
        goto label31;

     label35:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;
        $f0 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b16 = $f0 cmpl 0.0F;
        if $b16 <= 0 goto label39;

        $f2 = (float) $i5;
        $f2 = $f2 * $f0;
        $f2 = $f2 / $f1;
        $i13 = (int) $f2;
        $f1 = $f1 - $f0;
        $i5 = $i5 - $i13;
        $i14 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();
        $i11 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();
        $i14 = $i14 + $i11;
        $i11 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i14 = $i14 + $i11;
        $i11 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i14 = $i14 + $i11;
        $i11 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        $i7 = staticinvoke <android.support.v7.widget.LinearLayoutCompat: int getChildMeasureSpec(int,int,int)>($i0, $i14, $i11);
        $i14 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int height>;
        if $i14 != 0 goto label36;

        if $i10 == 1073741824 goto label43;

     label36:
        $i14 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();
        $i14 = $i14 + $i13;
        if $i14 >= 0 goto label37;

        $i14 = 0;

     label37:
        $i14 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i14, 1073741824);
        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i7, $i14);

     label38:
        $i14 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredState(android.view.View)>($r3);
        $i14 = $i14 & -256;
        $i8 = staticinvoke <android.support.v7.internal.widget.ViewUtils: int combineMeasuredStates(int,int)>($i8, $i14);

     label39:
        $i14 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int leftMargin>;
        $i13 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int rightMargin>;
        $i14 = $i14 + $i13;
        $i13 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();
        $i13 = $i13 + $i14;
        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i13);
        if $i15 == 1073741824 goto label46;

        $i11 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        if $i11 != -1 goto label46;

        $z4 = 1;

     label40:
        if $z4 == 0 goto label47;

     label41:
        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i14);
        if $z0 == 0 goto label48;

        $i14 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int width>;
        if $i14 != -1 goto label48;

        $z0 = 1;

     label42:
        $i14 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i13 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();
        $i13 = $i13 + $i14;
        $i11 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int topMargin>;
        $i13 = $i13 + $i11;
        $i11 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: int bottomMargin>;
        $i13 = $i13 + $i11;
        $i11 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)>($r3);
        $i13 = $i13 + $i11;
        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i13);
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i14;
        goto label33;

     label43:
        if $i13 <= 0 goto label45;

     label44:
        $i14 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i13, 1073741824);
        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i7, $i14);
        goto label38;

     label45:
        $i13 = 0;
        goto label44;

     label46:
        $z4 = 0;
        goto label40;

     label47:
        $i14 = $i13;
        goto label41;

     label48:
        $z0 = 0;
        goto label42;

     label49:
        $i17 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength>;
        $i14 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingTop()>();
        $i13 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingBottom()>();
        $i14 = $i14 + $i13;
        $i17 = $i17 + $i14;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mTotalLength> = $i17;

     label50:
        if $z0 != 0 goto label51;

        if $i15 == 1073741824 goto label51;

        $i12 = $i6;

     label51:
        $i17 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingLeft()>();
        $i15 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getPaddingRight()>();
        $i17 = $i17 + $i15;
        $i15 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getSuggestedMinimumWidth()>();
        $i17 = $i12 + $i17;
        $i17 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i15);
        $i17 = staticinvoke <android.support.v4.view.ViewCompat: int resolveSizeAndState(int,int,int)>($i17, $i0, $i8);
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void setMeasuredDimension(int,int)>($i17, $i4);
        if $z1 == 0 goto label52;

        specialinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void forceUniformWidth(int,int)>($i9, $i1);

     label52:
        return;

     label53:
        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i14);
        if $z4 == 0 goto label50;

        if $i10 == 1073741824 goto label50;

        $i17 = 0;

     label54:
        if $i17 >= $i9 goto label50;

        $r3 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)>($i17);
        if $r3 == null goto label55;

        $i14 = virtualinvoke $r3.<android.view.View: int getVisibility()>();
        if $i14 != 8 goto label56;

     label55:
        $i17 = $i17 + 1;
        goto label54;

     label56:
        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();
        $r5 = (android.support.v7.widget.LinearLayoutCompat$LayoutParams) $r4;
        $f2 = $r5.<android.support.v7.widget.LinearLayoutCompat$LayoutParams: float weight>;
        $b16 = $f2 cmpl 0.0F;
        if $b16 <= 0 goto label55;

        $i14 = virtualinvoke $r3.<android.view.View: int getMeasuredWidth()>();
        $i14 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i14, 1073741824);
        $i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i11, 1073741824);
        virtualinvoke $r3.<android.view.View: void measure(int,int)>($i14, $i13);
        goto label55;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        int $i1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.graphics.Canvas;
        $r2 = $r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;
        if $r2 != null goto label1;

     label0:
        return;

     label1:
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;
        if $i1 != 1 goto label2;

        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void drawDividersVertical(android.graphics.Canvas)>($r1);
        goto label0;

     label2:
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void drawDividersHorizontal(android.graphics.Canvas)>($r1);
        goto label0;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.accessibility.AccessibilityEvent $r1;
        int $i0;
        java.lang.String $r2;
        java.lang.Class $r3;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 14 goto label0;

        specialinvoke $r0.<android.view.ViewGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);
        $r3 = class "android/support/v7/widget/LinearLayoutCompat";
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();
        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r2);

     label0:
        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        int $i0;
        java.lang.String $r2;
        java.lang.Class $r3;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 14 goto label0;

        specialinvoke $r0.<android.view.ViewGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);
        $r3 = class "android/support/v7/widget/LinearLayoutCompat";
        $r2 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();
        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r2);

     label0:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $z0 := @parameter0: boolean;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 := @parameter4: int;
        $i4 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;
        if $i4 != 1 goto label1;

        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void layoutVertical(int,int,int,int)>($i0, $i1, $i2, $i3);

     label0:
        return;

     label1:
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void layoutHorizontal(int,int,int,int)>($i0, $i1, $i2, $i3);
        goto label0;
    }

    protected void onMeasure(int, int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;
        if $i2 != 1 goto label1;

        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void measureVertical(int,int)>($i0, $i1);

     label0:
        return;

     label1:
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void measureHorizontal(int,int)>($i0, $i1);
        goto label0;
    }

    public void setBaselineAligned(boolean)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $z0 := @parameter0: boolean;
        $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mBaselineAligned> = $z0;
        return;
    }

    public void setBaselineAlignedChildIndex(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r3;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        if $i0 < 0 goto label0;

        $i1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();
        if $i0 < $i1 goto label1;

     label0:
        $r3 = new java.lang.IllegalArgumentException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base aligned child index out of range (0, ");
        $i1 = virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: int getChildCount()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);
        throw $r3;

     label1:
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex> = $i0;
        return;
    }

    public void setDividerDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $z0 = 0;
        $r2 = $r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider>;
        if $r1 != $r2 goto label1;

     label0:
        return;

     label1:
        $r0.<android.support.v7.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider> = $r1;
        if $r1 == null goto label4;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth> = $i0;
        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight> = $i0;

     label2:
        if $r1 != null goto label3;

        $z0 = 1;

     label3:
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void setWillNotDraw(boolean)>($z0);
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();
        goto label0;

     label4:
        $i0 = (int) 0;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerWidth> = $i0;
        $i0 = (int) 0;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerHeight> = $i0;
        goto label2;
    }

    public void setDividerPadding(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mDividerPadding> = $i0;
        return;
    }

    public void setGravity(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        if $i1 == $i0 goto label2;

        $i1 = 8388615 & $i0;
        if $i1 != 0 goto label0;

        $i0 = $i0 | 8388611;

     label0:
        $i1 = $i0 & 112;
        if $i1 != 0 goto label1;

        $i0 = $i0 | 48;

     label1:
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity> = $i0;
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label2:
        return;
    }

    public void setHorizontalGravity(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i0 = $i0 & 8388615;
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        $i2 = $i1 & 8388615;
        if $i2 == $i0 goto label0;

        $i2 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        $i2 = $i2 & -8388616;
        $i2 = $i2 | $i0;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity> = $i2;
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label0:
        return;
    }

    public void setMeasureWithLargestChildEnabled(boolean)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $z0 := @parameter0: boolean;
        $r0.<android.support.v7.widget.LinearLayoutCompat: boolean mUseLargestChild> = $z0;
        return;
    }

    public void setOrientation(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation>;
        if $i1 == $i0 goto label0;

        $r0.<android.support.v7.widget.LinearLayoutCompat: int mOrientation> = $i0;
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label0:
        return;
    }

    public void setShowDividers(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers>;
        if $i0 == $i1 goto label0;

        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label0:
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mShowDividers> = $i0;
        return;
    }

    public void setVerticalGravity(int)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $i0 := @parameter0: int;
        $i0 = $i0 & 112;
        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        $i1 = $i1 & 112;
        if $i1 == $i0 goto label0;

        $i1 = $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity>;
        $i1 = $i1 & -113;
        $i1 = $i1 | $i0;
        $r0.<android.support.v7.widget.LinearLayoutCompat: int mGravity> = $i1;
        virtualinvoke $r0.<android.support.v7.widget.LinearLayoutCompat: void requestLayout()>();

     label0:
        return;
    }

    public void setWeightSum(float)
    {
        android.support.v7.widget.LinearLayoutCompat $r0;
        float $f0, $f1;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        $f0 := @parameter0: float;
        $f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0);
        $r0.<android.support.v7.widget.LinearLayoutCompat: float mWeightSum> = $f1;
        return;
    }

    public boolean shouldDelayChildPressedState()
    {
        android.support.v7.widget.LinearLayoutCompat $r0;

        $r0 := @this: android.support.v7.widget.LinearLayoutCompat;
        return 0;
    }
}
