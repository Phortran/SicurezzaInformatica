public class android.support.v4.graphics.ColorUtils extends java.lang.Object
{
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS;
    private static final int MIN_ALPHA_SEARCH_PRECISION;

    private void <init>()
    {
        android.support.v4.graphics.ColorUtils $r0;

        $r0 := @this: android.support.v4.graphics.ColorUtils;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static int HSLToColor(float[])
    {
        float[] $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        $r0 := @parameter0: float[];
        $f1 = $r0[0];
        $f0 = $r0[1];
        $f2 = $r0[2];
        $f5 = 2.0F * $f2;
        $f5 = $f5 - 1.0F;
        $f5 = staticinvoke <java.lang.Math: float abs(float)>($f5);
        $f5 = 1.0F - $f5;
        $f0 = $f5 * $f0;
        $f5 = 0.5F * $f0;
        $f2 = $f2 - $f5;
        $f4 = $f1 / 60.0F;
        $f4 = $f4 % 2.0F;
        $f4 = $f4 - 1.0F;
        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f4);
        $f5 = 1.0F - $f4;
        $f3 = $f0 * $f5;
        $i3 = (int) $f1;
        $i2 = $i3 / 60;
        $i3 = 0;
        $i1 = 0;
        $i0 = 0;
        lookupswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label6;
            default: goto label0;
        };

     label0:
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(255, $i3);
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);
        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(255, $i1);
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);
        $i1 = staticinvoke <java.lang.Math: int min(int,int)>(255, $i0);
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);
        $i3 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i3, $i2, $i1);
        return $i3;

     label1:
        $f4 = $f0 + $f2;
        $f5 = 255.0F * $f4;
        $i3 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f4 = $f3 + $f2;
        $f5 = 255.0F * $f4;
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f5 = 255.0F * $f2;
        $i0 = staticinvoke <java.lang.Math: int round(float)>($f5);
        goto label0;

     label2:
        $f4 = $f3 + $f2;
        $f5 = 255.0F * $f4;
        $i3 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f4 = $f0 + $f2;
        $f5 = 255.0F * $f4;
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f5 = 255.0F * $f2;
        $i0 = staticinvoke <java.lang.Math: int round(float)>($f5);
        goto label0;

     label3:
        $f5 = 255.0F * $f2;
        $i3 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f4 = $f0 + $f2;
        $f5 = 255.0F * $f4;
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f4 = $f3 + $f2;
        $f5 = 255.0F * $f4;
        $i0 = staticinvoke <java.lang.Math: int round(float)>($f5);
        goto label0;

     label4:
        $f5 = 255.0F * $f2;
        $i3 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f4 = $f3 + $f2;
        $f5 = 255.0F * $f4;
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f4 = $f0 + $f2;
        $f5 = 255.0F * $f4;
        $i0 = staticinvoke <java.lang.Math: int round(float)>($f5);
        goto label0;

     label5:
        $f4 = $f3 + $f2;
        $f5 = 255.0F * $f4;
        $i3 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f5 = 255.0F * $f2;
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f4 = $f0 + $f2;
        $f5 = 255.0F * $f4;
        $i0 = staticinvoke <java.lang.Math: int round(float)>($f5);
        goto label0;

     label6:
        $f4 = $f0 + $f2;
        $f5 = 255.0F * $f4;
        $i3 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f5 = 255.0F * $f2;
        $i1 = staticinvoke <java.lang.Math: int round(float)>($f5);
        $f4 = $f3 + $f2;
        $f5 = 255.0F * $f4;
        $i0 = staticinvoke <java.lang.Math: int round(float)>($f5);
        goto label0;
    }

    public static void RGBToHSL(int, int, int, float[])
    {
        int $i0, $i1, $i2;
        float[] $r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        byte $b3;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $r0 := @parameter3: float[];
        $f6 = (float) $i0;
        $f6 = $f6 / 255.0F;
        $f5 = (float) $i1;
        $f2 = $f5 / 255.0F;
        $f5 = (float) $i2;
        $f0 = $f5 / 255.0F;
        $f5 = staticinvoke <java.lang.Math: float max(float,float)>($f2, $f0);
        $f4 = staticinvoke <java.lang.Math: float max(float,float)>($f6, $f5);
        $f5 = staticinvoke <java.lang.Math: float min(float,float)>($f2, $f0);
        $f5 = staticinvoke <java.lang.Math: float min(float,float)>($f6, $f5);
        $f1 = $f4 - $f5;
        $f3 = $f4 + $f5;
        $f3 = $f3 / 2.0F;
        $b3 = $f4 cmpl $f5;
        if $b3 != 0 goto label1;

        $f6 = 0.0F;
        $f2 = 0.0F;

     label0:
        $f7 = 60.0F * $f2;
        $f7 = $f7 % 360.0F;
        $r0[0] = $f7;
        $r0[1] = $f6;
        $r0[2] = $f3;
        return;

     label1:
        $b3 = $f4 cmpl $f6;
        if $b3 != 0 goto label3;

        $f7 = $f2 - $f0;
        $f7 = $f7 / $f1;
        $f2 = $f7 % 6.0F;

     label2:
        $f6 = 2.0F * $f3;
        $f6 = $f6 - 1.0F;
        $f6 = staticinvoke <java.lang.Math: float abs(float)>($f6);
        $f7 = 1.0F - $f6;
        $f6 = $f1 / $f7;
        goto label0;

     label3:
        $b3 = $f4 cmpl $f2;
        if $b3 != 0 goto label4;

        $f7 = $f0 - $f6;
        $f7 = $f7 / $f1;
        $f2 = $f7 + 2.0F;
        goto label2;

     label4:
        $f7 = $f6 - $f2;
        $f7 = $f7 / $f1;
        $f2 = $f7 + 4.0F;
        goto label2;
    }

    public static double calculateContrast(int, int)
    {
        int $i0, $i1, $i2;
        double $d0, $d1, $d2;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);
        if $i2 == 255 goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("background can not be translucent");
        throw $r0;

     label0:
        $i2 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);
        if $i2 >= 255 goto label1;

        $i0 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeColors(int,int)>($i0, $i1);

     label1:
        $d0 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateLuminance(int)>($i0);
        $d0 = $d0 + 0.05;
        $d2 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateLuminance(int)>($i1);
        $d1 = $d2 + 0.05;
        $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);
        $d1 = staticinvoke <java.lang.Math: double min(double,double)>($d0, $d1);
        $d2 = $d2 / $d1;
        return $d2;
    }

    public static double calculateLuminance(int)
    {
        int $i0, $i1;
        double $d0, $d1, $d2, $d3;
        byte $b2;

        $i0 := @parameter0: int;
        $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0);
        $d1 = (double) $i1;
        $d0 = $d1 / 255.0;
        $b2 = $d0 cmpg 0.03928;
        if $b2 >= 0 goto label3;

        $d1 = $d0 / 12.92;

     label0:
        $i1 = staticinvoke <android.graphics.Color: int green(int)>($i0);
        $d0 = (double) $i1;
        $d0 = $d0 / 255.0;
        $b2 = $d0 cmpg 0.03928;
        if $b2 >= 0 goto label4;

        $d2 = $d0 / 12.92;

     label1:
        $i1 = staticinvoke <android.graphics.Color: int blue(int)>($i0);
        $d0 = (double) $i1;
        $d0 = $d0 / 255.0;
        $b2 = $d0 cmpg 0.03928;
        if $b2 >= 0 goto label5;

        $d3 = $d0 / 12.92;

     label2:
        $d1 = 0.2126 * $d1;
        $d2 = 0.7152 * $d2;
        $d2 = $d1 + $d2;
        $d3 = 0.0722 * $d3;
        $d3 = $d2 + $d3;
        return $d3;

     label3:
        $d3 = 0.055 + $d0;
        $d3 = $d3 / 1.055;
        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d3, 2.4);
        goto label0;

     label4:
        $d3 = 0.055 + $d0;
        $d3 = $d3 / 1.055;
        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d3, 2.4);
        goto label1;

     label5:
        $d3 = 0.055 + $d0;
        $d3 = $d3 / 1.055;
        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d3, 2.4);
        goto label2;
    }

    public static int calculateMinimumAlpha(int, int, float)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i9;
        float $f0;
        double $d0, $d1;
        java.lang.IllegalArgumentException $r0;
        byte $b8;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $f0 := @parameter2: float;
        $i5 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);
        if $i5 == 255 goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("background can not be translucent");
        throw $r0;

     label0:
        $i5 = staticinvoke <android.support.v4.graphics.ColorUtils: int setAlphaComponent(int,int)>($i0, 255);
        $d0 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateContrast(int,int)>($i5, $i1);
        $d1 = (double) $f0;
        $b8 = $d0 cmpg $d1;
        if $b8 >= 0 goto label2;

        $i2 = -1;

     label1:
        return $i2;

     label2:
        $i4 = 0;
        $i3 = 0;
        $i2 = 255;

     label3:
        if $i4 > 10 goto label1;

        $i5 = $i2 - $i3;
        if $i5 <= 10 goto label1;

        $i5 = $i3 + $i2;
        $i5 = $i5 / 2;
        $i9 = staticinvoke <android.support.v4.graphics.ColorUtils: int setAlphaComponent(int,int)>($i0, $i5);
        $d1 = staticinvoke <android.support.v4.graphics.ColorUtils: double calculateContrast(int,int)>($i9, $i1);
        $d0 = (double) $f0;
        $b8 = $d1 cmpg $d0;
        if $b8 >= 0 goto label5;

        $i3 = $i5;

     label4:
        $i4 = $i4 + 1;
        goto label3;

     label5:
        $i2 = $i5;
        goto label4;
    }

    public static void colorToHSL(int, float[])
    {
        int $i0, $i1, $i2;
        float[] $r0;

        $i0 := @parameter0: int;
        $r0 := @parameter1: float[];
        $i1 = staticinvoke <android.graphics.Color: int red(int)>($i0);
        $i2 = staticinvoke <android.graphics.Color: int green(int)>($i0);
        $i0 = staticinvoke <android.graphics.Color: int blue(int)>($i0);
        staticinvoke <android.support.v4.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])>($i1, $i2, $i0, $r0);
        return;
    }

    private static int compositeAlpha(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i1 = 255 - $i1;
        $i0 = 255 - $i0;
        $i1 = $i1 * $i0;
        $i1 = $i1 / 255;
        $i1 = 255 - $i1;
        return $i1;
    }

    public static int compositeColors(int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i3 = staticinvoke <android.graphics.Color: int alpha(int)>($i1);
        $i4 = staticinvoke <android.graphics.Color: int alpha(int)>($i0);
        $i2 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeAlpha(int,int)>($i4, $i3);
        $i6 = staticinvoke <android.graphics.Color: int red(int)>($i0);
        $i5 = staticinvoke <android.graphics.Color: int red(int)>($i1);
        $i6 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i6, $i4, $i5, $i3, $i2);
        $i5 = staticinvoke <android.graphics.Color: int green(int)>($i0);
        $i7 = staticinvoke <android.graphics.Color: int green(int)>($i1);
        $i5 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i5, $i4, $i7, $i3, $i2);
        $i7 = staticinvoke <android.graphics.Color: int blue(int)>($i0);
        $i1 = staticinvoke <android.graphics.Color: int blue(int)>($i1);
        $i1 = staticinvoke <android.support.v4.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)>($i7, $i4, $i1, $i3, $i2);
        $i7 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i2, $i6, $i5, $i1);
        return $i7;
    }

    private static int compositeComponent(int, int, int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $i4 := @parameter4: int;
        if $i4 != 0 goto label0;

        return 0;

     label0:
        $i0 = $i0 * 255;
        $i0 = $i0 * $i1;
        $i3 = $i2 * $i3;
        $i2 = 255 - $i1;
        $i3 = $i3 * $i2;
        $i3 = $i0 + $i3;
        $i4 = $i4 * 255;
        $i4 = $i3 / $i4;
        return $i4;
    }

    public static int setAlphaComponent(int, int)
    {
        int $i0, $i1, $i3;
        java.lang.IllegalArgumentException $r1;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        if $i1 < 0 goto label0;

        if $i1 <= 255 goto label1;

     label0:
        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("alpha must be between 0 and 255.");
        throw $r1;

     label1:
        $i3 = 16777215 & $i0;
        $i1 = $i1 << 24;
        $i3 = $i3 | $i1;
        return $i3;
    }
}
