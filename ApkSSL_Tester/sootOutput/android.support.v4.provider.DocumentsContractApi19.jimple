class android.support.v4.provider.DocumentsContractApi19 extends java.lang.Object
{
    private static final java.lang.String TAG;

    void <init>()
    {
        android.support.v4.provider.DocumentsContractApi19 $r0;

        $r0 := @this: android.support.v4.provider.DocumentsContractApi19;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static boolean canRead(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        int $i0;
        java.lang.String $r2;
        boolean $z1;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $i0 = (int) 1;
        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>($r1, $i0);
        if $i0 == 0 goto label1;

     label0:
        return 0;

     label1:
        $r2 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);
        if $z1 != 0 goto label0;

        return 1;
    }

    public static boolean canWrite(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        int $i0, $i3;
        java.lang.String $r2, $r3;
        boolean $z1;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>($r1, 2);
        if $i0 == 0 goto label1;

     label0:
        return 0;

     label1:
        $r2 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);
        $i0 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int)>($r0, $r1, "flags", 0);
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);
        if $z1 != 0 goto label0;

        $i3 = $i0 & 4;
        if $i3 == 0 goto label2;

        return 1;

     label2:
        $r3 = "vnd.android.document/directory";
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z1 == 0 goto label3;

        $i3 = $i0 & 8;
        if $i3 == 0 goto label3;

        return 1;

     label3:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);
        if $z1 != 0 goto label0;

        $i3 = $i0 & 2;
        if $i3 == 0 goto label0;

        return 1;
    }

    private static void closeQuietly(java.lang.AutoCloseable)
    {
        java.lang.AutoCloseable $r0;
        java.lang.RuntimeException $r1;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.lang.AutoCloseable;
        if $r0 == null goto label1;

     label0:
        interfaceinvoke $r0.<java.lang.AutoCloseable: void close()>();

     label1:
        return;

     label2:
        $r1 := @caughtexception;
        throw $r1;

     label3:
        $r2 := @caughtexception;
        goto label1;

        catch java.lang.RuntimeException from label0 to label1 with label2;
        catch java.lang.Exception from label0 to label1 with label3;
    }

    public static boolean delete(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        android.content.ContentResolver $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();
        $z0 = staticinvoke <android.provider.DocumentsContract: boolean deleteDocument(android.content.ContentResolver,android.net.Uri)>($r2, $r1);
        return $z0;
    }

    public static boolean exists(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        android.content.ContentResolver $r2;
        java.lang.String[] $r3;
        android.database.Cursor $r5;
        java.lang.Exception $r6;
        boolean $z1;
        int $i1;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        java.lang.Throwable $r10;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();
        $r5 = null;

     label0:
        $r3 = newarray (java.lang.String)[1];
        $r3[0] = "document_id";
        $r5 = virtualinvoke $r2.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r3, null, null, null);
        $i1 = interfaceinvoke $r5.<android.database.Cursor: int getCount()>();

     label1:
        if $i1 <= 0 goto label3;

        $z1 = 1;

     label2:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);
        return $z1;

     label3:
        $z1 = 0;
        goto label2;

     label4:
        $r6 := @caughtexception;

     label5:
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r9);

     label6:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);
        return 0;

     label7:
        $r10 := @caughtexception;
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);
        throw $r10;

        catch java.lang.Exception from label0 to label1 with label4;
        catch java.lang.Throwable from label0 to label1 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static java.lang.String getName(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>($r0, $r1, "_display_name", null);
        return $r2;
    }

    private static java.lang.String getRawType(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>($r0, $r1, "mime_type", null);
        return $r2;
    }

    public static java.lang.String getType(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);
        $r3 = "vnd.android.document/directory";
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label0;

        $r2 = null;

     label0:
        return $r2;
    }

    public static boolean isDirectory(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 = "vnd.android.document/directory";
        $r3 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        return $z0;
    }

    public static boolean isDocumentUri(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $z0 = staticinvoke <android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>($r0, $r1);
        return $z0;
    }

    public static boolean isFile(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: java.lang.String getRawType(android.content.Context,android.net.Uri)>($r0, $r1);
        $r3 = "vnd.android.document/directory";
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 != 0 goto label0;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);
        if $z0 == 0 goto label1;

     label0:
        return 0;

     label1:
        return 1;
    }

    public static long lastModified(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        long $l0;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $l0 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, "last_modified", 0L);
        return $l0;
    }

    public static long length(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        long $l0;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $l0 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, "_size", 0L);
        return $l0;
    }

    private static int queryForInt(android.content.Context, android.net.Uri, java.lang.String, int)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2;
        int $i0;
        long $l1;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 := @parameter2: java.lang.String;
        $i0 := @parameter3: int;
        $l1 = (long) $i0;
        $l1 = staticinvoke <android.support.v4.provider.DocumentsContractApi19: long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)>($r0, $r1, $r2, $l1);
        $i0 = (int) $l1;
        return $i0;
    }

    private static long queryForLong(android.content.Context, android.net.Uri, java.lang.String, long)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r9;
        long $l0, $l2;
        android.content.ContentResolver $r3;
        java.lang.String[] $r4;
        android.database.Cursor $r5;
        java.lang.Exception $r6;
        boolean $z0;
        java.lang.StringBuilder $r8;
        java.lang.Throwable $r10;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 := @parameter2: java.lang.String;
        $l0 := @parameter3: long;
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();
        $r5 = null;

     label0:
        $r4 = newarray (java.lang.String)[1];
        $r4[0] = $r2;
        $r5 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r4, null, null, null);
        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();
        if $z0 == 0 goto label2;

        $z0 = interfaceinvoke $r5.<android.database.Cursor: boolean isNull(int)>(0);
        if $z0 != 0 goto label2;

        $l2 = interfaceinvoke $r5.<android.database.Cursor: long getLong(int)>(0);

     label1:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);
        return $l2;

     label2:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);
        return $l0;

     label3:
        $r6 := @caughtexception;

     label4:
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r9);

     label5:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);
        return $l0;

     label6:
        $r10 := @caughtexception;
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r5);
        throw $r10;

        catch java.lang.Exception from label0 to label1 with label3;
        catch java.lang.Throwable from label0 to label1 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private static java.lang.String queryForString(android.content.Context, android.net.Uri, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3, $r10;
        android.content.ContentResolver $r4;
        java.lang.String[] $r5;
        android.database.Cursor $r6;
        java.lang.Exception $r7;
        boolean $z0;
        java.lang.StringBuilder $r9;
        java.lang.Throwable $r11;

        $r0 := @parameter0: android.content.Context;
        $r1 := @parameter1: android.net.Uri;
        $r2 := @parameter2: java.lang.String;
        $r3 := @parameter3: java.lang.String;
        $r4 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();
        $r6 = null;

     label0:
        $r5 = newarray (java.lang.String)[1];
        $r5[0] = $r2;
        $r6 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r5, null, null, null);
        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();
        if $z0 == 0 goto label2;

        $z0 = interfaceinvoke $r6.<android.database.Cursor: boolean isNull(int)>(0);
        if $z0 != 0 goto label2;

        $r2 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(0);

     label1:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r6);
        return $r2;

     label2:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r6);
        return $r3;

     label3:
        $r7 := @caughtexception;

     label4:
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed query: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r10);

     label5:
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r6);
        return $r3;

     label6:
        $r11 := @caughtexception;
        staticinvoke <android.support.v4.provider.DocumentsContractApi19: void closeQuietly(java.lang.AutoCloseable)>($r6);
        throw $r11;

        catch java.lang.Exception from label0 to label1 with label3;
        catch java.lang.Throwable from label0 to label1 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
