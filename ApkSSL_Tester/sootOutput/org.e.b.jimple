public class org.e.b extends java.lang.Object
{
    public java.lang.Object a;
    public java.lang.Object b;
    public org.f.b.a[] c;
    public org.f.b.a[] d;
    public java.lang.String e;
    public int f;
    public java.lang.String g;
    public java.lang.String h;
    public java.lang.String i;
    public java.lang.String j;

    public void <init>(int)
    {
        org.e.b $r0;
        int $i0;

        $r0 := @this: org.e.b;
        $i0 := @parameter0: int;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r0.<org.e.b: int f> = $i0;
        if $i0 != 100 goto label2;

        $r0.<org.e.b: java.lang.String i> = "http://www.w3.org/1999/XMLSchema-instance";
        $r0.<org.e.b: java.lang.String j> = "http://www.w3.org/1999/XMLSchema";

     label0:
        if $i0 >= 120 goto label3;

        $r0.<org.e.b: java.lang.String h> = "http://schemas.xmlsoap.org/soap/encoding/";
        $r0.<org.e.b: java.lang.String g> = "http://schemas.xmlsoap.org/soap/envelope/";

     label1:
        return;

     label2:
        $r0.<org.e.b: java.lang.String i> = "http://www.w3.org/2001/XMLSchema-instance";
        $r0.<org.e.b: java.lang.String j> = "http://www.w3.org/2001/XMLSchema";
        goto label0;

     label3:
        $r0.<org.e.b: java.lang.String h> = "http://www.w3.org/2003/05/soap-encoding";
        $r0.<org.e.b: java.lang.String g> = "http://www.w3.org/2003/05/soap-envelope";
        goto label1;
    }

    public static boolean a(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;
        if $r0 != null goto label1;

     label0:
        return 0;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();
        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("1");
        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("true");
        if $z0 == 0 goto label0;

     label2:
        return 1;
    }

    public void a(java.lang.Object)
    {
        org.e.b $r0;
        java.lang.Object $r1;

        $r0 := @this: org.e.b;
        $r1 := @parameter0: java.lang.Object;
        $r0.<org.e.b: java.lang.Object b> = $r1;
        return;
    }

    public void a(org.xmlpull.v1.XmlPullParser)
    {
        org.e.b $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2, $r3;
        int $i2;
        boolean $z0;

        $r0 := @this: org.e.b;
        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();
        $r2 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r2, "Envelope");
        $r3 = $r0.<org.e.b: java.lang.String g>;
        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r3, "encodingStyle");
        $r0.<org.e.b: java.lang.String e> = $r3;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();
        $i2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();
        if $i2 != 2 goto label0;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();
        $r2 = $r0.<org.e.b: java.lang.String g>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label0;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Header");
        if $z0 == 0 goto label0;

        virtualinvoke $r0.<org.e.b: void b(org.xmlpull.v1.XmlPullParser)>($r1);
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r3, "Header");
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();

     label0:
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(2, $r3, "Body");
        $r3 = $r0.<org.e.b: java.lang.String g>;
        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>($r3, "encodingStyle");
        $r0.<org.e.b: java.lang.String e> = $r3;
        virtualinvoke $r0.<org.e.b: void c(org.xmlpull.v1.XmlPullParser)>($r1);
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r3, "Body");
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: void require(int,java.lang.String,java.lang.String)>(3, $r3, "Envelope");
        return;
    }

    public void a(org.xmlpull.v1.XmlSerializer)
    {
        org.e.b $r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.String $r2, $r3;

        $r0 := @this: org.e.b;
        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;
        $r3 = $r0.<org.e.b: java.lang.String i>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("i", $r3);
        $r2 = $r0.<org.e.b: java.lang.String j>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("d", $r2);
        $r2 = $r0.<org.e.b: java.lang.String h>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("c", $r2);
        $r2 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("v", $r2);
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r3, "Envelope");
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r3, "Header");
        virtualinvoke $r0.<org.e.b: void b(org.xmlpull.v1.XmlSerializer)>($r1);
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r3, "Header");
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>($r3, "Body");
        virtualinvoke $r0.<org.e.b: void c(org.xmlpull.v1.XmlSerializer)>($r1);
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r3, "Body");
        $r3 = $r0.<org.e.b: java.lang.String g>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r3, "Envelope");
        return;
    }

    public void b(org.xmlpull.v1.XmlPullParser)
    {
        org.e.b $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0, $i1, $i2, $i3;
        org.f.b.b $r2;
        org.f.b.a[] $r3;
        org.f.b.a $r4;

        $r0 := @this: org.e.b;
        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;
        $i1 = 0;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();
        $r2 = new org.f.b.b;
        specialinvoke $r2.<org.f.b.b: void <init>()>();
        virtualinvoke $r2.<org.f.b.b: void a(org.xmlpull.v1.XmlPullParser)>($r1);
        $i0 = 0;
        $i2 = 0;

     label0:
        $i3 = virtualinvoke $r2.<org.f.b.b: int e()>();
        if $i0 >= $i3 goto label2;

        $r4 = virtualinvoke $r2.<org.f.b.b: org.f.b.a g(int)>($i0);
        if $r4 == null goto label1;

        $i2 = $i2 + 1;

     label1:
        $i0 = $i0 + 1;
        goto label0;

     label2:
        $r3 = newarray (org.f.b.a)[$i2];
        $r0.<org.e.b: org.f.b.a[] c> = $r3;
        $i3 = 0;

     label3:
        $i2 = virtualinvoke $r2.<org.f.b.b: int e()>();
        if $i1 >= $i2 goto label5;

        $r4 = virtualinvoke $r2.<org.f.b.b: org.f.b.a g(int)>($i1);
        if $r4 == null goto label4;

        $r3 = $r0.<org.e.b: org.f.b.a[] c>;
        $r3[$i3] = $r4;
        $i3 = $i3 + 1;

     label4:
        $i1 = $i1 + 1;
        goto label3;

     label5:
        return;
    }

    public void b(org.xmlpull.v1.XmlSerializer)
    {
        org.e.b $r0;
        org.xmlpull.v1.XmlSerializer $r1;
        org.f.b.a[] $r2;
        int $i0, $i1;
        org.f.b.a $r3;

        $r0 := @this: org.e.b;
        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;
        $r2 = $r0.<org.e.b: org.f.b.a[] d>;
        if $r2 == null goto label1;

        $i0 = 0;

     label0:
        $r2 = $r0.<org.e.b: org.f.b.a[] d>;
        $i1 = lengthof $r2;
        if $i0 >= $i1 goto label1;

        $r2 = $r0.<org.e.b: org.f.b.a[] d>;
        $r3 = $r2[$i0];
        virtualinvoke $r3.<org.f.b.a: void a(org.xmlpull.v1.XmlSerializer)>($r1);
        $i0 = $i0 + 1;
        goto label0;

     label1:
        return;
    }

    public void c(org.xmlpull.v1.XmlPullParser)
    {
        org.e.b $r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0;
        org.e.c $r4, r7;
        java.lang.Object $r5;
        org.f.b.b $r6, r9;
        org.e.d r8;

        $r0 := @this: org.e.b;
        $r1 := @parameter0: org.xmlpull.v1.XmlPullParser;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int nextTag()>();
        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();
        if $i0 != 2 goto label3;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();
        $r3 = $r0.<org.e.b: java.lang.String g>;
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("Fault");
        if $z0 == 0 goto label3;

        $i0 = $r0.<org.e.b: int f>;
        if $i0 >= 120 goto label2;

        r7 = new org.e.c;
        $r4 = r7;
        $i0 = $r0.<org.e.b: int f>;
        specialinvoke r7.<org.e.c: void <init>(int)>($i0);

     label0:
        virtualinvoke $r4.<org.e.c: void a(org.xmlpull.v1.XmlPullParser)>($r1);
        $r0.<org.e.b: java.lang.Object a> = $r4;

     label1:
        return;

     label2:
        r8 = new org.e.d;
        $r4 = r8;
        $i0 = $r0.<org.e.b: int f>;
        specialinvoke r8.<org.e.d: void <init>(int)>($i0);
        goto label0;

     label3:
        $r5 = $r0.<org.e.b: java.lang.Object a>;
        $z0 = $r5 instanceof org.f.b.b;
        if $z0 == 0 goto label5;

        $r5 = $r0.<org.e.b: java.lang.Object a>;
        $r6 = (org.f.b.b) $r5;

     label4:
        virtualinvoke $r6.<org.f.b.b: void a(org.xmlpull.v1.XmlPullParser)>($r1);
        $r0.<org.e.b: java.lang.Object a> = $r6;
        goto label1;

     label5:
        r9 = new org.f.b.b;
        $r6 = r9;
        specialinvoke r9.<org.f.b.b: void <init>()>();
        goto label4;
    }

    public void c(org.xmlpull.v1.XmlSerializer)
    {
        org.e.b $r0;
        org.xmlpull.v1.XmlSerializer $r1;
        java.lang.String $r2, $r3, $r4;
        java.lang.Object $r5;
        org.f.b.b $r6;

        $r0 := @this: org.e.b;
        $r1 := @parameter0: org.xmlpull.v1.XmlSerializer;
        $r2 = $r0.<org.e.b: java.lang.String e>;
        if $r2 == null goto label0;

        $r4 = $r0.<org.e.b: java.lang.String g>;
        $r3 = $r0.<org.e.b: java.lang.String e>;
        interfaceinvoke $r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($r4, "encodingStyle", $r3);

     label0:
        $r5 = $r0.<org.e.b: java.lang.Object b>;
        $r6 = (org.f.b.b) $r5;
        virtualinvoke $r6.<org.f.b.b: void a(org.xmlpull.v1.XmlSerializer)>($r1);
        return;
    }
}
