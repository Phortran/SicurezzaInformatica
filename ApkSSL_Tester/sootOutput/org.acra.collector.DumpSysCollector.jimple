final class org.acra.collector.DumpSysCollector extends java.lang.Object
{

    void <init>()
    {
        org.acra.collector.DumpSysCollector $r0;

        $r0 := @this: org.acra.collector.DumpSysCollector;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String collectMemInfo()
    {
        java.util.ArrayList $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0;
        java.lang.Runtime $r3;
        java.lang.String[] $r4;
        java.lang.Object[] $r5;
        java.lang.Process $r6;
        java.io.BufferedReader $r7;
        java.io.InputStreamReader $r8;
        java.io.InputStream $r9;
        java.io.IOException $r10;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r0 = new java.util.ArrayList;

     label0:
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("dumpsys");
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("meminfo");
        $i0 = staticinvoke <android.os.Process: int myPid()>();
        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);
        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        $r4 = newarray (java.lang.String)[$i0];
        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);
        $r4 = (java.lang.String[]) $r5;
        $r6 = virtualinvoke $r3.<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>($r4);
        $r7 = new java.io.BufferedReader;
        $r8 = new java.io.InputStreamReader;
        $r9 = virtualinvoke $r6.<java.lang.Process: java.io.InputStream getInputStream()>();
        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);
        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r8, 8192);

     label1:
        $r2 = virtualinvoke $r7.<java.io.BufferedReader: java.lang.String readLine()>();

     label2:
        if $r2 != null goto label4;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label5:
        goto label1;

     label6:
        $r10 := @caughtexception;
        $r2 = <org.acra.ACRA: java.lang.String LOG_TAG>;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "DumpSysCollector.meminfo could not retrieve data", $r10);
        goto label3;

        catch java.io.IOException from label0 to label2 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
}
