public final class android.support.v4.util.CircularIntArray extends java.lang.Object
{
    private int mCapacityBitmask;
    private int[] mElements;
    private int mHead;
    private int mTail;

    public void <init>()
    {
        android.support.v4.util.CircularIntArray $r0;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        specialinvoke $r0.<android.support.v4.util.CircularIntArray: void <init>(int)>(8);
        return;
    }

    public void <init>(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1, $i3;
        java.lang.IllegalArgumentException $r1;
        int[] $r3;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 := @parameter0: int;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        if $i0 > 0 goto label0;

        $r1 = new java.lang.IllegalArgumentException;
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("capacity must be positive");
        throw $r1;

     label0:
        $i1 = $i0;
        $i3 = staticinvoke <java.lang.Integer: int bitCount(int)>($i0);
        if $i3 == 1 goto label1;

        $i3 = staticinvoke <java.lang.Integer: int highestOneBit(int)>($i0);
        $i3 = $i3 + 1;
        $i1 = 1 << $i3;

     label1:
        $i3 = $i1 + -1;
        $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask> = $i3;
        $r3 = newarray (int)[$i1];
        $r0.<android.support.v4.util.CircularIntArray: int[] mElements> = $r3;
        return;
    }

    private void doubleCapacity()
    {
        android.support.v4.util.CircularIntArray $r0;
        int[] $r1, $r4;
        int $i0, $i1, $i2, $i4;
        java.lang.RuntimeException $r3;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $r1 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i0 = lengthof $r1;
        $i2 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i2 = $i0 - $i2;
        $i1 = $i0 << 1;
        if $i1 >= 0 goto label0;

        $r3 = new java.lang.RuntimeException;
        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Max array capacity exceeded");
        throw $r3;

     label0:
        $r1 = newarray (int)[$i1];
        $r4 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i4 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i4, $r1, 0, $i2);
        $r4 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i4 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r1, $i2, $i4);
        $r0.<android.support.v4.util.CircularIntArray: int[] mElements> = $r1;
        $r0.<android.support.v4.util.CircularIntArray: int mHead> = 0;
        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i0;
        $i4 = $i1 + -1;
        $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask> = $i4;
        return;
    }

    public void addFirst(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1, $i2;
        int[] $r1;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 := @parameter0: int;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i2 = $i1 + -1;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;
        $i2 = $i2 & $i1;
        $r0.<android.support.v4.util.CircularIntArray: int mHead> = $i2;
        $r1 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i2 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $r1[$i2] = $i0;
        $i2 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        if $i2 != $i1 goto label0;

        specialinvoke $r0.<android.support.v4.util.CircularIntArray: void doubleCapacity()>();

     label0:
        return;
    }

    public void addLast(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;
        int[] $r1;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        $r1[$i1] = $i0;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        $i1 = $i1 + 1;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;
        $i1 = $i1 & $i0;
        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i1;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        if $i1 != $i0 goto label0;

        specialinvoke $r0.<android.support.v4.util.CircularIntArray: void doubleCapacity()>();

     label0:
        return;
    }

    public void clear()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i0;
        return;
    }

    public int get(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 := @parameter0: int;
        if $i0 < 0 goto label0;

        $i1 = virtualinvoke $r0.<android.support.v4.util.CircularIntArray: int size()>();
        if $i0 < $i1 goto label1;

     label0:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r1;

     label1:
        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i0 = $i1 + $i0;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;
        $i1 = $i0 & $i1;
        $i1 = $r2[$i1];
        return $i1;
    }

    public int getFirst()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        if $i0 != $i1 goto label0;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r1;

     label0:
        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i1 = $r2[$i1];
        return $i1;
    }

    public int getLast()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        if $i0 != $i1 goto label0;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r1;

     label0:
        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        $i0 = $i1 + -1;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;
        $i1 = $i0 & $i1;
        $i1 = $r2[$i1];
        return $i1;
    }

    public boolean isEmpty()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        if $i0 != $i1 goto label0;

        return 1;

     label0:
        return 0;
    }

    public int popFirst()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1, $i2;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        if $i0 != $i1 goto label0;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r1;

     label0:
        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i0 = $r2[$i1];
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i1 = $i1 + 1;
        $i2 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;
        $i2 = $i1 & $i2;
        $r0.<android.support.v4.util.CircularIntArray: int mHead> = $i2;
        return $i0;
    }

    public int popLast()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        if $i1 != $i0 goto label0;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r1;

     label0:
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        $i1 = $i1 + -1;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;
        $i1 = $i1 & $i0;
        $r2 = $r0.<android.support.v4.util.CircularIntArray: int[] mElements>;
        $i0 = $r2[$i1];
        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i1;
        return $i0;
    }

    public void removeFromEnd(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 := @parameter0: int;
        if $i0 > 0 goto label1;

     label0:
        return;

     label1:
        $i1 = virtualinvoke $r0.<android.support.v4.util.CircularIntArray: int size()>();
        if $i0 <= $i1 goto label2;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r1;

     label2:
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        $i0 = $i1 - $i0;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;
        $i1 = $i0 & $i1;
        $r0.<android.support.v4.util.CircularIntArray: int mTail> = $i1;
        goto label0;
    }

    public void removeFromStart(int)
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;
        java.lang.ArrayIndexOutOfBoundsException $r1;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 := @parameter0: int;
        if $i0 > 0 goto label1;

     label0:
        return;

     label1:
        $i1 = virtualinvoke $r0.<android.support.v4.util.CircularIntArray: int size()>();
        if $i0 <= $i1 goto label2;

        $r1 = new java.lang.ArrayIndexOutOfBoundsException;
        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();
        throw $r1;

     label2:
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i0 = $i1 + $i0;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;
        $i1 = $i0 & $i1;
        $r0.<android.support.v4.util.CircularIntArray: int mHead> = $i1;
        goto label0;
    }

    public int size()
    {
        android.support.v4.util.CircularIntArray $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v4.util.CircularIntArray;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mTail>;
        $i1 = $r0.<android.support.v4.util.CircularIntArray: int mHead>;
        $i1 = $i0 - $i1;
        $i0 = $r0.<android.support.v4.util.CircularIntArray: int mCapacityBitmask>;
        $i1 = $i1 & $i0;
        return $i1;
    }
}
