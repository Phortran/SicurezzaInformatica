final class com.facebook.a.i extends java.lang.Object
{

    protected static java.lang.String a(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.lang.StringBuilder $r2, $r10;
        android.app.ActivityManager$MemoryInfo $r3;
        android.os.Debug$MemoryInfo $r4;
        float $f0, $f2, $f3;
        int $i0, $i1, $i7, $i8, $i9;
        java.lang.Object $r5;
        android.app.ActivityManager $r6;
        java.util.Locale $r7;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;
        long $l10, $l11;
        boolean $z0;
        java.lang.Long $r11;
        java.lang.Runtime $r12;

        $r0 := @parameter0: android.content.Context;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");
        $r6 = (android.app.ActivityManager) $r5;
        $r3 = new android.app.ActivityManager$MemoryInfo;
        specialinvoke $r3.<android.app.ActivityManager$MemoryInfo: void <init>()>();
        virtualinvoke $r6.<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>($r3);
        $r4 = new android.os.Debug$MemoryInfo;
        specialinvoke $r4.<android.os.Debug$MemoryInfo: void <init>()>();
        staticinvoke <android.os.Debug: void getMemoryInfo(android.os.Debug$MemoryInfo)>($r4);
        $i7 = virtualinvoke $r6.<android.app.ActivityManager: int getMemoryClass()>();
        $i0 = $r4.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;
        $i1 = $r4.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;
        $i1 = $i0 + $i1;
        $f2 = (float) $i1;
        $f3 = (float) $i7;
        $f3 = $f3 * 1024.0F;
        $f3 = $f2 / $f3;
        $f3 = 100.0F * $f3;
        $i0 = (int) $f3;
        $i1 = $r4.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;
        $i1 = $i1 * 100;
        $f3 = (float) $i1;
        $f2 = (float) $i7;
        $f2 = $f2 * 1024.0F;
        $f3 = $f3 / $f2;
        $i8 = (int) $f3;
        $i9 = $r4.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;
        $i1 = $r4.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;
        $i9 = $i9 + $i1;
        $i1 = $r4.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;
        $i9 = $i9 + $i1;
        $i9 = $i9 * 100;
        $f3 = (float) $i9;
        $f2 = (float) $i7;
        $f2 = $f2 * 1024.0F;
        $f3 = $f3 / $f2;
        $i9 = (int) $f3;
        $i1 = $r4.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;
        $i1 = $i1 * 100;
        $f3 = (float) $i1;
        $f0 = (float) $i7;
        $f2 = $f0 * 1024.0F;
        $f3 = $f3 / $f2;
        $i1 = (int) $f3;
        $r7 = <java.util.Locale: java.util.Locale US>;
        $r8 = newarray (java.lang.Object)[4];
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
        $r8[0] = $r9;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);
        $r8[1] = $r9;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[2] = $r9;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
        $r8[3] = $r9;
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "percent dalvik+native / native / d+n+other / other %d / %d / %d / %d", $r8);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("avail/thresh/low? ");
        $l10 = $r3.<android.app.ActivityManager$MemoryInfo: long availMem>;
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $l10 = $r3.<android.app.ActivityManager$MemoryInfo: long threshold>;
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");
        $z0 = $r3.<android.app.ActivityManager$MemoryInfo: boolean lowMemory>;
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/(");
        $l11 = $r3.<android.app.ActivityManager$MemoryInfo: long threshold>;
        $l11 = 100L * $l11;
        $f3 = (float) $l11;
        $l11 = $r3.<android.app.ActivityManager$MemoryInfo: long availMem>;
        $f2 = (float) $l11;
        $f3 = $f3 / $f2;
        $i9 = (int) $f3;
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%) memclass=");
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);
        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DebugMemInfo(kB): Private / Proportional / Shared");
        $r7 = <java.util.Locale: java.util.Locale US>;
        $r8 = newarray (java.lang.Object)[3];
        $i9 = $r4.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[0] = $r9;
        $i9 = $r4.<android.os.Debug$MemoryInfo: int dalvikPss>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[1] = $r9;
        $i9 = $r4.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[2] = $r9;
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "          dalvik: %7d / %7d / %7d", $r8);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r7 = <java.util.Locale: java.util.Locale US>;
        $r8 = newarray (java.lang.Object)[3];
        $i9 = $r4.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[0] = $r9;
        $i9 = $r4.<android.os.Debug$MemoryInfo: int nativePss>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[1] = $r9;
        $i9 = $r4.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[2] = $r9;
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "          native: %7d / %7d / %7d", $r8);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r7 = <java.util.Locale: java.util.Locale US>;
        $r8 = newarray (java.lang.Object)[3];
        $i9 = $r4.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[0] = $r9;
        $i9 = $r4.<android.os.Debug$MemoryInfo: int otherPss>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[1] = $r9;
        $i9 = $r4.<android.os.Debug$MemoryInfo: int otherSharedDirty>;
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[2] = $r9;
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "           other: %7d / %7d / %7d", $r8);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r7 = <java.util.Locale: java.util.Locale US>;
        $r8 = newarray (java.lang.Object)[3];
        $i9 = staticinvoke <android.os.Debug: int getGlobalGcInvocationCount()>();
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[0] = $r9;
        $i9 = staticinvoke <android.os.Debug: int getGlobalFreedSize()>();
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[1] = $r9;
        $i9 = staticinvoke <android.os.Debug: int getGlobalFreedCount()>();
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[2] = $r9;
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "GC: %d GCs, %d freed, %d free count", $r8);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r7 = <java.util.Locale: java.util.Locale US>;
        $r8 = newarray (java.lang.Object)[3];
        $l11 = staticinvoke <android.os.Debug: long getNativeHeapSize()>();
        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
        $r8[0] = $r11;
        $l11 = staticinvoke <android.os.Debug: long getNativeHeapAllocatedSize()>();
        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
        $r8[1] = $r11;
        $l11 = staticinvoke <android.os.Debug: long getNativeHeapFreeSize()>();
        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
        $r8[2] = $r11;
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "Native Heap: size/allocated/free %7d / %7d / %7d", $r8);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r7 = <java.util.Locale: java.util.Locale US>;
        $r8 = newarray (java.lang.Object)[4];
        $i9 = staticinvoke <android.os.Debug: int getThreadAllocCount()>();
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[0] = $r9;
        $i9 = staticinvoke <android.os.Debug: int getThreadAllocSize()>();
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[1] = $r9;
        $i9 = staticinvoke <android.os.Debug: int getThreadExternalAllocCount()>();
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[2] = $r9;
        $i9 = staticinvoke <android.os.Debug: int getThreadExternalAllocSize()>();
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);
        $r8[3] = $r9;
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "Threads: alloc count/alloc size/ext ac/ext as %7d / %7d / %7d / %7d", $r8);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r12 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
        $r7 = <java.util.Locale: java.util.Locale US>;
        $r8 = newarray (java.lang.Object)[3];
        $l11 = virtualinvoke $r12.<java.lang.Runtime: long maxMemory()>();
        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
        $r8[0] = $r11;
        $l11 = virtualinvoke $r12.<java.lang.Runtime: long totalMemory()>();
        $l10 = virtualinvoke $r12.<java.lang.Runtime: long freeMemory()>();
        $l11 = $l11 - $l10;
        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
        $r8[1] = $r11;
        $l11 = virtualinvoke $r12.<java.lang.Runtime: long freeMemory()>();
        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
        $r8[2] = $r11;
        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "Java Heap: size/allocated/free %7d / %7d / %7d", $r8);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r1;
    }

    protected static java.lang.String b(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r2;
        java.lang.Object $r3;
        android.app.ActivityManager $r5;

        $r0 := @parameter0: android.content.Context;
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 11 goto label0;

        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");
        $r5 = (android.app.ActivityManager) $r3;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Large heap size =");
        $i0 = virtualinvoke $r5.<android.app.ActivityManager: int getLargeMemoryClass()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;

     label0:
        return "";
    }
}
