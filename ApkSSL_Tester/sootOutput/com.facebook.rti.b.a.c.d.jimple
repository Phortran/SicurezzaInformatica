public abstract class com.facebook.rti.b.a.c.d extends com.facebook.rti.b.a.c.f implements java.util.concurrent.Future
{

    protected void <init>()
    {
        com.facebook.rti.b.a.c.d $r0;

        $r0 := @this: com.facebook.rti.b.a.c.d;
        specialinvoke $r0.<com.facebook.rti.b.a.c.f: void <init>()>();
        return;
    }

    protected abstract java.util.concurrent.Future a();

    protected java.lang.Object b()
    {
        com.facebook.rti.b.a.c.d $r0;
        java.util.concurrent.Future $r1;

        $r0 := @this: com.facebook.rti.b.a.c.d;
        $r1 = virtualinvoke $r0.<com.facebook.rti.b.a.c.d: java.util.concurrent.Future a()>();
        return $r1;
    }

    public boolean cancel(boolean)
    {
        com.facebook.rti.b.a.c.d $r0;
        boolean $z0;
        java.util.concurrent.Future $r1;

        $r0 := @this: com.facebook.rti.b.a.c.d;
        $z0 := @parameter0: boolean;
        $r1 = virtualinvoke $r0.<com.facebook.rti.b.a.c.d: java.util.concurrent.Future a()>();
        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean cancel(boolean)>($z0);
        return $z0;
    }

    public java.lang.Object get()
    {
        com.facebook.rti.b.a.c.d $r0;
        java.util.concurrent.Future $r1;
        java.lang.Object $r2;

        $r0 := @this: com.facebook.rti.b.a.c.d;
        $r1 = virtualinvoke $r0.<com.facebook.rti.b.a.c.d: java.util.concurrent.Future a()>();
        $r2 = interfaceinvoke $r1.<java.util.concurrent.Future: java.lang.Object get()>();
        return $r2;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit)
    {
        com.facebook.rti.b.a.c.d $r0;
        long $l0;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.Future $r2;
        java.lang.Object $r3;

        $r0 := @this: com.facebook.rti.b.a.c.d;
        $l0 := @parameter0: long;
        $r1 := @parameter1: java.util.concurrent.TimeUnit;
        $r2 = virtualinvoke $r0.<com.facebook.rti.b.a.c.d: java.util.concurrent.Future a()>();
        $r3 = interfaceinvoke $r2.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>($l0, $r1);
        return $r3;
    }

    public boolean isCancelled()
    {
        com.facebook.rti.b.a.c.d $r0;
        java.util.concurrent.Future $r1;
        boolean $z0;

        $r0 := @this: com.facebook.rti.b.a.c.d;
        $r1 = virtualinvoke $r0.<com.facebook.rti.b.a.c.d: java.util.concurrent.Future a()>();
        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean isCancelled()>();
        return $z0;
    }

    public boolean isDone()
    {
        com.facebook.rti.b.a.c.d $r0;
        java.util.concurrent.Future $r1;
        boolean $z0;

        $r0 := @this: com.facebook.rti.b.a.c.d;
        $r1 = virtualinvoke $r0.<com.facebook.rti.b.a.c.d: java.util.concurrent.Future a()>();
        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean isDone()>();
        return $z0;
    }
}
