public class org.c.ak extends java.lang.Object
{
    public static java.util.regex.Pattern a;
    public static java.util.regex.Pattern b;
    public static java.util.regex.Pattern c;
    private static java.lang.String d;
    private static final java.util.regex.Pattern e;

    static void <clinit>()
    {
        java.util.regex.Pattern $r1;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\p{Print}");
        <org.c.ak: java.util.regex.Pattern e> = $r1;
        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([x|X][\\p{XDigit}]+)(;?)");
        <org.c.ak: java.util.regex.Pattern a> = $r1;
        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^0*([x|X][\\p{XDigit}]+)(;?)");
        <org.c.ak: java.util.regex.Pattern b> = $r1;
        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([\\p{Digit}]+)(;?)");
        <org.c.ak: java.util.regex.Pattern c> = $r1;
        return;
    }

    private static int a(java.lang.String, int, boolean, java.lang.StringBuilder)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.CharSequence $r2;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $z0 := @parameter2: boolean;
        $r1 := @parameter3: java.lang.StringBuilder;
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();
        $i2 = $i0 + 15;
        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.CharSequence subSequence(int,int)>($i0, $i2);
        if $z0 == 0 goto label3;

        $r3 = <org.c.ak: java.util.regex.Pattern b>;
        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

     label0:
        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();
        if $z0 != 0 goto label1;

        $r3 = <org.c.ak: java.util.regex.Pattern c>;
        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);
        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();
        if $z0 == 0 goto label2;

     label1:
        $i2 = virtualinvoke $r4.<java.util.regex.Matcher: int end()>();
        $i2 = $i2 + -1;
        $i0 = $i0 + $i2;
        $r0 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label2:
        return $i0;

     label3:
        $r3 = <org.c.ak: java.util.regex.Pattern a>;
        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);
        goto label0;
    }

    private static int a(java.lang.String, boolean, boolean, boolean, java.lang.StringBuilder, int)
    {
        java.lang.String $r0, $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r1, $r2, $r10;
        int $i0, $i2;
        char $c4;
        org.c.ac $r4;
        org.c.ae $r5;
        java.lang.NumberFormatException $r6;
        java.util.regex.Pattern $r7;
        char[] $r8;
        java.util.regex.Matcher $r9;

        $r0 := @parameter0: java.lang.String;
        $z0 := @parameter1: boolean;
        $z1 := @parameter2: boolean;
        $z2 := @parameter3: boolean;
        $r1 := @parameter4: java.lang.StringBuilder;
        $i0 := @parameter5: int;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $i0 = staticinvoke <org.c.ak: int a(java.lang.String,int,boolean,java.lang.StringBuilder)>($r0, $i0, 1, $r2);
        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();
        if $i2 <= 0 goto label16;

     label0:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, 1);
        $z4 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("x");
        if $z4 == 0 goto label2;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>(1);
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16);
        $c4 = (char) $i2;

     label1:
        $r4 = <org.c.ac: org.c.ac a>;
        $r5 = virtualinvoke $r4.<org.c.ac: org.c.ae a(int)>($c4);
        if $c4 != 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");
        return $i0;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);
        $c4 = (char) $i2;
        goto label1;

     label3:
        if $r5 == null goto label12;

        $z3 = virtualinvoke $r5.<org.c.ae: boolean e()>();
        if $z3 == 0 goto label4;

        if $z1 != 0 goto label12;

     label4:
        if $z0 == 0 goto label8;

        $r3 = virtualinvoke $r5.<org.c.ae: java.lang.String c()>();

     label5:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label6:
        return $i0;

     label7:
        $r6 := @caughtexception;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;#");
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r2);
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");
        return $i0;

     label8:
        if $z2 == 0 goto label11;

        if $z4 == 0 goto label10;

     label9:
        $r3 = virtualinvoke $r5.<org.c.ae: java.lang.String g()>();
        goto label5;

     label10:
        $r3 = virtualinvoke $r5.<org.c.ae: java.lang.String f()>();
        goto label5;

     label11:
        $r3 = virtualinvoke $r5.<org.c.ae: java.lang.String d()>();
        goto label5;

     label12:
        if $z1 == 0 goto label13;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c4);
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        return $i0;

     label13:
        $r7 = <org.c.ak: java.util.regex.Pattern e>;
        $r3 = new java.lang.String;
        $r8 = newarray (char)[1];
        $r8[0] = $c4;
        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r8);
        $r9 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r3);
        $z4 = virtualinvoke $r9.<java.util.regex.Matcher: boolean find()>();
        if $z4 == 0 goto label14;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c4);
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        return $i0;

     label14:
        $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");
        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r2);
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

     label15:
        return $i0;

     label16:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");
        return $i0;

        catch java.lang.NumberFormatException from label0 to label6 with label7;
        catch java.lang.NumberFormatException from label9 to label15 with label7;
    }

    private static java.lang.String a()
    {
        java.lang.String $r0;
        org.c.ae $r1;
        org.c.ac $r2;

        $r0 = <org.c.ak: java.lang.String d>;
        if $r0 != null goto label0;

        $r2 = <org.c.ac: org.c.ac a>;
        $r1 = virtualinvoke $r2.<org.c.ac: org.c.ae a(int)>(38);
        $r0 = virtualinvoke $r1.<org.c.ae: java.lang.String f()>();
        <org.c.ak: java.lang.String d> = $r0;

     label0:
        $r0 = <org.c.ak: java.lang.String d>;
        return $r0;
    }

    public static java.lang.String a(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean)
    {
        java.lang.String $r0, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z8;
        char $c0;
        int $i1, $i3, $i4;
        java.lang.StringBuilder $r1;
        org.c.ac $r3;
        org.c.ae $r4;

        $r0 := @parameter0: java.lang.String;
        $z0 := @parameter1: boolean;
        $z1 := @parameter2: boolean;
        $z2 := @parameter3: boolean;
        $z3 := @parameter4: boolean;
        $z4 := @parameter5: boolean;
        $z5 := @parameter6: boolean;
        if $r0 == null goto label21;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i3);
        $i1 = 0;

     label0:
        if $i1 >= $i3 goto label20;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);
        if $c0 != 38 goto label16;

        if $z0 != 0 goto label1;

        if $z1 == 0 goto label3;

     label1:
        $i4 = $i3 + -1;
        if $i1 >= $i4 goto label3;

        $i4 = $i1 + 1;
        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);
        if $c0 != 35 goto label3;

        $i1 = $i1 + 2;
        $i4 = staticinvoke <org.c.ak: int a(java.lang.String,boolean,boolean,boolean,java.lang.StringBuilder,int)>($r0, $z3, $z1, $z5, $r1, $i1);

     label2:
        $i1 = $i4 + 1;
        goto label0;

     label3:
        if $z2 != 0 goto label4;

        if $z0 == 0 goto label13;

     label4:
        $r3 = <org.c.ac: org.c.ac a>;
        $i4 = $i3 - $i1;
        $i4 = staticinvoke <java.lang.Math: int min(int,int)>(10, $i4);
        $i4 = $i4 + $i1;
        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i4);
        $r4 = virtualinvoke $r3.<org.c.ac: org.c.ae a(java.lang.String)>($r2);
        if $r4 == null goto label13;

        if $z2 == 0 goto label7;

        $z8 = virtualinvoke $r4.<org.c.ae: boolean e()>();
        if $z8 == 0 goto label7;

        if $z1 == 0 goto label6;

        $i4 = virtualinvoke $r4.<org.c.ae: int b()>();
        $c0 = (char) $i4;
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

     label5:
        $r2 = virtualinvoke $r4.<org.c.ae: java.lang.String a()>();
        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();
        $i4 = $i4 + 1;
        $i4 = $i4 + $i1;
        goto label2;

     label6:
        $r2 = virtualinvoke $r4.<org.c.ae: java.lang.String f()>();
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        goto label5;

     label7:
        if $z0 == 0 goto label10;

        if $z4 == 0 goto label9;

        $r2 = virtualinvoke $r4.<org.c.ae: java.lang.String f()>();

     label8:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r2 = virtualinvoke $r4.<org.c.ae: java.lang.String a()>();
        $i4 = virtualinvoke $r2.<java.lang.String: int length()>();
        $i4 = $i4 + 1;
        $i4 = $i4 + $i1;
        goto label2;

     label9:
        $r2 = virtualinvoke $r4.<org.c.ae: java.lang.String a(boolean)>($z3);
        goto label8;

     label10:
        if $z4 == 0 goto label12;

        $r2 = staticinvoke <org.c.ak: java.lang.String a()>();

     label11:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $i4 = $i1;
        goto label2;

     label12:
        $r2 = "&amp;";
        goto label11;

     label13:
        if $z4 == 0 goto label15;

        $r2 = staticinvoke <org.c.ak: java.lang.String a()>();

     label14:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $i4 = $i1;
        goto label2;

     label15:
        $r2 = "&amp;";
        goto label14;

     label16:
        $r3 = <org.c.ac: org.c.ac a>;
        $r4 = virtualinvoke $r3.<org.c.ac: org.c.ae a(int)>($c0);
        if $r4 == null goto label19;

        if $z4 == 0 goto label18;

        $r2 = virtualinvoke $r4.<org.c.ae: java.lang.String f()>();

     label17:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $i4 = $i1;
        goto label2;

     label18:
        $r2 = virtualinvoke $r4.<org.c.ae: java.lang.String a(boolean)>($z3);
        goto label17;

     label19:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);
        $i4 = $i1;
        goto label2;

     label20:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r2;

     label21:
        return null;
    }

    public static boolean a(char)
    {
        char $c0;

        $c0 := @parameter0: char;
        if 58 == $c0 goto label0;

        if 46 == $c0 goto label0;

        if 45 == $c0 goto label0;

        if 95 != $c0 goto label1;

     label0:
        return 1;

     label1:
        return 0;
    }

    public static boolean a(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        int $i2;

        $r0 := @parameter0: java.lang.Object;
        if $r0 != null goto label1;

     label0:
        return 1;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();
        $r1 = staticinvoke <org.c.ak: java.lang.String a(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean)>($r1, 1, 0, 0, 0, 0, 0);
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(160, 32);
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();
        if $i2 == 0 goto label0;

        return 0;
    }
}
