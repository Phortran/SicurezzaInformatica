public abstract class com.b.a.a.k.b.l extends com.b.a.a.k.b.k
{
    int a;
    int b;

    public void <init>()
    {
        com.b.a.a.k.b.l $r0;

        $r0 := @this: com.b.a.a.k.b.l;
        specialinvoke $r0.<com.b.a.a.k.b.k: void <init>()>();
        $r0.<com.b.a.a.k.b.l: int a> = 0;
        $r0.<com.b.a.a.k.b.l: int b> = 0;
        return;
    }

    public final int a(int)
    {
        com.b.a.a.k.b.l $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @this: com.b.a.a.k.b.l;
        $i0 := @parameter0: int;
        $i1 = 0;

     label0:
        virtualinvoke $r0.<com.b.a.a.k.b.l: void a()>();
        $i2 = $r0.<com.b.a.a.k.b.l: int b>;
        $i3 = $i2 >>> 1;
        $r0.<com.b.a.a.k.b.l: int b> = $i3;
        $i3 = $r0.<com.b.a.a.k.b.l: int a>;
        $i2 = $r0.<com.b.a.a.k.b.l: int b>;
        $i3 = $i3 - $i2;
        $i4 = $i3 >>> 31;
        $i5 = $r0.<com.b.a.a.k.b.l: int a>;
        $i2 = $r0.<com.b.a.a.k.b.l: int b>;
        $i3 = $i4 + -1;
        $i3 = $i2 & $i3;
        $i5 = $i5 - $i3;
        $r0.<com.b.a.a.k.b.l: int a> = $i5;
        $i5 = $i1 << 1;
        $i4 = 1 - $i4;
        $i1 = $i5 | $i4;
        $i0 = $i0 + -1;
        if $i0 != 0 goto label0;

        return $i1;
    }

    public final int a(short[], int)
    {
        com.b.a.a.k.b.l $r0;
        short[] $r1;
        int $i0, $i2, $i3, $i4;
        short $s1, $s5;

        $r0 := @this: com.b.a.a.k.b.l;
        $r1 := @parameter0: short[];
        $i0 := @parameter1: int;
        virtualinvoke $r0.<com.b.a.a.k.b.l: void a()>();
        $s1 = $r1[$i0];
        $i2 = $r0.<com.b.a.a.k.b.l: int b>;
        $i2 = $i2 >>> 11;
        $i4 = $i2 * $s1;
        $i2 = $r0.<com.b.a.a.k.b.l: int a>;
        $i2 = $i2 ^ -2147483648;
        $i3 = -2147483648 ^ $i4;
        if $i2 >= $i3 goto label0;

        $r0.<com.b.a.a.k.b.l: int b> = $i4;
        $i4 = 2048 - $s1;
        $i4 = $i4 >>> 5;
        $i4 = $s1 + $i4;
        $s1 = (short) $i4;
        $r1[$i0] = $s1;
        return 0;

     label0:
        $i3 = $r0.<com.b.a.a.k.b.l: int b>;
        $i3 = $i3 - $i4;
        $r0.<com.b.a.a.k.b.l: int b> = $i3;
        $i3 = $r0.<com.b.a.a.k.b.l: int a>;
        $i4 = $i3 - $i4;
        $r0.<com.b.a.a.k.b.l: int a> = $i4;
        $s5 = $s1 >>> 5;
        $i4 = $s1 - $s5;
        $s5 = (short) $i4;
        $r1[$i0] = $s5;
        return 1;
    }

    public abstract void a();

    public final int b(short[])
    {
        com.b.a.a.k.b.l $r0;
        short[] $r1;
        int $i0, $i1;

        $r0 := @this: com.b.a.a.k.b.l;
        $r1 := @parameter0: short[];
        $i0 = 1;

     label0:
        $i1 = $i0 << 1;
        $i0 = virtualinvoke $r0.<com.b.a.a.k.b.l: int a(short[],int)>($r1, $i0);
        $i0 = $i0 | $i1;
        $i1 = lengthof $r1;
        if $i0 < $i1 goto label0;

        $i1 = lengthof $r1;
        $i1 = $i0 - $i1;
        return $i1;
    }

    public final int c(short[])
    {
        com.b.a.a.k.b.l $r0;
        short[] $r1;
        int $i0, $i2, $i3, $i4, $i5;

        $r0 := @this: com.b.a.a.k.b.l;
        $r1 := @parameter0: short[];
        $i0 = 0;
        $i2 = 1;
        $i4 = 0;

     label0:
        $i3 = virtualinvoke $r0.<com.b.a.a.k.b.l: int a(short[],int)>($r1, $i2);
        $i2 = $i2 << 1;
        $i2 = $i2 | $i3;
        $i5 = $i4 + 1;
        $i4 = $i3 << $i4;
        $i0 = $i0 | $i4;
        $i4 = lengthof $r1;
        if $i2 < $i4 goto label1;

        return $i0;

     label1:
        $i4 = $i5;
        goto label0;
    }
}
