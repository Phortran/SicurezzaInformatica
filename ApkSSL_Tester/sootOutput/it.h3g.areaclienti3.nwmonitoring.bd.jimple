public class it.h3g.areaclienti3.nwmonitoring.bd extends java.lang.Object implements java.util.concurrent.Executor
{
    java.util.Queue a;
    java.lang.Runnable b;
    private java.util.concurrent.ExecutorService c;

    public void <init>()
    {
        it.h3g.areaclienti3.nwmonitoring.bd $r0;
        java.util.concurrent.LinkedBlockingQueue $r1;
        java.util.concurrent.ExecutorService $r2;

        $r0 := @this: it.h3g.areaclienti3.nwmonitoring.bd;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.concurrent.LinkedBlockingQueue;
        specialinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();
        $r0.<it.h3g.areaclienti3.nwmonitoring.bd: java.util.Queue a> = $r1;
        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();
        $r0.<it.h3g.areaclienti3.nwmonitoring.bd: java.util.concurrent.ExecutorService c> = $r2;
        return;
    }

    protected void a()
    {
        it.h3g.areaclienti3.nwmonitoring.bd $r0;
        java.util.Queue $r1;
        java.lang.Runnable $r2;
        java.lang.Object $r3;
        java.lang.Thread $r4;
        java.lang.Throwable $r5;

        $r0 := @this: it.h3g.areaclienti3.nwmonitoring.bd;
        entermonitor $r0;

     label0:
        $r1 = $r0.<it.h3g.areaclienti3.nwmonitoring.bd: java.util.Queue a>;
        $r3 = interfaceinvoke $r1.<java.util.Queue: java.lang.Object poll()>();
        $r2 = (java.lang.Runnable) $r3;
        $r0.<it.h3g.areaclienti3.nwmonitoring.bd: java.lang.Runnable b> = $r2;
        if $r2 == null goto label2;

        $r4 = new java.lang.Thread;
        $r2 = $r0.<it.h3g.areaclienti3.nwmonitoring.bd: java.lang.Runnable b>;
        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);
        virtualinvoke $r4.<java.lang.Thread: void start()>();

     label1:
        exitmonitor $r0;
        return;

     label2:
        staticinvoke <it.h3g.areaclienti3.nwmonitoring.bn: void a()>();

     label3:
        goto label1;

     label4:
        $r5 := @caughtexception;
        exitmonitor $r0;
        throw $r5;

        catch java.lang.Throwable from label0 to label1 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void execute(java.lang.Runnable)
    {
        it.h3g.areaclienti3.nwmonitoring.bd $r0;
        java.lang.Runnable $r1;
        java.util.Queue $r2;
        it.h3g.areaclienti3.nwmonitoring.be $r3;
        java.lang.Throwable $r4;

        $r0 := @this: it.h3g.areaclienti3.nwmonitoring.bd;
        $r1 := @parameter0: java.lang.Runnable;
        entermonitor $r0;

     label0:
        $r2 = $r0.<it.h3g.areaclienti3.nwmonitoring.bd: java.util.Queue a>;
        $r3 = new it.h3g.areaclienti3.nwmonitoring.be;
        specialinvoke $r3.<it.h3g.areaclienti3.nwmonitoring.be: void <init>(it.h3g.areaclienti3.nwmonitoring.bd,java.lang.Runnable)>($r0, $r1);
        interfaceinvoke $r2.<java.util.Queue: boolean offer(java.lang.Object)>($r3);
        $r1 = $r0.<it.h3g.areaclienti3.nwmonitoring.bd: java.lang.Runnable b>;
        if $r1 != null goto label1;

        virtualinvoke $r0.<it.h3g.areaclienti3.nwmonitoring.bd: void a()>();

     label1:
        exitmonitor $r0;
        return;

     label2:
        $r4 := @caughtexception;
        exitmonitor $r0;
        throw $r4;

        catch java.lang.Throwable from label0 to label1 with label2;
    }
}
