public abstract class android.support.v4.graphics.drawable.RoundedBitmapDrawable extends android.graphics.drawable.Drawable
{
    private static final int DEFAULT_PAINT_FLAGS;
    private boolean mApplyGravity;
    android.graphics.Bitmap mBitmap;
    private int mBitmapHeight;
    private android.graphics.BitmapShader mBitmapShader;
    private int mBitmapWidth;
    private float mCornerRadius;
    final android.graphics.Rect mDstRect;
    final android.graphics.RectF mDstRectF;
    private int mGravity;
    private android.graphics.Paint mPaint;
    private int mTargetDensity;

    void <init>(android.content.res.Resources, android.graphics.Bitmap)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.content.res.Resources $r1;
        android.graphics.Bitmap $r2;
        android.graphics.Shader$TileMode $r3, $r4;
        android.util.DisplayMetrics $r5;
        android.graphics.Paint $r6;
        android.graphics.Rect $r7;
        android.graphics.RectF $r8;
        int $i2;
        android.graphics.BitmapShader $r9;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 := @parameter0: android.content.res.Resources;
        $r2 := @parameter1: android.graphics.Bitmap;
        specialinvoke $r0.<android.graphics.drawable.Drawable: void <init>()>();
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mTargetDensity> = 160;
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mGravity> = 119;
        $r6 = new android.graphics.Paint;
        specialinvoke $r6.<android.graphics.Paint: void <init>(int)>(6);
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint> = $r6;
        $r7 = new android.graphics.Rect;
        specialinvoke $r7.<android.graphics.Rect: void <init>()>();
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Rect mDstRect> = $r7;
        $r8 = new android.graphics.RectF;
        specialinvoke $r8.<android.graphics.RectF: void <init>()>();
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.RectF mDstRectF> = $r8;
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: boolean mApplyGravity> = 1;
        if $r1 == null goto label0;

        $r5 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $i2 = $r5.<android.util.DisplayMetrics: int densityDpi>;
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mTargetDensity> = $i2;

     label0:
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap> = $r2;
        $r2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap>;
        if $r2 == null goto label2;

        specialinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void computeBitmapSize()>();
        $r9 = new android.graphics.BitmapShader;
        $r2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap>;
        $r3 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;
        $r4 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;
        specialinvoke $r9.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r2, $r3, $r4);
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.BitmapShader mBitmapShader> = $r9;

     label1:
        return;

     label2:
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mBitmapHeight> = -1;
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mBitmapWidth> = -1;
        goto label1;
    }

    private void computeBitmapSize()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.Bitmap $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap>;
        $i0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mTargetDensity>;
        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getScaledWidth(int)>($i0);
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mBitmapWidth> = $i0;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap>;
        $i0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mTargetDensity>;
        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getScaledHeight(int)>($i0);
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mBitmapHeight> = $i0;
        return;
    }

    private static boolean isGreaterThanZero(float)
    {
        float $f0;
        int $i0;

        $f0 := @parameter0: float;
        $i0 = staticinvoke <java.lang.Float: int compare(float,float)>($f0, 0.0F);
        if $i0 <= 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.Canvas $r1;
        android.graphics.Bitmap $r2;
        android.graphics.Paint $r3;
        android.graphics.Shader $r4;
        android.graphics.Rect $r5;
        float $f0, $f1;
        android.graphics.RectF $r6;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 := @parameter0: android.graphics.Canvas;
        $r2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap>;
        if $r2 != null goto label1;

     label0:
        return;

     label1:
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void updateDstRect()>();
        $r3 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        $r4 = virtualinvoke $r3.<android.graphics.Paint: android.graphics.Shader getShader()>();
        if $r4 != null goto label2;

        $r5 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Rect mDstRect>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r2, null, $r5, $r3);
        goto label0;

     label2:
        $r6 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.RectF mDstRectF>;
        $f1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: float mCornerRadius>;
        $f0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: float mCornerRadius>;
        virtualinvoke $r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r6, $f1, $f0, $r3);
        goto label0;
    }

    public int getAlpha()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.Paint $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();
        return $i0;
    }

    public final android.graphics.Bitmap getBitmap()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.Bitmap $r1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap>;
        return $r1;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.Paint $r1;
        android.graphics.ColorFilter $r2;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        $r2 = virtualinvoke $r1.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();
        return $r2;
    }

    public float getCornerRadius()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        float $f0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $f0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: float mCornerRadius>;
        return $f0;
    }

    public int getGravity()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $i0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mGravity>;
        return $i0;
    }

    public int getIntrinsicHeight()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $i0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mBitmapHeight>;
        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $i0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mBitmapWidth>;
        return $i0;
    }

    public int getOpacity()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.Bitmap $r1;
        int $i0;
        boolean $z0;
        android.graphics.Paint $r2;
        float $f0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $i0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mGravity>;
        if $i0 == 119 goto label1;

     label0:
        return -3;

     label1:
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap>;
        if $r1 == null goto label0;

        $z0 = virtualinvoke $r1.<android.graphics.Bitmap: boolean hasAlpha()>();
        if $z0 != 0 goto label0;

        $r2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();
        if $i0 < 255 goto label0;

        $f0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: float mCornerRadius>;
        $z0 = staticinvoke <android.support.v4.graphics.drawable.RoundedBitmapDrawable: boolean isGreaterThanZero(float)>($f0);
        if $z0 != 0 goto label0;

        return -1;
    }

    public final android.graphics.Paint getPaint()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.Paint $r1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        return $r1;
    }

    void gravityCompatApply(int, int, int, android.graphics.Rect, android.graphics.Rect)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        int $i0, $i1, $i2;
        android.graphics.Rect $r1, $r2;
        java.lang.UnsupportedOperationException $r3;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $r1 := @parameter3: android.graphics.Rect;
        $r2 := @parameter4: android.graphics.Rect;
        $r3 = new java.lang.UnsupportedOperationException;
        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r3;
    }

    public boolean hasAntiAlias()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.Paint $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        $z0 = virtualinvoke $r1.<android.graphics.Paint: boolean isAntiAlias()>();
        return $z0;
    }

    public boolean hasMipMap()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }

    public void setAlpha(int)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        int $i0, $i1;
        android.graphics.Paint $r1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        $i1 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();
        if $i0 == $i1 goto label0;

        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>($i0);
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void invalidateSelf()>();

     label0:
        return;
    }

    public void setAntiAlias(boolean)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        boolean $z0;
        android.graphics.Paint $r1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $z0 := @parameter0: boolean;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setAntiAlias(boolean)>($z0);
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void invalidateSelf()>();
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.ColorFilter $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 := @parameter0: android.graphics.ColorFilter;
        $r2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r1);
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void invalidateSelf()>();
        return;
    }

    public void setCornerRadius(float)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        float $f0;
        boolean $z0;
        android.graphics.BitmapShader $r1;
        android.graphics.Paint $r2;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $f0 := @parameter0: float;
        $z0 = staticinvoke <android.support.v4.graphics.drawable.RoundedBitmapDrawable: boolean isGreaterThanZero(float)>($f0);
        if $z0 == 0 goto label1;

        $r2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.BitmapShader mBitmapShader>;
        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r1);

     label0:
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: float mCornerRadius> = $f0;
        return;

     label1:
        $r2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        virtualinvoke $r2.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);
        goto label0;
    }

    public void setDither(boolean)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        boolean $z0;
        android.graphics.Paint $r1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $z0 := @parameter0: boolean;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setDither(boolean)>($z0);
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void invalidateSelf()>();
        return;
    }

    public void setFilterBitmap(boolean)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        boolean $z0;
        android.graphics.Paint $r1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $z0 := @parameter0: boolean;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint mPaint>;
        virtualinvoke $r1.<android.graphics.Paint: void setFilterBitmap(boolean)>($z0);
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void invalidateSelf()>();
        return;
    }

    public void setGravity(int)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        int $i0, $i1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $i0 := @parameter0: int;
        $i1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mGravity>;
        if $i1 == $i0 goto label0;

        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mGravity> = $i0;
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: boolean mApplyGravity> = 1;
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void invalidateSelf()>();

     label0:
        return;
    }

    public void setMipMap(boolean)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $z0 := @parameter0: boolean;
        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();
        throw $r1;
    }

    public void setTargetDensity(int)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        int $i0, $i1;
        android.graphics.Bitmap $r1;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $i0 := @parameter0: int;
        $i1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mTargetDensity>;
        if $i1 == $i0 goto label2;

        if $i0 != 0 goto label0;

        $i0 = 160;

     label0:
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mTargetDensity> = $i0;
        $r1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap mBitmap>;
        if $r1 == null goto label1;

        specialinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void computeBitmapSize()>();

     label1:
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void invalidateSelf()>();

     label2:
        return;
    }

    public void setTargetDensity(android.graphics.Canvas)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.graphics.Canvas $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 := @parameter0: android.graphics.Canvas;
        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int getDensity()>();
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(int)>($i0);
        return;
    }

    public void setTargetDensity(android.util.DisplayMetrics)
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        android.util.DisplayMetrics $r1;
        int $i0;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $r1 := @parameter0: android.util.DisplayMetrics;
        $i0 = $r1.<android.util.DisplayMetrics: int densityDpi>;
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(int)>($i0);
        return;
    }

    void updateDstRect()
    {
        android.support.v4.graphics.drawable.RoundedBitmapDrawable $r0;
        boolean $z0;
        int $i0, $i1, $i2;
        android.graphics.Rect $r1, $r2;
        android.graphics.RectF $r4;

        $r0 := @this: android.support.v4.graphics.drawable.RoundedBitmapDrawable;
        $z0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: boolean mApplyGravity>;
        if $z0 == 0 goto label0;

        $i0 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mGravity>;
        $i1 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mBitmapWidth>;
        $i2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: int mBitmapHeight>;
        $r1 = virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Rect getBounds()>();
        $r2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Rect mDstRect>;
        virtualinvoke $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect)>($i0, $i1, $i2, $r1, $r2);
        $r4 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.RectF mDstRectF>;
        $r2 = $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: android.graphics.Rect mDstRect>;
        virtualinvoke $r4.<android.graphics.RectF: void set(android.graphics.Rect)>($r2);
        $r0.<android.support.v4.graphics.drawable.RoundedBitmapDrawable: boolean mApplyGravity> = 0;

     label0:
        return;
    }
}
