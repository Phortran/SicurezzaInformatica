public class org.c.aj extends java.lang.Object
{
    public static java.lang.String a;
    public static java.lang.String b;
    private java.lang.String c;
    private boolean d;
    private java.util.Map e;
    private java.util.List f;

    static void <clinit>()
    {
        <org.c.aj: java.lang.String a> = "${";
        <org.c.aj: java.lang.String b> = "}";
        return;
    }

    public void <init>()
    {
        org.c.aj $r0;
        java.util.LinkedHashMap $r1;
        java.util.ArrayList $r2;

        $r0 := @this: org.c.aj;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.LinkedHashMap;
        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();
        $r0.<org.c.aj: java.util.Map e> = $r1;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        $r0.<org.c.aj: java.util.List f> = $r2;
        $r0.<org.c.aj: boolean d> = 1;
        return;
    }

    public java.lang.String a(java.lang.String, java.util.Map)
    {
        org.c.aj $r0;
        java.lang.String $r1, $r3, $r6;
        java.util.Map $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuffer $r4;
        java.lang.Object $r5;

        $r0 := @this: org.c.aj;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: java.util.Map;
        if $r1 != null goto label0;

        return $r1;

     label0:
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r3 = <org.c.aj: java.lang.String a>;
        $i1 = -1;
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>($r3);

     label1:
        if $i0 < 0 goto label7;

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();
        if $i0 >= $i2 goto label7;

        $i2 = $i1 + 1;
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2, $i0);
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $r3 = <org.c.aj: java.lang.String b>;
        $i2 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>($r3, $i0);
        if $i2 <= $i0 goto label4;

        $r3 = <org.c.aj: java.lang.String a>;
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();
        $i1 = $i1 + $i0;
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);
        if $r2 == null goto label5;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();
        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);
        $r3 = (java.lang.String) $r5;

     label2:
        if $r3 != null goto label6;

        $r3 = "";

     label3:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label4:
        $r6 = <org.c.aj: java.lang.String a>;
        $r3 = <org.c.aj: java.lang.String b>;
        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();
        $i1 = $i1 + $i2;
        $i0 = $i0 + 1;
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0);
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String,int)>($r6, $i1);
        $i1 = $i2;
        goto label1;

     label5:
        $r3 = "";
        goto label2;

     label6:
        $r3 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();
        goto label3;

     label7:
        $i2 = $i1 + 1;
        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i2);
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r6;
    }

    public java.util.Map a(java.util.Map)
    {
        org.c.aj $r0;
        java.util.Map $r1, $r5;
        boolean $z0, $z1;
        java.util.Iterator $r2, $r4;
        java.util.LinkedHashMap $r3;
        java.util.Set $r6;
        java.lang.Object $r7;
        java.util.Map$Entry $r8;
        java.lang.String $r9, $r10;
        java.util.List $r11;
        org.c.a $r12;

        $r0 := @this: org.c.aj;
        $r1 := @parameter0: java.util.Map;
        $z0 = virtualinvoke $r0.<org.c.aj: boolean c()>();
        $z1 = virtualinvoke $r0.<org.c.aj: boolean a()>();
        if $z1 != 0 goto label0;

        if $z0 != 0 goto label10;

     label0:
        if $z0 == 0 goto label3;

        $r3 = new java.util.LinkedHashMap;
        specialinvoke $r3.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r1);

     label1:
        if $z1 == 0 goto label9;

        $r5 = virtualinvoke $r0.<org.c.aj: java.util.Map d()>();
        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set entrySet()>();
        $r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();
        $r8 = (java.util.Map$Entry) $r7;
        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r9 = (java.lang.String) $r7;
        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r10 = (java.lang.String) $r7;
        if $r10 != null goto label4;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r9);
        goto label2;

     label3:
        $r3 = new java.util.LinkedHashMap;
        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();
        goto label1;

     label4:
        $r10 = virtualinvoke $r0.<org.c.aj: java.lang.String a(java.lang.String,java.util.Map)>($r10, $r1);
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);
        goto label2;

     label5:
        $r11 = $r0.<org.c.aj: java.util.List f>;
        $r2 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label9;

        $r7 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();
        $r12 = (org.c.a) $r7;
        $r6 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();
        $r4 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 == 0 goto label6;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();
        $r8 = (java.util.Map$Entry) $r7;
        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r10 = (java.lang.String) $r7;
        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r9 = (java.lang.String) $r7;
        $z1 = interfaceinvoke $r12.<org.c.a: boolean a(java.lang.String,java.lang.String)>($r10, $r9);
        if $z1 == 0 goto label7;

        $r9 = interfaceinvoke $r12.<org.c.a: java.lang.String a()>();
        if $r9 != null goto label8;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r10);
        goto label7;

     label8:
        $r9 = virtualinvoke $r0.<org.c.aj: java.lang.String a(java.lang.String,java.util.Map)>($r9, $r1);
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);
        goto label7;

     label9:
        $r1 = $r3;

     label10:
        return $r1;
    }

    boolean a()
    {
        org.c.aj $r0;
        java.util.Map $r1;
        java.util.List $r2;

        $r0 := @this: org.c.aj;
        $r1 = $r0.<org.c.aj: java.util.Map e>;
        if $r1 != null goto label0;

        $r2 = $r0.<org.c.aj: java.util.List f>;
        if $r2 == null goto label1;

     label0:
        return 1;

     label1:
        return 0;
    }

    java.lang.String b()
    {
        org.c.aj $r0;
        java.lang.String $r1;

        $r0 := @this: org.c.aj;
        $r1 = $r0.<org.c.aj: java.lang.String c>;
        return $r1;
    }

    boolean c()
    {
        org.c.aj $r0;
        boolean $z0;

        $r0 := @this: org.c.aj;
        $z0 = $r0.<org.c.aj: boolean d>;
        return $z0;
    }

    java.util.Map d()
    {
        org.c.aj $r0;
        java.util.Map $r1;

        $r0 := @this: org.c.aj;
        $r1 = $r0.<org.c.aj: java.util.Map e>;
        return $r1;
    }
}
