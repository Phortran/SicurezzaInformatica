class android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong extends java.lang.Object implements android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm
{
    public static final android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE;

    static void <clinit>()
    {
        android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong $r0;

        $r0 = new android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong;
        specialinvoke $r0.<android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong: void <init>()>();
        <android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong: android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE> = $r0;
        return;
    }

    private void <init>()
    {
        android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong $r0;

        $r0 := @this: android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        return;
    }

    public int checkRtl(java.lang.CharSequence, int, int)
    {
        android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong $r0;
        java.lang.CharSequence $r1;
        int $i0, $i1, $i2, $i3;
        byte $b4;
        char $c5;

        $r0 := @this: android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong;
        $r1 := @parameter0: java.lang.CharSequence;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i3 = 2;
        $i2 = $i0;
        $i1 = $i0 + $i1;

     label0:
        if $i2 >= $i1 goto label1;

        if $i3 != 2 goto label1;

        $c5 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>($i2);
        $b4 = staticinvoke <java.lang.Character: byte getDirectionality(char)>($c5);
        $i3 = staticinvoke <android.support.v4.text.TextDirectionHeuristicsCompat: int access$100(int)>($b4);
        $i2 = $i2 + 1;
        goto label0;

     label1:
        return $i3;
    }
}
