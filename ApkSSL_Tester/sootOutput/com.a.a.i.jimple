final class com.a.a.i extends java.lang.Object
{
    static final java.nio.charset.Charset a;
    static final java.nio.charset.Charset b;

    static void <clinit>()
    {
        java.nio.charset.Charset $r1;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");
        <com.a.a.i: java.nio.charset.Charset a> = $r1;
        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");
        <com.a.a.i: java.nio.charset.Charset b> = $r1;
        return;
    }

    static void a(java.io.Closeable)
    {
        java.io.Closeable $r0;
        java.lang.RuntimeException $r1;
        java.lang.String $r2, $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.io.Closeable;
        if $r0 == null goto label1;

     label0:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label1:
        return;

     label2:
        $r1 := @caughtexception;
        $r2 = <com.a.a.a: java.lang.String a>;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, "diskcache/closeQuietly/failed", $r1);
        throw $r1;

     label3:
        $r4 := @caughtexception;
        $r3 = <com.a.a.a: java.lang.String a>;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "diskcache/closeQuietly/failed", $r4);
        goto label1;

        catch java.lang.RuntimeException from label0 to label1 with label2;
        catch java.lang.Exception from label0 to label1 with label3;
    }

    static void a(java.io.File)
    {
        java.io.File $r0;
        java.io.IOException $r1;
        java.io.File[] $r2;
        java.lang.String $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        int $i0, $i1;

        $r0 := @parameter0: java.io.File;
        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();
        if $r2 != null goto label0;

        $r1 = new java.io.IOException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("not a readable directory: ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);
        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r1;

     label0:
        $i0 = lengthof $r2;
        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r0 = $r2[$i1];
        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();
        if $z0 == 0 goto label2;

        staticinvoke <com.a.a.i: void a(java.io.File)>($r0);

     label2:
        $z0 = virtualinvoke $r0.<java.io.File: boolean delete()>();
        if $z0 != 0 goto label3;

        $r1 = new java.io.IOException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("failed to delete file: ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);
        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r1;

     label3:
        $i1 = $i1 + 1;
        goto label1;

     label4:
        return;
    }
}
