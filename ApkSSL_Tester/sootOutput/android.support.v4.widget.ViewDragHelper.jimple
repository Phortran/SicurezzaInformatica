public class android.support.v4.widget.ViewDragHelper extends java.lang.Object
{
    private static final int BASE_SETTLE_DURATION;
    public static final int DIRECTION_ALL;
    public static final int DIRECTION_HORIZONTAL;
    public static final int DIRECTION_VERTICAL;
    public static final int EDGE_ALL;
    public static final int EDGE_BOTTOM;
    public static final int EDGE_LEFT;
    public static final int EDGE_RIGHT;
    private static final int EDGE_SIZE;
    public static final int EDGE_TOP;
    public static final int INVALID_POINTER;
    private static final int MAX_SETTLE_DURATION;
    public static final int STATE_DRAGGING;
    public static final int STATE_IDLE;
    public static final int STATE_SETTLING;
    private static final java.lang.String TAG;
    private static final android.view.animation.Interpolator sInterpolator;
    private int mActivePointerId;
    private final android.support.v4.widget.ViewDragHelper$Callback mCallback;
    private android.view.View mCapturedView;
    private int mDragState;
    private int[] mEdgeDragsInProgress;
    private int[] mEdgeDragsLocked;
    private int mEdgeSize;
    private int[] mInitialEdgesTouched;
    private float[] mInitialMotionX;
    private float[] mInitialMotionY;
    private float[] mLastMotionX;
    private float[] mLastMotionY;
    private float mMaxVelocity;
    private float mMinVelocity;
    private final android.view.ViewGroup mParentView;
    private int mPointersDown;
    private boolean mReleaseInProgress;
    private android.support.v4.widget.ScrollerCompat mScroller;
    private final java.lang.Runnable mSetIdleRunnable;
    private int mTouchSlop;
    private int mTrackingEdges;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        android.support.v4.widget.ViewDragHelper$1 $r0;

        $r0 = new android.support.v4.widget.ViewDragHelper$1;
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper$1: void <init>()>();
        <android.support.v4.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator> = $r0;
        return;
    }

    private void <init>(android.content.Context, android.view.ViewGroup, android.support.v4.widget.ViewDragHelper$Callback)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.content.Context $r1;
        android.view.ViewGroup $r2;
        android.support.v4.widget.ViewDragHelper$Callback $r3;
        float $f0, $f1;
        android.view.ViewConfiguration $r4;
        android.support.v4.widget.ViewDragHelper$2 $r6;
        java.lang.IllegalArgumentException $r7;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;
        int $i1;
        android.view.animation.Interpolator $r10;
        android.support.v4.widget.ScrollerCompat $r11;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.view.ViewGroup;
        $r3 := @parameter2: android.support.v4.widget.ViewDragHelper$Callback;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = -1;
        $r6 = new android.support.v4.widget.ViewDragHelper$2;
        specialinvoke $r6.<android.support.v4.widget.ViewDragHelper$2: void <init>(android.support.v4.widget.ViewDragHelper)>($r0);
        $r0.<android.support.v4.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable> = $r6;
        if $r2 != null goto label0;

        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parent view may not be null");
        throw $r7;

     label0:
        if $r3 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;
        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Callback may not be null");
        throw $r7;

     label1:
        $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView> = $r2;
        $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback> = $r3;
        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);
        $r8 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();
        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f0 = $r9.<android.util.DisplayMetrics: float density>;
        $f1 = 20.0F * $f0;
        $f1 = $f1 + 0.5F;
        $i1 = (int) $f1;
        $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize> = $i1;
        $i1 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledTouchSlop()>();
        $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop> = $i1;
        $i1 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();
        $f1 = (float) $i1;
        $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity> = $f1;
        $i1 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();
        $f1 = (float) $i1;
        $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity> = $f1;
        $r10 = <android.support.v4.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator>;
        $r11 = staticinvoke <android.support.v4.widget.ScrollerCompat: android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)>($r1, $r10);
        $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller> = $r11;
        return;
    }

    private boolean checkNewEdgeDrag(float, float, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2;
        int[] $r1;
        byte $b3;
        android.support.v4.widget.ViewDragHelper$Callback $r2;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $i0 := @parameter2: int;
        $i1 := @parameter3: int;
        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);
        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $i2 = $r1[$i0];
        $i2 = $i2 & $i1;
        if $i2 != $i1 goto label0;

        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;
        $i2 = $i2 & $i1;
        if $i2 == 0 goto label0;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;
        $i2 = $r1[$i0];
        $i2 = $i2 & $i1;
        if $i2 == $i1 goto label0;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;
        $i2 = $r1[$i0];
        $i2 = $i2 & $i1;
        if $i2 == $i1 goto label0;

        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $f2 = (float) $i2;
        $b3 = $f0 cmpg $f2;
        if $b3 > 0 goto label1;

        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $f2 = (float) $i2;
        $b3 = $f1 cmpg $f2;
        if $b3 > 0 goto label1;

     label0:
        return 0;

     label1:
        $f2 = 0.5F * $f1;
        $b3 = $f0 cmpg $f2;
        if $b3 >= 0 goto label2;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $z0 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)>($i1);
        if $z0 == 0 goto label2;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;
        $i2 = $r1[$i0];
        $i2 = $i2 | $i1;
        $r1[$i0] = $i2;
        return 0;

     label2:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;
        $i2 = $r1[$i0];
        $i2 = $i2 & $i1;
        if $i2 != 0 goto label0;

        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $f2 = (float) $i2;
        $b3 = $f0 cmpl $f2;
        if $b3 <= 0 goto label0;

        return 1;
    }

    private boolean checkTouchSlop(android.view.View, float, float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;
        float $f0, $f1;
        boolean $z0, $z1, $z2;
        android.support.v4.widget.ViewDragHelper$Callback $r2;
        int $i0, $i1;
        byte $b2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.View;
        $f0 := @parameter1: float;
        $f1 := @parameter2: float;
        $z2 = 1;
        if $r1 != null goto label1;

        $z2 = 0;

     label0:
        return $z2;

     label1:
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i0 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>($r1);
        if $i0 <= 0 goto label4;

        $z0 = 1;

     label2:
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i0 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>($r1);
        if $i0 <= 0 goto label5;

        $z1 = 1;

     label3:
        if $z0 == 0 goto label6;

        if $z1 == 0 goto label6;

        $f0 = $f0 * $f0;
        $f1 = $f1 * $f1;
        $f1 = $f0 + $f1;
        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $i1 = $i1 * $i0;
        $f0 = (float) $i1;
        $b2 = $f1 cmpl $f0;
        if $b2 > 0 goto label0;

        return 0;

     label4:
        $z0 = 0;
        goto label2;

     label5:
        $z1 = 0;
        goto label3;

     label6:
        if $z0 == 0 goto label7;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f0);
        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $f0 = (float) $i1;
        $b2 = $f1 cmpl $f0;
        if $b2 > 0 goto label0;

        return 0;

     label7:
        if $z1 == 0 goto label8;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);
        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $f0 = (float) $i1;
        $b2 = $f1 cmpl $f0;
        if $b2 > 0 goto label0;

        return 0;

     label8:
        return 0;
    }

    private float clampMag(float, float, float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1, $f2, $f3;
        byte $b0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $f2 := @parameter2: float;
        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f0);
        $b0 = $f3 cmpg $f1;
        if $b0 >= 0 goto label1;

        $f2 = 0.0F;

     label0:
        return $f2;

     label1:
        $b0 = $f3 cmpl $f2;
        if $b0 <= 0 goto label2;

        $b0 = $f0 cmpl 0.0F;
        if $b0 > 0 goto label0;

        $f2 = neg $f2;
        return $f2;

     label2:
        return $f0;
    }

    private int clampMag(int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i0);
        if $i3 >= $i1 goto label1;

        $i2 = 0;

     label0:
        return $i2;

     label1:
        if $i3 <= $i2 goto label2;

        if $i0 > 0 goto label0;

        $i2 = neg $i2;
        return $i2;

     label2:
        return $i0;
    }

    private void clearMotionHistory()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float[] $r1;
        int[] $r2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        if $r1 != null goto label1;

     label0:
        return;

     label1:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1, 0.0F);
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;
        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1, 0.0F);
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;
        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1, 0.0F);
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;
        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1, 0.0F);
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, 0);
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;
        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, 0);
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;
        staticinvoke <java.util.Arrays: void fill(int[],int)>($r2, 0);
        $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown> = 0;
        goto label0;
    }

    private void clearMotionHistory(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i2;
        float[] $r1;
        int[] $r2;
        float f0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        if $r1 != null goto label1;

     label0:
        return;

     label1:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        f0 = (float) 0;
        $r1[$i0] = f0;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;
        f0 = (float) 0;
        $r1[$i0] = f0;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;
        f0 = (float) 0;
        $r1[$i0] = f0;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;
        f0 = (float) 0;
        $r1[$i0] = f0;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $r2[$i0] = 0;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;
        $r2[$i0] = 0;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;
        $r2[$i0] = 0;
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown>;
        $i0 = 1 << $i0;
        $i0 = $i0 ^ -1;
        $i2 = $i2 & $i0;
        $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown> = $i2;
        goto label0;
    }

    private int computeAxisDuration(int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        float $f0, $f2, $f3;
        android.view.ViewGroup $r1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        if $i0 != 0 goto label0;

        return 0;

     label0:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $i4 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();
        $i3 = $i4 / 2;
        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i0);
        $f2 = (float) $i5;
        $f0 = (float) $i4;
        $f2 = $f2 / $f0;
        $f0 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f2);
        $f2 = (float) $i3;
        $f3 = (float) $i3;
        $f0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: float distanceInfluenceForSnapDuration(float)>($f0);
        $f3 = $f3 * $f0;
        $f0 = $f2 + $f3;
        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i1);
        if $i5 <= 0 goto label2;

        $f2 = (float) $i5;
        $f2 = $f0 / $f2;
        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);
        $f3 = 1000.0F * $f2;
        $i5 = staticinvoke <java.lang.Math: int round(float)>($f3);
        $i2 = $i5 * 4;

     label1:
        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i2, 600);
        return $i5;

     label2:
        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i0);
        $f3 = (float) $i5;
        $f2 = (float) $i2;
        $f0 = $f3 / $f2;
        $f3 = $f0 + 1.0F;
        $f3 = $f3 * 256.0F;
        $i2 = (int) $f3;
        goto label1;
    }

    private int computeSettleDuration(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float $f0, $f1, $f2;
        android.support.v4.widget.ViewDragHelper$Callback $r2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 := @parameter4: int;
        $f1 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;
        $i7 = (int) $f1;
        $f1 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;
        $i6 = (int) $f1;
        $i8 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int clampMag(int,int,int)>($i2, $i7, $i6);
        $f1 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;
        $i7 = (int) $f1;
        $f1 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;
        $i6 = (int) $f1;
        $i9 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int clampMag(int,int,int)>($i3, $i7, $i6);
        $i3 = staticinvoke <java.lang.Math: int abs(int)>($i0);
        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);
        $i4 = staticinvoke <java.lang.Math: int abs(int)>($i8);
        $i5 = staticinvoke <java.lang.Math: int abs(int)>($i9);
        $i7 = $i4 + $i5;
        $i6 = $i3 + $i2;
        if $i8 == 0 goto label2;

        $f1 = (float) $i4;
        $f0 = (float) $i7;
        $f0 = $f1 / $f0;

     label0:
        if $i9 == 0 goto label3;

        $f1 = (float) $i5;
        $f2 = (float) $i7;
        $f1 = $f1 / $f2;

     label1:
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i7 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>($r1);
        $i7 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int computeAxisDuration(int,int,int)>($i0, $i8, $i7);
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i8 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>($r1);
        $i6 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int computeAxisDuration(int,int,int)>($i1, $i9, $i8);
        $f2 = (float) $i7;
        $f2 = $f2 * $f0;
        $f0 = (float) $i6;
        $f1 = $f0 * $f1;
        $f2 = $f2 + $f1;
        $i9 = (int) $f2;
        return $i9;

     label2:
        $f2 = (float) $i3;
        $f1 = (float) $i6;
        $f0 = $f2 / $f1;
        goto label0;

     label3:
        $f2 = (float) $i2;
        $f1 = (float) $i6;
        $f1 = $f2 / $f1;
        goto label1;
    }

    public static android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup, float, android.support.v4.widget.ViewDragHelper$Callback)
    {
        android.view.ViewGroup $r0;
        float $f0, $f1, $f2;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        int $i0;
        android.support.v4.widget.ViewDragHelper $r3;

        $r0 := @parameter0: android.view.ViewGroup;
        $f0 := @parameter1: float;
        $r1 := @parameter2: android.support.v4.widget.ViewDragHelper$Callback;
        $r3 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>($r0, $r1);
        $i0 = $r3.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $f2 = (float) $i0;
        $f1 = 1.0F / $f0;
        $f2 = $f2 * $f1;
        $i0 = (int) $f2;
        $r3.<android.support.v4.widget.ViewDragHelper: int mTouchSlop> = $i0;
        return $r3;
    }

    public static android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup, android.support.v4.widget.ViewDragHelper$Callback)
    {
        android.view.ViewGroup $r0;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        android.support.v4.widget.ViewDragHelper $r2;
        android.content.Context $r3;

        $r0 := @parameter0: android.view.ViewGroup;
        $r1 := @parameter1: android.support.v4.widget.ViewDragHelper$Callback;
        $r2 = new android.support.v4.widget.ViewDragHelper;
        $r3 = virtualinvoke $r0.<android.view.ViewGroup: android.content.Context getContext()>();
        specialinvoke $r2.<android.support.v4.widget.ViewDragHelper: void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>($r3, $r0, $r1);
        return $r2;
    }

    private void dispatchViewReleased(float, float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1;
        android.support.v4.widget.ViewDragHelper$Callback $r1;
        android.view.View $r2;
        int $i0, i1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress> = 1;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper$Callback: void onViewReleased(android.view.View,float,float)>($r2, $f0, $f1);
        $r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress> = 0;
        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        i1 = (int) 1;
        if $i0 != i1 goto label0;

        i1 = (int) 0;
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(i1);

     label0:
        return;
    }

    private float distanceInfluenceForSnapDuration(float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1;
        double $d1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $f0 := @parameter0: float;
        $f1 = $f0 - 0.5F;
        $d1 = (double) $f1;
        $d1 = $d1 * 0.4712389167638204;
        $f1 = (float) $d1;
        $d1 = (double) $f1;
        $d1 = staticinvoke <java.lang.Math: double sin(double)>($d1);
        $f1 = (float) $d1;
        return $f1;
    }

    private void dragTo(int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.View $r1;
        android.support.v4.widget.ViewDragHelper$Callback $r2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $i4 = $i0;
        $i5 = $i1;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i6 = virtualinvoke $r1.<android.view.View: int getLeft()>();
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i7 = virtualinvoke $r1.<android.view.View: int getTop()>();
        if $i2 == 0 goto label0;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i4 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)>($r1, $i0, $i2);
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i0 = $i4 - $i6;
        virtualinvoke $r1.<android.view.View: void offsetLeftAndRight(int)>($i0);

     label0:
        if $i3 == 0 goto label1;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i5 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)>($r1, $i1, $i3);
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i1 = $i5 - $i7;
        virtualinvoke $r1.<android.view.View: void offsetTopAndBottom(int)>($i1);

     label1:
        if $i2 != 0 goto label2;

        if $i3 == 0 goto label3;

     label2:
        $i3 = $i4 - $i6;
        $i2 = $i5 - $i7;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r1, $i4, $i5, $i3, $i2);

     label3:
        return;
    }

    private void ensureMotionHistorySizeForId(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i2;
        int[] $r1, $r2, $r3, $r10, $r11;
        float[] $r4, $r5, $r6, $r7, $r8, $r9;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $r7 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        if $r7 == null goto label0;

        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        $i2 = lengthof $r8;
        if $i2 > $i0 goto label2;

     label0:
        $i2 = $i0 + 1;
        $r4 = newarray (float)[$i2];
        $i2 = $i0 + 1;
        $r5 = newarray (float)[$i2];
        $i2 = $i0 + 1;
        $r6 = newarray (float)[$i2];
        $i2 = $i0 + 1;
        $r7 = newarray (float)[$i2];
        $i2 = $i0 + 1;
        $r3 = newarray (int)[$i2];
        $i2 = $i0 + 1;
        $r1 = newarray (int)[$i2];
        $i2 = $i0 + 1;
        $r2 = newarray (int)[$i2];
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        if $r8 == null goto label1;

        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        $i2 = lengthof $r8;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r4, 0, $i2);
        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;
        $i2 = lengthof $r8;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r5, 0, $i2);
        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;
        $i2 = lengthof $r8;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r6, 0, $i2);
        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;
        $i2 = lengthof $r8;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r7, 0, $i2);
        $r10 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $r11 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $i2 = lengthof $r11;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r3, 0, $i2);
        $r11 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;
        $r10 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;
        $i2 = lengthof $r10;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r1, 0, $i2);
        $r11 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;
        $r10 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;
        $i2 = lengthof $r10;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r2, 0, $i2);

     label1:
        $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX> = $r4;
        $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY> = $r5;
        $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX> = $r6;
        $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY> = $r7;
        $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched> = $r3;
        $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress> = $r1;
        $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked> = $r2;

     label2:
        return;
    }

    private boolean forceSettleCapturedViewAt(int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7;
        android.view.View $r1;
        android.support.v4.widget.ScrollerCompat $r2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i7 = virtualinvoke $r1.<android.view.View: int getLeft()>();
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i5 = virtualinvoke $r1.<android.view.View: int getTop()>();
        $i0 = $i0 - $i7;
        $i1 = $i1 - $i5;
        if $i0 != 0 goto label0;

        if $i1 != 0 goto label0;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);
        return 0;

     label0:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i6 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int computeSettleDuration(android.view.View,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void startScroll(int,int,int,int,int)>($i7, $i5, $i0, $i1, $i6);
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(2);
        return 1;
    }

    private int getEdgesTouched(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i3, $i4;
        byte $b2;
        android.view.ViewGroup $r1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $b2 = 0;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $i4 = virtualinvoke $r1.<android.view.ViewGroup: int getLeft()>();
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;
        $i4 = $i4 + $i3;
        if $i0 >= $i4 goto label0;

        $b2 = 0 | 1;

     label0:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $i4 = virtualinvoke $r1.<android.view.ViewGroup: int getTop()>();
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;
        $i4 = $i4 + $i3;
        if $i1 >= $i4 goto label1;

        $b2 = $b2 | 4;

     label1:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $i4 = virtualinvoke $r1.<android.view.ViewGroup: int getRight()>();
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;
        $i4 = $i4 - $i3;
        if $i0 <= $i4 goto label2;

        $b2 = $b2 | 2;

     label2:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $i4 = virtualinvoke $r1.<android.view.ViewGroup: int getBottom()>();
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;
        $i4 = $i4 - $i3;
        if $i1 <= $i4 goto label3;

        $b2 = $b2 | 8;

     label3:
        return $b2;
    }

    private void releaseViewForPointerUp()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1, $f2, $f3;
        android.view.VelocityTracker $r1;
        int $i1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        $f1 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;
        virtualinvoke $r1.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f1);
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        $f1 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r1, $i1);
        $f0 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;
        $f2 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;
        $f0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: float clampMag(float,float,float)>($f1, $f0, $f2);
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        $f2 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r1, $i1);
        $f1 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;
        $f3 = $r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;
        $f1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: float clampMag(float,float,float)>($f2, $f1, $f3);
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void dispatchViewReleased(float,float)>($f0, $f1);
        return;
    }

    private void reportNewEdgeDrags(float, float, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1;
        int $i0, $i3;
        byte $b1;
        boolean $z0;
        int[] $r1;
        android.support.v4.widget.ViewDragHelper$Callback $r2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $i0 := @parameter2: int;
        $b1 = 0;
        $z0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f0, $f1, $i0, 1);
        if $z0 == 0 goto label0;

        $b1 = 0 | 1;

     label0:
        $z0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f1, $f0, $i0, 4);
        if $z0 == 0 goto label1;

        $b1 = $b1 | 4;

     label1:
        $z0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f0, $f1, $i0, 2);
        if $z0 == 0 goto label2;

        $b1 = $b1 | 2;

     label2:
        $z0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>($f1, $f0, $i0, 8);
        if $z0 == 0 goto label3;

        $b1 = $b1 | 8;

     label3:
        if $b1 == 0 goto label4;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;
        $i3 = $r1[$i0];
        $i3 = $i3 | $b1;
        $r1[$i0] = $i3;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)>($b1, $i0);

     label4:
        return;
    }

    private void saveInitialMotion(float, float, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0, $f1;
        int $i0, $i1, $i2;
        float[] $r1, $r2;
        int[] $r3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $i0 := @parameter2: int;
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void ensureMotionHistorySizeForId(int)>($i0);
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;
        $r2[$i0] = $f0;
        $r1[$i0] = $f0;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;
        $r1[$i0] = $f1;
        $r2[$i0] = $f1;
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $i2 = (int) $f0;
        $i1 = (int) $f1;
        $i2 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: int getEdgesTouched(int,int)>($i2, $i1);
        $r3[$i0] = $i2;
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown>;
        $i1 = 1 << $i0;
        $i2 = $i2 | $i1;
        $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown> = $i2;
        return;
    }

    private void saveLastMotion(android.view.MotionEvent)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2;
        float $f0, $f1;
        float[] $r2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.MotionEvent;
        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>($r1);
        $i0 = 0;

     label0:
        if $i0 >= $i1 goto label1;

        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i0);
        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i0);
        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i0);
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;
        $r2[$i2] = $f0;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;
        $r2[$i2] = $f1;
        $i0 = $i0 + 1;
        goto label0;

     label1:
        return;
    }

    public void abort()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i2, $i3, $i4, $i5;
        android.support.v4.widget.ScrollerCompat $r1;
        android.support.v4.widget.ViewDragHelper$Callback $r2;
        android.view.View $r3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();
        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i0 != 2 goto label0;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $i4 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $i5 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $i0 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $i2 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i3 = $i0 - $i4;
        $i4 = $i2 - $i5;
        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r3, $i0, $i2, $i3, $i4);

     label0:
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);
        return;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1, $r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.ViewGroup $r3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.View;
        $z0 := @parameter1: boolean;
        $i0 := @parameter2: int;
        $i1 := @parameter3: int;
        $i2 := @parameter4: int;
        $i3 := @parameter5: int;
        $z1 = $r1 instanceof android.view.ViewGroup;
        if $z1 == 0 goto label2;

        $r3 = (android.view.ViewGroup) $r1;
        $i8 = virtualinvoke $r1.<android.view.View: int getScrollX()>();
        $i9 = virtualinvoke $r1.<android.view.View: int getScrollY()>();
        $i6 = virtualinvoke $r3.<android.view.ViewGroup: int getChildCount()>();
        $i7 = $i6 + -1;

     label0:
        if $i7 < 0 goto label2;

        $r2 = virtualinvoke $r3.<android.view.ViewGroup: android.view.View getChildAt(int)>($i7);
        $i6 = $i2 + $i8;
        $i4 = virtualinvoke $r2.<android.view.View: int getLeft()>();
        if $i6 < $i4 goto label1;

        $i6 = $i2 + $i8;
        $i5 = virtualinvoke $r2.<android.view.View: int getRight()>();
        if $i6 >= $i5 goto label1;

        $i6 = $i3 + $i9;
        $i5 = virtualinvoke $r2.<android.view.View: int getTop()>();
        if $i6 < $i5 goto label1;

        $i6 = $i3 + $i9;
        $i5 = virtualinvoke $r2.<android.view.View: int getBottom()>();
        if $i6 >= $i5 goto label1;

        $i6 = $i2 + $i8;
        $i4 = virtualinvoke $r2.<android.view.View: int getLeft()>();
        $i5 = $i6 - $i4;
        $i6 = $i3 + $i9;
        $i4 = virtualinvoke $r2.<android.view.View: int getTop()>();
        $i6 = $i6 - $i4;
        $z1 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean canScroll(android.view.View,boolean,int,int,int,int)>($r2, 1, $i0, $i1, $i5, $i6);
        if $z1 == 0 goto label1;

        return 1;

     label1:
        $i7 = $i7 + -1;
        goto label0;

     label2:
        if $z0 == 0 goto label4;

        $i10 = neg $i0;
        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r1, $i10);
        if $z1 != 0 goto label3;

        $i10 = neg $i1;
        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r1, $i10);
        if $z1 == 0 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    public void cancel()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.VelocityTracker $r1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = -1;
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void clearMotionHistory()>();
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r1.<android.view.VelocityTracker: void recycle()>();
        $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = null;

     label0:
        return;
    }

    public void captureChildView(android.view.View, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0;
        android.view.ViewParent $r2;
        android.view.ViewGroup $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6;
        android.support.v4.widget.ViewDragHelper$Callback $r7;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewParent getParent()>();
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        if $r2 == $r3 goto label0;

        $r5 = new java.lang.IllegalArgumentException;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("captureChildView: parameter must be a descendant of the ViewDragHelper\'s tracked parent view (");
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);
        throw $r5;

     label0:
        $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = $r1;
        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = $i0;
        $r7 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)>($r1, $i0);
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(1);
        return;
    }

    public boolean checkTouchSlop(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2;
        float[] $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        $i1 = lengthof $r1;
        $i2 = 0;

     label0:
        if $i2 >= $i1 goto label2;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(int,int)>($i0, $i2);
        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i2 = $i2 + 1;
        goto label0;

     label2:
        return 0;
    }

    public boolean checkTouchSlop(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, i4;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2;
        float[] $r1;
        byte $b3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $z2 = 1;
        $z1 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isPointerDown(int)>($i1);
        if $z1 != 0 goto label1;

        $z2 = 0;

     label0:
        return $z2;

     label1:
        $i2 = $i0 & 1;
        i4 = (int) 1;
        if $i2 != i4 goto label4;

        $z0 = 1;

     label2:
        $i2 = $i0 & 2;
        if $i2 != 2 goto label5;

        $z1 = 1;

     label3:
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;
        $f1 = $r1[$i1];
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        $f0 = $r1[$i1];
        $f0 = $f1 - $f0;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;
        $f1 = $r1[$i1];
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;
        $f2 = $r1[$i1];
        $f1 = $f1 - $f2;
        if $z0 == 0 goto label6;

        if $z1 == 0 goto label6;

        $f2 = $f0 * $f0;
        $f1 = $f1 * $f1;
        $f2 = $f2 + $f1;
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $i2 = $i2 * $i1;
        $f1 = (float) $i2;
        $b3 = $f2 cmpl $f1;
        if $b3 > 0 goto label0;

        return 0;

     label4:
        $z0 = 0;
        goto label2;

     label5:
        $z1 = 0;
        goto label3;

     label6:
        if $z0 == 0 goto label7;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f0);
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $f1 = (float) $i2;
        $b3 = $f2 cmpl $f1;
        if $b3 > 0 goto label0;

        return 0;

     label7:
        if $z1 == 0 goto label8;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f1);
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        $f1 = (float) $i2;
        $b3 = $f2 cmpl $f1;
        if $b3 > 0 goto label0;

        return 0;

     label8:
        return 0;
    }

    public boolean continueSettling(boolean)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        android.support.v4.widget.ScrollerCompat $r2;
        android.support.v4.widget.ViewDragHelper$Callback $r3;
        android.view.ViewGroup $r4;
        java.lang.Runnable $r5;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $z0 := @parameter0: boolean;
        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i0 != 2 goto label5;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $z1 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: boolean computeScrollOffset()>();
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $i0 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $i1 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i3 = virtualinvoke $r1.<android.view.View: int getLeft()>();
        $i2 = $i0 - $i3;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i3 = virtualinvoke $r1.<android.view.View: int getTop()>();
        $i3 = $i1 - $i3;
        if $i2 == 0 goto label0;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        virtualinvoke $r1.<android.view.View: void offsetLeftAndRight(int)>($i2);

     label0:
        if $i3 == 0 goto label1;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        virtualinvoke $r1.<android.view.View: void offsetTopAndBottom(int)>($i3);

     label1:
        if $i2 != 0 goto label2;

        if $i3 == 0 goto label3;

     label2:
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r1, $i0, $i1, $i2, $i3);

     label3:
        if $z1 == 0 goto label4;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $i3 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: int getFinalX()>();
        if $i0 != $i3 goto label4;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $i3 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: int getFinalY()>();
        if $i1 != $i3 goto label4;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();
        $z1 = 0;

     label4:
        if $z1 != 0 goto label5;

        if $z0 == 0 goto label6;

        $r4 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $r5 = $r0.<android.support.v4.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable>;
        virtualinvoke $r4.<android.view.ViewGroup: boolean post(java.lang.Runnable)>($r5);

     label5:
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i3 != 2 goto label7;

        return 1;

     label6:
        $i3 = (int) 0;
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>($i3);
        goto label5;

     label7:
        return 0;
    }

    public android.view.View findTopChildUnder(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3;
        android.view.ViewGroup $r2;
        android.support.v4.widget.ViewDragHelper$Callback $r3;
        android.view.View $r4;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $i2 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();
        $i2 = $i2 + -1;

     label0:
        if $i2 < 0 goto label2;

        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i3 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)>($i2);
        $r4 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i3);
        $i3 = virtualinvoke $r4.<android.view.View: int getLeft()>();
        if $i0 < $i3 goto label1;

        $i3 = virtualinvoke $r4.<android.view.View: int getRight()>();
        if $i0 >= $i3 goto label1;

        $i3 = virtualinvoke $r4.<android.view.View: int getTop()>();
        if $i1 < $i3 goto label1;

        $i3 = virtualinvoke $r4.<android.view.View: int getBottom()>();
        if $i1 >= $i3 goto label1;

        return $r4;

     label1:
        $i2 = $i2 + -1;
        goto label0;

     label2:
        return null;
    }

    public void flingCapturedView(int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        android.view.View $r2;
        android.view.VelocityTracker $r3;
        java.lang.IllegalStateException $r4;
        android.support.v4.widget.ScrollerCompat $r5;
        float $f0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $z0 = $r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress>;
        if $z0 != 0 goto label0;

        $r4 = new java.lang.IllegalStateException;
        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot flingCapturedView outside of a call to Callback#onViewReleased");
        throw $r4;

     label0:
        $r5 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i5 = virtualinvoke $r2.<android.view.View: int getLeft()>();
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i6 = virtualinvoke $r2.<android.view.View: int getTop()>();
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        $i4 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r3, $i4);
        $i7 = (int) $f0;
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        $i4 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r3, $i4);
        $i8 = (int) $f0;
        virtualinvoke $r5.<android.support.v4.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)>($i5, $i6, $i7, $i8, $i0, $i2, $i1, $i3);
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(2);
        return;
    }

    public int getActivePointerId()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        return $i0;
    }

    public android.view.View getCapturedView()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        return $r1;
    }

    public int getEdgeSize()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;
        return $i0;
    }

    public float getMinVelocity()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $f0 = $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;
        return $f0;
    }

    public int getTouchSlop()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;
        return $i0;
    }

    public int getViewDragState()
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        return $i0;
    }

    public boolean isCapturedViewUnder(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r1, $i0, $i1);
        return $z0;
    }

    public boolean isEdgeTouched(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2;
        int[] $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $i1 = lengthof $r1;
        $i2 = 0;

     label0:
        if $i2 >= $i1 goto label2;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isEdgeTouched(int,int)>($i0, $i2);
        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i2 = $i2 + 1;
        goto label0;

     label2:
        return 0;
    }

    public boolean isEdgeTouched(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1;
        boolean $z0;
        int[] $r1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isPointerDown(int)>($i1);
        if $z0 == 0 goto label0;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $i1 = $r1[$i1];
        $i1 = $i1 & $i0;
        if $i1 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public boolean isPointerDown(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown>;
        $i0 = 1 << $i0;
        $i2 = $i2 & $i0;
        if $i2 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public boolean isViewUnder(android.view.View, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1, $i2;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        if $r1 != null goto label1;

     label0:
        return 0;

     label1:
        $i2 = virtualinvoke $r1.<android.view.View: int getLeft()>();
        if $i0 < $i2 goto label0;

        $i2 = virtualinvoke $r1.<android.view.View: int getRight()>();
        if $i0 >= $i2 goto label0;

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();
        if $i1 < $i2 goto label0;

        $i2 = virtualinvoke $r1.<android.view.View: int getBottom()>();
        if $i1 >= $i2 goto label0;

        return 1;
    }

    public void processTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1, $f2, $f3;
        android.view.View $r3, $r9;
        android.view.VelocityTracker $r4;
        int[] $r6;
        android.support.v4.widget.ViewDragHelper$Callback $r7;
        boolean $z0;
        float[] $r8;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.MotionEvent;
        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);
        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);
        if $i0 != 0 goto label0;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label0:
        $r4 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        if $r4 != null goto label1;

        $r4 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();
        $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = $r4;

     label1:
        $r4 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);
        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label18;
            case 2: goto label6;
            case 3: goto label20;
            case 4: goto label2;
            case 5: goto label4;
            case 6: goto label12;
            default: goto label2;
        };

     label2:
        return;

     label3:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);
        $i3 = (int) $f1;
        $i0 = (int) $f0;
        $r3 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i3, $i0);
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f1, $f0, $i2);
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i2);
        $r6 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $i1 = $r6[$i2];
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;
        $i3 = $i3 & $i1;
        if $i3 == 0 goto label2;

        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;
        $r7 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i3 = $i3 & $i1;
        virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i3, $i2);
        goto label2;

     label4:
        $i3 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);
        $f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);
        $f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1);
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f2, $f1, $i3);
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i2 != 0 goto label5;

        $i2 = (int) $f2;
        $i1 = (int) $f1;
        $r3 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i2, $i1);
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i3);
        $r6 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $i2 = $r6[$i3];
        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;
        $i1 = $i1 & $i2;
        if $i1 == 0 goto label2;

        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;
        $r7 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i2 = $i1 & $i2;
        virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i2, $i3);
        goto label2;

     label5:
        $i2 = (int) $f2;
        $i1 = (int) $f1;
        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)>($i2, $i1);
        if $z0 == 0 goto label2;

        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i3);
        goto label2;

     label6:
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i3 != 1 goto label7;

        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>($r1, $i3);
        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);
        $f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1);
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        $f1 = $r8[$i3];
        $f3 = $f3 - $f1;
        $i1 = (int) $f3;
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        $f3 = $r8[$i3];
        $f3 = $f2 - $f3;
        $i0 = (int) $f3;
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i3 = virtualinvoke $r3.<android.view.View: int getLeft()>();
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $i2 = virtualinvoke $r3.<android.view.View: int getTop()>();
        $i3 = $i3 + $i1;
        $i2 = $i2 + $i0;
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void dragTo(int,int,int,int)>($i3, $i2, $i1, $i0);
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>($r1);
        goto label2;

     label7:
        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>($r1);
        $i1 = 0;

     label8:
        if $i1 >= $i0 goto label9;

        $i3 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);
        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);
        $f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1);
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        $f1 = $r8[$i3];
        $f0 = $f3 - $f1;
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;
        $f1 = $r8[$i3];
        $f1 = $f2 - $f1;
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)>($f0, $f1, $i3);
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i2 != 1 goto label10;

     label9:
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>($r1);
        goto label2;

     label10:
        $i4 = (int) $f3;
        $i2 = (int) $f2;
        $r3 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i4, $i2);
        $z0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)>($r3, $f0, $f1);
        if $z0 == 0 goto label11;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i3);
        if $z0 != 0 goto label9;

     label11:
        $i1 = $i1 + 1;
        goto label8;

     label12:
        $i4 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);
        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i3 != 1 goto label17;

        $i3 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        if $i4 != $i3 goto label17;

        $i0 = -1;
        $i3 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>($r1);
        $i2 = 0;

     label13:
        if $i2 >= $i3 goto label16;

        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i2);
        $i5 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        if $i1 != $i5 goto label15;

     label14:
        $i2 = $i2 + 1;
        goto label13;

     label15:
        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i2);
        $i5 = (int) $f3;
        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i2);
        $i6 = (int) $f3;
        $r9 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i5, $i6);
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        if $r9 != $r3 goto label14;

        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r9, $i1);
        if $z0 == 0 goto label14;

        $i0 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

     label16:
        if $i0 != -1 goto label17;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void releaseViewForPointerUp()>();

     label17:
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void clearMotionHistory(int)>($i4);
        goto label2;

     label18:
        $i6 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i6 != 1 goto label19;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void releaseViewForPointerUp()>();

     label19:
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();
        goto label2;

     label20:
        $i6 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i6 != 1 goto label21;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void dispatchViewReleased(float,float)>(0.0F, 0.0F);

     label21:
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();
        goto label2;
    }

    void setDragState(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1;
        android.view.ViewGroup $r1;
        java.lang.Runnable $r2;
        android.support.v4.widget.ViewDragHelper$Callback $r3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable>;
        virtualinvoke $r1.<android.view.ViewGroup: boolean removeCallbacks(java.lang.Runnable)>($r2);
        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i1 == $i0 goto label0;

        $r0.<android.support.v4.widget.ViewDragHelper: int mDragState> = $i0;
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: void onViewDragStateChanged(int)>($i0);
        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i1 != 0 goto label0;

        $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = null;

     label0:
        return;
    }

    public void setEdgeTrackingEnabled(int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges> = $i0;
        return;
    }

    public void setMinVelocity(float)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        float $f0;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $f0 := @parameter0: float;
        $r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity> = $f0;
        return;
    }

    public boolean settleCapturedViewAt(int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        float $f0;
        java.lang.IllegalStateException $r2;
        android.view.VelocityTracker $r3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $z0 = $r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress>;
        if $z0 != 0 goto label0;

        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot settleCapturedViewAt outside of a call to Callback#onViewReleased");
        throw $r2;

     label0:
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r3, $i2);
        $i3 = (int) $f0;
        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        $i2 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r3, $i2);
        $i2 = (int) $f0;
        $z0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)>($i0, $i1, $i3, $i2);
        return $z0;
    }

    public boolean shouldInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.MotionEvent $r1;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        android.view.View $r3, $r6, $r7;
        android.view.VelocityTracker $r4;
        int[] $r8;
        android.support.v4.widget.ViewDragHelper$Callback $r9;
        float[] $r10;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.MotionEvent;
        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);
        $i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>($r1);
        if $i0 != 0 goto label0;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label0:
        $r4 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        if $r4 != null goto label1;

        $r4 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();
        $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = $r4;

     label1:
        $r4 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);
        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label16;
            case 2: goto label7;
            case 3: goto label16;
            case 4: goto label2;
            case 5: goto label5;
            case 6: goto label15;
            default: goto label2;
        };

     label2:
        $i6 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i6 != 1 goto label17;

        return 1;

     label3:
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $i6 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, 0);
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f1, $f2, $i6);
        $i7 = (int) $f1;
        $i5 = (int) $f2;
        $r3 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i7, $i5);
        $r6 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        if $r3 != $r6 goto label4;

        $i7 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i7 != 2 goto label4;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r3, $i6);

     label4:
        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $i1 = $r8[$i6];
        $i7 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;
        $i7 = $i7 & $i1;
        if $i7 == 0 goto label2;

        $i7 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;
        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i7 = $i7 & $i1;
        virtualinvoke $r9.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i7, $i6);
        goto label2;

     label5:
        $i7 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);
        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i1);
        $f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i1);
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>($f3, $f2, $i7);
        $i6 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i6 != 0 goto label6;

        $r8 = $r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;
        $i6 = $r8[$i7];
        $i5 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;
        $i5 = $i5 & $i6;
        if $i5 == 0 goto label2;

        $i5 = $r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;
        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i6 = $i5 & $i6;
        virtualinvoke $r9.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i6, $i7);
        goto label2;

     label6:
        $i6 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i6 != 2 goto label2;

        $i6 = (int) $f3;
        $i5 = (int) $f2;
        $r7 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i6, $i5);
        $r6 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        if $r7 != $r6 goto label2;

        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r7, $i7);
        goto label2;

     label7:
        $r10 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        if $r10 == null goto label2;

        $r10 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;
        if $r10 == null goto label2;

        $i6 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>($r1);
        $i0 = 0;

     label8:
        if $i0 >= $i6 goto label11;

        $i8 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i0);
        $f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>($r1, $i0);
        $f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>($r1, $i0);
        $r10 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;
        $f1 = $r10[$i8];
        $f0 = $f3 - $f1;
        $r10 = $r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;
        $f1 = $r10[$i8];
        $f1 = $f2 - $f1;
        $i7 = (int) $f3;
        $i5 = (int) $f2;
        $r7 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i7, $i5);
        if $r7 == null goto label12;

        $z0 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)>($r7, $f0, $f1);
        if $z0 == 0 goto label12;

        $z0 = 1;

     label9:
        if $z0 == 0 goto label13;

        $i4 = virtualinvoke $r7.<android.view.View: int getLeft()>();
        $i7 = (int) $f0;
        $i5 = $i4 + $i7;
        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i7 = (int) $f0;
        $i2 = virtualinvoke $r9.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)>($r7, $i5, $i7);
        $i5 = virtualinvoke $r7.<android.view.View: int getTop()>();
        $i7 = (int) $f1;
        $i3 = $i5 + $i7;
        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i7 = (int) $f1;
        $i3 = virtualinvoke $r9.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)>($r7, $i3, $i7);
        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i1 = virtualinvoke $r9.<android.support.v4.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>($r7);
        $r9 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $i7 = virtualinvoke $r9.<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>($r7);
        if $i1 == 0 goto label10;

        if $i1 <= 0 goto label13;

        if $i2 != $i4 goto label13;

     label10:
        if $i7 == 0 goto label11;

        if $i7 <= 0 goto label13;

        if $i3 != $i5 goto label13;

     label11:
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>($r1);
        goto label2;

     label12:
        $z0 = 0;
        goto label9;

     label13:
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)>($f0, $f1, $i8);
        $i7 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i7 == 1 goto label11;

        if $z0 == 0 goto label14;

        $z0 = virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r7, $i8);
        if $z0 != 0 goto label11;

     label14:
        $i0 = $i0 + 1;
        goto label8;

     label15:
        $i8 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>($r1, $i1);
        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: void clearMotionHistory(int)>($i8);
        goto label2;

     label16:
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();
        goto label2;

     label17:
        return 0;
    }

    public boolean smoothSlideViewTo(android.view.View, int, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1;
        int $i0, $i1;
        boolean $z1;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = $r1;
        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = -1;
        $z1 = specialinvoke $r0.<android.support.v4.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)>($i0, $i1, 0, 0);
        if $z1 != 0 goto label0;

        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;
        if $i1 != 0 goto label0;

        $r1 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        if $r1 == null goto label0;

        $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = null;

     label0:
        return $z1;
    }

    boolean tryCaptureViewForDrag(android.view.View, int)
    {
        android.support.v4.widget.ViewDragHelper $r0;
        android.view.View $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        android.support.v4.widget.ViewDragHelper$Callback $r3;

        $r0 := @this: android.support.v4.widget.ViewDragHelper;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $r2 = $r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;
        if $r1 != $r2 goto label0;

        $i1 = $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;
        if $i1 != $i0 goto label0;

        return 1;

     label0:
        if $r1 == null goto label1;

        $r3 = $r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;
        $z0 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: boolean tryCaptureView(android.view.View,int)>($r1, $i0);
        if $z0 == 0 goto label1;

        $r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = $i0;
        virtualinvoke $r0.<android.support.v4.widget.ViewDragHelper: void captureChildView(android.view.View,int)>($r1, $i0);
        return 1;

     label1:
        return 0;
    }
}
