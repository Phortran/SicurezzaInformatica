class android.support.v4.view.animation.PathInterpolatorDonut extends java.lang.Object implements android.view.animation.Interpolator
{
    private static final float PRECISION;
    private final float[] mX;
    private final float[] mY;

    public void <init>(float, float)
    {
        android.support.v4.view.animation.PathInterpolatorDonut $r0;
        float $f0, $f1;
        android.graphics.Path $r1;

        $r0 := @this: android.support.v4.view.animation.PathInterpolatorDonut;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $r1 = staticinvoke <android.support.v4.view.animation.PathInterpolatorDonut: android.graphics.Path createQuad(float,float)>($f0, $f1);
        specialinvoke $r0.<android.support.v4.view.animation.PathInterpolatorDonut: void <init>(android.graphics.Path)>($r1);
        return;
    }

    public void <init>(float, float, float, float)
    {
        android.support.v4.view.animation.PathInterpolatorDonut $r0;
        float $f0, $f1, $f2, $f3;
        android.graphics.Path $r1;

        $r0 := @this: android.support.v4.view.animation.PathInterpolatorDonut;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $f2 := @parameter2: float;
        $f3 := @parameter3: float;
        $r1 = staticinvoke <android.support.v4.view.animation.PathInterpolatorDonut: android.graphics.Path createCubic(float,float,float,float)>($f0, $f1, $f2, $f3);
        specialinvoke $r0.<android.support.v4.view.animation.PathInterpolatorDonut: void <init>(android.graphics.Path)>($r1);
        return;
    }

    public void <init>(android.graphics.Path)
    {
        android.support.v4.view.animation.PathInterpolatorDonut $r0;
        android.graphics.Path $r1;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2;
        android.graphics.PathMeasure $r2;
        float[] $r3, $r4;

        $r0 := @this: android.support.v4.view.animation.PathInterpolatorDonut;
        $r1 := @parameter0: android.graphics.Path;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r2 = new android.graphics.PathMeasure;
        specialinvoke $r2.<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>($r1, 0);
        $f1 = virtualinvoke $r2.<android.graphics.PathMeasure: float getLength()>();
        $f0 = $f1 / 0.002F;
        $i2 = (int) $f0;
        $i1 = $i2 + 1;
        $r3 = newarray (float)[$i1];
        $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mX> = $r3;
        $r3 = newarray (float)[$i1];
        $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mY> = $r3;
        $r3 = newarray (float)[2];
        $i0 = 0;

     label0:
        if $i0 >= $i1 goto label1;

        $f0 = (float) $i0;
        $f0 = $f0 * $f1;
        $i2 = $i1 + -1;
        $f2 = (float) $i2;
        $f0 = $f0 / $f2;
        virtualinvoke $r2.<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>($f0, $r3, null);
        $r4 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mX>;
        $i2 = (int) 0;
        $f2 = $r3[$i2];
        $r4[$i0] = $f2;
        $r4 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mY>;
        $f2 = $r3[1];
        $r4[$i0] = $f2;
        $i0 = $i0 + 1;
        goto label0;

     label1:
        return;
    }

    private static android.graphics.Path createCubic(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;
        android.graphics.Path $r0;

        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $f2 := @parameter2: float;
        $f3 := @parameter3: float;
        $r0 = new android.graphics.Path;
        specialinvoke $r0.<android.graphics.Path: void <init>()>();
        virtualinvoke $r0.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);
        virtualinvoke $r0.<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>($f0, $f1, $f2, $f3, 1.0F, 1.0F);
        return $r0;
    }

    private static android.graphics.Path createQuad(float, float)
    {
        float $f0, $f1;
        android.graphics.Path $r0;

        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $r0 = new android.graphics.Path;
        specialinvoke $r0.<android.graphics.Path: void <init>()>();
        virtualinvoke $r0.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);
        virtualinvoke $r0.<android.graphics.Path: void quadTo(float,float,float,float)>($f0, $f1, 1.0F, 1.0F);
        return $r0;
    }

    public float getInterpolation(float)
    {
        android.support.v4.view.animation.PathInterpolatorDonut $r0;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2;
        byte $b3;
        float[] $r1;

        $r0 := @this: android.support.v4.view.animation.PathInterpolatorDonut;
        $f0 := @parameter0: float;
        $b3 = $f0 cmpg 0.0F;
        if $b3 > 0 goto label0;

        return 0.0F;

     label0:
        $b3 = $f0 cmpl 1.0F;
        if $b3 < 0 goto label1;

        return 1.0F;

     label1:
        $i2 = 0;
        $r1 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mX>;
        $i1 = lengthof $r1;
        $i0 = $i1 + -1;

     label2:
        $i1 = $i0 - $i2;
        if $i1 <= 1 goto label4;

        $i1 = $i2 + $i0;
        $i1 = $i1 / 2;
        $r1 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mX>;
        $f1 = $r1[$i1];
        $b3 = $f0 cmpg $f1;
        if $b3 >= 0 goto label3;

        $i0 = $i1;
        goto label2;

     label3:
        $i2 = $i1;
        goto label2;

     label4:
        $r1 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mX>;
        $f1 = $r1[$i0];
        $r1 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mX>;
        $f3 = $r1[$i2];
        $f1 = $f1 - $f3;
        $b3 = $f1 cmpl 0.0F;
        if $b3 != 0 goto label5;

        $r1 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mY>;
        $f2 = $r1[$i2];
        return $f2;

     label5:
        $r1 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mX>;
        $f3 = $r1[$i2];
        $f2 = $f0 - $f3;
        $f1 = $f2 / $f1;
        $r1 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mY>;
        $f2 = $r1[$i2];
        $r1 = $r0.<android.support.v4.view.animation.PathInterpolatorDonut: float[] mY>;
        $f0 = $r1[$i0];
        $f3 = $f0 - $f2;
        $f3 = $f3 * $f1;
        $f2 = $f3 + $f2;
        return $f2;
    }
}
