class android.support.v4.provider.RawDocumentFile extends android.support.v4.provider.DocumentFile
{
    private java.io.File mFile;

    void <init>(android.support.v4.provider.DocumentFile, java.io.File)
    {
        android.support.v4.provider.RawDocumentFile $r0;
        android.support.v4.provider.DocumentFile $r1;
        java.io.File $r2;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 := @parameter0: android.support.v4.provider.DocumentFile;
        $r2 := @parameter1: java.io.File;
        specialinvoke $r0.<android.support.v4.provider.DocumentFile: void <init>(android.support.v4.provider.DocumentFile)>($r1);
        $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile> = $r2;
        return;
    }

    private static boolean deleteContents(java.io.File)
    {
        java.io.File $r0;
        java.io.File[] $r1;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.io.File;
        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();
        $z0 = 1;
        if $r1 == null goto label3;

        $i1 = lengthof $r1;
        $i0 = 0;

     label0:
        if $i0 >= $i1 goto label3;

        $r0 = $r1[$i0];
        $z1 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();
        if $z1 == 0 goto label1;

        $z1 = staticinvoke <android.support.v4.provider.RawDocumentFile: boolean deleteContents(java.io.File)>($r0);
        $z0 = $z0 & $z1;

     label1:
        $z1 = virtualinvoke $r0.<java.io.File: boolean delete()>();
        if $z1 != 0 goto label2;

        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r3);
        $z0 = 0;

     label2:
        $i0 = $i0 + 1;
        goto label0;

     label3:
        return $z0;
    }

    private static java.lang.String getTypeForName(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0;
        android.webkit.MimeTypeMap $r1;

        $r0 := @parameter0: java.lang.String;
        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(46);
        if $i0 < 0 goto label0;

        $i0 = $i0 + 1;
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();
        $r1 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();
        $r2 = virtualinvoke $r1.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>($r0);
        if $r2 == null goto label0;

        return $r2;

     label0:
        return "application/octet-stream";
    }

    public boolean canRead()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean canRead()>();
        return $z0;
    }

    public boolean canWrite()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean canWrite()>();
        return $z0;
    }

    public android.support.v4.provider.DocumentFile createDirectory(java.lang.String)
    {
        android.support.v4.provider.RawDocumentFile $r0, $r4;
        java.lang.String $r1;
        java.io.File $r2, $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 := @parameter0: java.lang.String;
        $r2 = new java.io.File;
        $r3 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);
        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();
        if $z0 != 0 goto label0;

        $z0 = virtualinvoke $r2.<java.io.File: boolean mkdir()>();
        if $z0 == 0 goto label1;

     label0:
        $r4 = new android.support.v4.provider.RawDocumentFile;
        specialinvoke $r4.<android.support.v4.provider.RawDocumentFile: void <init>(android.support.v4.provider.DocumentFile,java.io.File)>($r0, $r2);
        return $r4;

     label1:
        return null;
    }

    public android.support.v4.provider.DocumentFile createFile(java.lang.String, java.lang.String)
    {
        android.support.v4.provider.RawDocumentFile $r0, $r8;
        java.lang.String $r1, $r2;
        java.io.IOException $r3;
        java.io.File $r4, $r7;
        android.webkit.MimeTypeMap $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: java.lang.String;
        $r5 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();
        $r1 = virtualinvoke $r5.<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>($r1);
        if $r1 == null goto label0;

        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label0:
        $r4 = new java.io.File;
        $r7 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r2);

     label1:
        virtualinvoke $r4.<java.io.File: boolean createNewFile()>();
        $r8 = new android.support.v4.provider.RawDocumentFile;
        specialinvoke $r8.<android.support.v4.provider.RawDocumentFile: void <init>(android.support.v4.provider.DocumentFile,java.io.File)>($r0, $r4);

     label2:
        return $r8;

     label3:
        $r3 := @caughtexception;
        $r6 = new java.lang.StringBuilder;
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to createFile: ");
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DocumentFile", $r2);
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean delete()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        staticinvoke <android.support.v4.provider.RawDocumentFile: boolean deleteContents(java.io.File)>($r1);
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean delete()>();
        return $z0;
    }

    public boolean exists()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();
        return $z0;
    }

    public java.lang.String getName()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        java.lang.String $r2;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();
        return $r2;
    }

    public java.lang.String getType()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();
        if $z0 == 0 goto label0;

        return null;

     label0:
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();
        $r2 = staticinvoke <android.support.v4.provider.RawDocumentFile: java.lang.String getTypeForName(java.lang.String)>($r2);
        return $r2;
    }

    public android.net.Uri getUri()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        android.net.Uri $r2;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $r2 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r1);
        return $r2;
    }

    public boolean isDirectory()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();
        return $z0;
    }

    public boolean isFile()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();
        return $z0;
    }

    public long lastModified()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        long $l0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $l0 = virtualinvoke $r1.<java.io.File: long lastModified()>();
        return $l0;
    }

    public long length()
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.io.File $r1;
        long $l0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $l0 = virtualinvoke $r1.<java.io.File: long length()>();
        return $l0;
    }

    public android.support.v4.provider.DocumentFile[] listFiles()
    {
        android.support.v4.provider.RawDocumentFile $r0, $r4;
        java.io.File[] $r1;
        java.io.File $r2;
        int $i0, $i1;
        java.util.ArrayList $r3;
        android.support.v4.provider.DocumentFile[] $r5;
        java.lang.Object[] $r6;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r3 = new java.util.ArrayList;
        specialinvoke $r3.<java.util.ArrayList: void <init>()>();
        $r2 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $r1 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();
        if $r1 == null goto label1;

        $i1 = lengthof $r1;
        $i0 = 0;

     label0:
        if $i0 >= $i1 goto label1;

        $r2 = $r1[$i0];
        $r4 = new android.support.v4.provider.RawDocumentFile;
        specialinvoke $r4.<android.support.v4.provider.RawDocumentFile: void <init>(android.support.v4.provider.DocumentFile,java.io.File)>($r0, $r2);
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);
        $i0 = $i0 + 1;
        goto label0;

     label1:
        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();
        $r5 = newarray (android.support.v4.provider.DocumentFile)[$i1];
        $r6 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);
        $r5 = (android.support.v4.provider.DocumentFile[]) $r6;
        return $r5;
    }

    public boolean renameTo(java.lang.String)
    {
        android.support.v4.provider.RawDocumentFile $r0;
        java.lang.String $r1;
        java.io.File $r2, $r3;
        boolean $z0;

        $r0 := @this: android.support.v4.provider.RawDocumentFile;
        $r1 := @parameter0: java.lang.String;
        $r2 = new java.io.File;
        $r3 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $r3 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();
        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);
        $r3 = $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile>;
        $z0 = virtualinvoke $r3.<java.io.File: boolean renameTo(java.io.File)>($r2);
        if $z0 == 0 goto label0;

        $r0.<android.support.v4.provider.RawDocumentFile: java.io.File mFile> = $r2;
        return 1;

     label0:
        return 0;
    }
}
