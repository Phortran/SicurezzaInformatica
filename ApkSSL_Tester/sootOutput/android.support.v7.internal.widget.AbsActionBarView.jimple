abstract class android.support.v7.internal.widget.AbsActionBarView extends android.view.ViewGroup
{
    private static final int FADE_DURATION;
    private static final android.view.animation.Interpolator sAlphaInterpolator;
    protected android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter;
    protected int mContentHeight;
    protected android.support.v7.widget.ActionMenuView mMenuView;
    protected final android.content.Context mPopupContext;
    protected boolean mSplitActionBar;
    protected android.view.ViewGroup mSplitView;
    protected boolean mSplitWhenNarrow;
    protected final android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener;
    protected android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim;

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;

        $r0 = new android.view.animation.DecelerateInterpolator;
        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>()>();
        <android.support.v7.internal.widget.AbsActionBarView: android.view.animation.Interpolator sAlphaInterpolator> = $r0;
        return;
    }

    void <init>(android.content.Context)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.content.Context $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 := @parameter0: android.content.Context;
        specialinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);
        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        specialinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0);
        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        android.util.TypedValue $r3;
        android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener $r4;
        boolean $z0;
        android.content.res.Resources$Theme $r5;
        android.view.ContextThemeWrapper $r6;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        $i0 := @parameter2: int;
        specialinvoke $r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);
        $r4 = new android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener;
        specialinvoke $r4.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(android.support.v7.internal.widget.AbsActionBarView)>($r0);
        $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener> = $r4;
        $r3 = new android.util.TypedValue;
        specialinvoke $r3.<android.util.TypedValue: void <init>()>();
        $r5 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();
        $i0 = <android.support.v7.appcompat.R$attr: int actionBarPopupTheme>;
        $z0 = virtualinvoke $r5.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, $r3, 1);
        if $z0 == 0 goto label1;

        $i0 = $r3.<android.util.TypedValue: int resourceId>;
        if $i0 == 0 goto label1;

        $r6 = new android.view.ContextThemeWrapper;
        $i0 = $r3.<android.util.TypedValue: int resourceId>;
        specialinvoke $r6.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r1, $i0);
        $r0.<android.support.v7.internal.widget.AbsActionBarView: android.content.Context mPopupContext> = $r6;

     label0:
        return;

     label1:
        $r0.<android.support.v7.internal.widget.AbsActionBarView: android.content.Context mPopupContext> = $r1;
        goto label0;
    }

    protected static int next(int, int, boolean)
    {
        int $i0, $i1;
        boolean $z0;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $z0 := @parameter2: boolean;
        if $z0 == 0 goto label0;

        $i1 = $i0 - $i1;
        return $i1;

     label0:
        $i1 = $i0 + $i1;
        return $i1;
    }

    public void animateToVisibility(int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        int $i0, $i2;
        android.support.v4.view.ViewPropertyAnimatorCompat $r1, $r3;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet $r2, $r8;
        android.view.ViewGroup $r4;
        android.support.v7.widget.ActionMenuView $r5;
        android.view.animation.Interpolator $r6;
        android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener $r7;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $i0 := @parameter0: int;
        $r3 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;
        if $r3 == null goto label0;

        $r3 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;
        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: void cancel()>();

     label0:
        if $i0 != 0 goto label4;

        $i2 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: int getVisibility()>();
        if $i2 == 0 goto label1;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r0, 0.0F);
        $r4 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView>;
        if $r4 == null goto label1;

        $r5 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;
        if $r5 == null goto label1;

        $r5 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r5, 0.0F);

     label1:
        $r3 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r0);
        $r1 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);
        virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);
        $r6 = <android.support.v7.internal.widget.AbsActionBarView: android.view.animation.Interpolator sAlphaInterpolator>;
        virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)>($r6);
        $r4 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView>;
        if $r4 == null goto label3;

        $r5 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;
        if $r5 == null goto label3;

        $r2 = new android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;
        specialinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void <init>()>();
        $r5 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;
        $r3 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r5);
        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);
        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);
        $r7 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;
        $r7 = virtualinvoke $r7.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>($r1, $i0);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r7);
        $r8 = virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r1);
        virtualinvoke $r8.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r3);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void start()>();

     label2:
        return;

     label3:
        $r7 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;
        $r7 = virtualinvoke $r7.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>($r1, $i0);
        virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r7);
        virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: void start()>();
        goto label2;

     label4:
        $r3 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r0);
        $r3 = virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);
        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);
        $r6 = <android.support.v7.internal.widget.AbsActionBarView: android.view.animation.Interpolator sAlphaInterpolator>;
        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)>($r6);
        $r4 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView>;
        if $r4 == null goto label5;

        $r5 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;
        if $r5 == null goto label5;

        $r8 = new android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;
        specialinvoke $r8.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void <init>()>();
        $r5 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;
        $r1 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r5);
        $r1 = virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);
        virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);
        $r7 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;
        $r7 = virtualinvoke $r7.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>($r3, $i0);
        virtualinvoke $r8.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r7);
        $r2 = virtualinvoke $r8.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r3);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r1);
        virtualinvoke $r8.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void start()>();
        goto label2;

     label5:
        $r7 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;
        $r7 = virtualinvoke $r7.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>($r3, $i0);
        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r7);
        virtualinvoke $r3.<android.support.v4.view.ViewPropertyAnimatorCompat: void start()>();
        goto label2;
    }

    public boolean canShowOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        boolean $z0;
        int $i0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $z0 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: boolean isOverflowReserved()>();
        if $z0 == 0 goto label0;

        $i0 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: int getVisibility()>();
        if $i0 != 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public void dismissPopupMenus()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.widget.ActionMenuPresenter $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        virtualinvoke $r1.<android.support.v7.widget.ActionMenuPresenter: boolean dismissPopupMenus()>();

     label0:
        return;
    }

    public int getAnimatedVisibility()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v4.view.ViewPropertyAnimatorCompat $r1;
        int $i0;
        android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener $r2;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;
        if $r1 == null goto label0;

        $r2 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;
        $i0 = $r2.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility>;
        return $i0;

     label0:
        $i0 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: int getVisibility()>();
        return $i0;
    }

    public int getContentHeight()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        int $i0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $i0 = $r0.<android.support.v7.internal.widget.AbsActionBarView: int mContentHeight>;
        return $i0;
    }

    public boolean hideOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.widget.ActionMenuPresenter $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        $z0 = virtualinvoke $r1.<android.support.v7.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();
        return $z0;

     label0:
        return 0;
    }

    public boolean isOverflowMenuShowPending()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.widget.ActionMenuPresenter $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        $z0 = virtualinvoke $r1.<android.support.v7.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()>();
        return $z0;

     label0:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.widget.ActionMenuPresenter $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        $z0 = virtualinvoke $r1.<android.support.v7.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>();
        return $z0;

     label0:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.widget.ActionMenuPresenter $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        $z0 = virtualinvoke $r1.<android.support.v7.widget.ActionMenuPresenter: boolean isOverflowReserved()>();
        if $z0 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    protected int measureChildView(android.view.View, int, int, int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i0, -2147483648);
        virtualinvoke $r1.<android.view.View: void measure(int,int)>($i3, $i1);
        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();
        $i3 = $i0 - $i3;
        $i3 = $i3 - $i2;
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);
        return $i3;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.content.res.Configuration $r1;
        android.content.res.TypedArray $r2;
        int $i0;
        int[] $r3;
        android.content.Context $r4;
        android.support.v7.widget.ActionMenuPresenter $r5;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 := @parameter0: android.content.res.Configuration;
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 8 goto label0;

        specialinvoke $r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>($r1);

     label0:
        $r4 = virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: android.content.Context getContext()>();
        $r3 = <android.support.v7.appcompat.R$styleable: int[] ActionBar>;
        $i0 = <android.support.v7.appcompat.R$attr: int actionBarStyle>;
        $r2 = virtualinvoke $r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r3, $i0, 0);
        $i0 = <android.support.v7.appcompat.R$styleable: int ActionBar_height>;
        $i0 = virtualinvoke $r2.<android.content.res.TypedArray: int getLayoutDimension(int,int)>($i0, 0);
        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void setContentHeight(int)>($i0);
        virtualinvoke $r2.<android.content.res.TypedArray: void recycle()>();
        $r5 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        if $r5 == null goto label1;

        $r5 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        virtualinvoke $r5.<android.support.v7.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>($r1);

     label1:
        return;
    }

    protected int positionChild(android.view.View, int, int, int, boolean)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.view.View $r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 := @parameter0: android.view.View;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $z0 := @parameter4: boolean;
        $i4 = virtualinvoke $r1.<android.view.View: int getMeasuredWidth()>();
        $i3 = virtualinvoke $r1.<android.view.View: int getMeasuredHeight()>();
        $i2 = $i2 - $i3;
        $i2 = $i2 / 2;
        $i2 = $i1 + $i2;
        if $z0 == 0 goto label2;

        $i1 = $i0 - $i4;
        $i3 = $i2 + $i3;
        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i1, $i2, $i0, $i3);

     label0:
        if $z0 == 0 goto label1;

        $i4 = neg $i4;

     label1:
        return $i4;

     label2:
        $i1 = $i0 + $i4;
        $i3 = $i2 + $i3;
        virtualinvoke $r1.<android.view.View: void layout(int,int,int,int)>($i0, $i2, $i1, $i3);
        goto label0;
    }

    public void postShowOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.internal.widget.AbsActionBarView$1 $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 = new android.support.v7.internal.widget.AbsActionBarView$1;
        specialinvoke $r1.<android.support.v7.internal.widget.AbsActionBarView$1: void <init>(android.support.v7.internal.widget.AbsActionBarView)>($r0);
        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: boolean post(java.lang.Runnable)>($r1);
        return;
    }

    public void setContentHeight(int)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        int $i0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $i0 := @parameter0: int;
        $r0.<android.support.v7.internal.widget.AbsActionBarView: int mContentHeight> = $i0;
        virtualinvoke $r0.<android.support.v7.internal.widget.AbsActionBarView: void requestLayout()>();
        return;
    }

    public void setSplitToolbar(boolean)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $z0 := @parameter0: boolean;
        $r0.<android.support.v7.internal.widget.AbsActionBarView: boolean mSplitActionBar> = $z0;
        return;
    }

    public void setSplitView(android.view.ViewGroup)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.view.ViewGroup $r1;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 := @parameter0: android.view.ViewGroup;
        $r0.<android.support.v7.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView> = $r1;
        return;
    }

    public void setSplitWhenNarrow(boolean)
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $z0 := @parameter0: boolean;
        $r0.<android.support.v7.internal.widget.AbsActionBarView: boolean mSplitWhenNarrow> = $z0;
        return;
    }

    public boolean showOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView $r0;
        android.support.v7.widget.ActionMenuPresenter $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.widget.AbsActionBarView;
        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;
        $z0 = virtualinvoke $r1.<android.support.v7.widget.ActionMenuPresenter: boolean showOverflowMenu()>();
        return $z0;

     label0:
        return 0;
    }
}
