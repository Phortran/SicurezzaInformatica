class android.support.v4.view.ViewCompatEclairMr1 extends java.lang.Object
{
    public static final java.lang.String TAG;
    private static java.lang.reflect.Method sChildrenDrawingOrderMethod;

    void <init>()
    {
        android.support.v4.view.ViewCompatEclairMr1 $r0;

        $r0 := @this: android.support.v4.view.ViewCompatEclairMr1;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static boolean isOpaque(android.view.View)
    {
        android.view.View $r0;
        boolean $z0;

        $r0 := @parameter0: android.view.View;
        $z0 = virtualinvoke $r0.<android.view.View: boolean isOpaque()>();
        return $z0;
    }

    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup, boolean)
    {
        android.view.ViewGroup $r0;
        boolean $z0;
        java.lang.NoSuchMethodException $r1;
        java.lang.reflect.Method $r2;
        java.lang.Class $r4, $r5;
        java.lang.Class[] $r6;
        java.lang.Object[] $r7;
        java.lang.Boolean $r8;
        java.lang.IllegalAccessException $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.reflect.InvocationTargetException $r12;

        $r0 := @parameter0: android.view.ViewGroup;
        $z0 := @parameter1: boolean;
        $r2 = <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod>;
        if $r2 != null goto label3;

        $r5 = class "android/view/ViewGroup";
        $r6 = newarray (java.lang.Class)[1];
        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;
        $r6[0] = $r4;

     label0:
        $r2 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setChildrenDrawingOrderEnabled", $r6);

     label1:
        <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod> = $r2;

     label2:
        $r2 = <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod>;
        virtualinvoke $r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

     label3:
        $r2 = <android.support.v4.view.ViewCompatEclairMr1: java.lang.reflect.Method sChildrenDrawingOrderMethod>;
        $r7 = newarray (java.lang.Object)[1];

     label4:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);
        $r7[0] = $r8;
        virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r7);

     label5:
        return;

     label6:
        $r1 := @caughtexception;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to find childrenDrawingOrderEnabled", $r1);
        goto label2;

     label7:
        $r10 := @caughtexception;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", $r10);
        goto label5;

     label8:
        $r11 := @caughtexception;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", $r11);
        goto label5;

     label9:
        $r12 := @caughtexception;
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewCompat", "Unable to invoke childrenDrawingOrderEnabled", $r12);
        goto label5;

        catch java.lang.NoSuchMethodException from label0 to label1 with label6;
        catch java.lang.IllegalAccessException from label4 to label5 with label7;
        catch java.lang.IllegalArgumentException from label4 to label5 with label8;
        catch java.lang.reflect.InvocationTargetException from label4 to label5 with label9;
    }
}
