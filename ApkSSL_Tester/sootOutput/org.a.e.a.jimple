public class org.a.e.a extends java.util.TreeMap
{
    private final java.util.List a;
    private double b;

    private void a()
    {
        org.a.e.a $r0;
        java.util.List $r1, $r2;
        byte $b0;
        double $d0, $d1;
        int $i1;
        java.lang.Object $r3;
        java.lang.Double $r4;

        $r0 := @this: org.a.e.a;
        $r1 = $r0.<org.a.e.a: java.util.List a>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        if $i1 >= 2 goto label1;

        $r0.<org.a.e.a: double b> = 0.0;

     label0:
        return;

     label1:
        $r1 = $r0.<org.a.e.a: java.util.List a>;
        $r2 = $r0.<org.a.e.a: java.util.List a>;
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();
        $i1 = $i1 + -1;
        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);
        $r4 = (java.lang.Double) $r3;
        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();
        $r2 = $r0.<org.a.e.a: java.util.List a>;
        $r1 = $r0.<org.a.e.a: java.util.List a>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i1 = $i1 + -2;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);
        $r4 = (java.lang.Double) $r3;
        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();
        $d1 = $d0 - $d1;
        $d1 = staticinvoke <java.lang.Math: double abs(double)>($d1);
        $d0 = $r0.<org.a.e.a: double b>;
        $b0 = $d1 cmpl $d0;
        if $b0 <= 0 goto label0;

        $r2 = $r0.<org.a.e.a: java.util.List a>;
        $r1 = $r0.<org.a.e.a: java.util.List a>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i1 = $i1 + -1;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);
        $r4 = (java.lang.Double) $r3;
        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();
        $r2 = $r0.<org.a.e.a: java.util.List a>;
        $r1 = $r0.<org.a.e.a: java.util.List a>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i1 = $i1 + -2;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);
        $r4 = (java.lang.Double) $r3;
        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();
        $d1 = $d1 - $d0;
        $d1 = staticinvoke <java.lang.Math: double abs(double)>($d1);
        $r0.<org.a.e.a: double b> = $d1;
        goto label0;
    }

    public int a(java.lang.Object)
    {
        org.a.e.a $r0;
        java.lang.Object $r1;
        java.util.List $r2;
        int $i0;

        $r0 := @this: org.a.e.a;
        $r1 := @parameter0: java.lang.Object;
        $r2 = $r0.<org.a.e.a: java.util.List a>;
        $i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>($r2, $r1, null);
        return $i0;
    }

    public java.lang.Object a(int)
    {
        org.a.e.a $r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;

        $r0 := @this: org.a.e.a;
        $i0 := @parameter0: int;
        $r1 = $r0.<org.a.e.a: java.util.List a>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);
        return $r2;
    }

    public java.lang.Object b(int)
    {
        org.a.e.a $r0;
        int $i0;
        java.util.List $r1;
        java.lang.Object $r2;

        $r0 := @this: org.a.e.a;
        $i0 := @parameter0: int;
        $r1 = $r0.<org.a.e.a: java.util.List a>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);
        $r2 = virtualinvoke $r0.<org.a.e.a: java.lang.Object get(java.lang.Object)>($r2);
        return $r2;
    }

    public void clear()
    {
        org.a.e.a $r0;
        java.util.List $r1;

        $r0 := @this: org.a.e.a;
        specialinvoke $r0.<org.a.e.a: void a()>();
        specialinvoke $r0.<java.util.TreeMap: void clear()>();
        $r1 = $r0.<org.a.e.a: java.util.List a>;
        interfaceinvoke $r1.<java.util.List: void clear()>();
        return;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.a.e.a $r0;
        java.lang.Object $r1, $r2;
        java.util.List $r3;

        $r0 := @this: org.a.e.a;
        $r1 := @parameter0: java.lang.Object;
        $r2 := @parameter1: java.lang.Object;
        $r3 = $r0.<org.a.e.a: java.util.List a>;
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);
        specialinvoke $r0.<org.a.e.a: void a()>();
        $r2 = specialinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);
        return $r2;
    }
}
