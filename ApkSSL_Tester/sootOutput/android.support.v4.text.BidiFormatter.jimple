public final class android.support.v4.text.BidiFormatter extends java.lang.Object
{
    private static final int DEFAULT_FLAGS;
    private static final android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE;
    private static final android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE;
    private static android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC;
    private static final int DIR_LTR;
    private static final int DIR_RTL;
    private static final int DIR_UNKNOWN;
    private static final java.lang.String EMPTY_STRING;
    private static final int FLAG_STEREO_RESET;
    private static final char LRE;
    private static final char LRM;
    private static final java.lang.String LRM_STRING;
    private static final char PDF;
    private static final char RLE;
    private static final char RLM;
    private static final java.lang.String RLM_STRING;
    private final android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat;
    private final int mFlags;
    private final boolean mIsRtlContext;

    static void <clinit>()
    {
        android.support.v4.text.TextDirectionHeuristicCompat $r0;
        java.lang.String $r1;
        android.support.v4.text.BidiFormatter $r2;

        $r0 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR>;
        <android.support.v4.text.BidiFormatter: android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC> = $r0;
        $r1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(8206);
        <android.support.v4.text.BidiFormatter: java.lang.String LRM_STRING> = $r1;
        $r1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(8207);
        <android.support.v4.text.BidiFormatter: java.lang.String RLM_STRING> = $r1;
        $r2 = new android.support.v4.text.BidiFormatter;
        $r0 = <android.support.v4.text.BidiFormatter: android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>;
        specialinvoke $r2.<android.support.v4.text.BidiFormatter: void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat)>(0, 2, $r0);
        <android.support.v4.text.BidiFormatter: android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE> = $r2;
        $r2 = new android.support.v4.text.BidiFormatter;
        $r0 = <android.support.v4.text.BidiFormatter: android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>;
        specialinvoke $r2.<android.support.v4.text.BidiFormatter: void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat)>(1, 2, $r0);
        <android.support.v4.text.BidiFormatter: android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE> = $r2;
        return;
    }

    private void <init>(boolean, int, android.support.v4.text.TextDirectionHeuristicCompat)
    {
        android.support.v4.text.BidiFormatter $r0;
        boolean $z0;
        int $i0;
        android.support.v4.text.TextDirectionHeuristicCompat $r1;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $z0 := @parameter0: boolean;
        $i0 := @parameter1: int;
        $r1 := @parameter2: android.support.v4.text.TextDirectionHeuristicCompat;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r0.<android.support.v4.text.BidiFormatter: boolean mIsRtlContext> = $z0;
        $r0.<android.support.v4.text.BidiFormatter: int mFlags> = $i0;
        $r0.<android.support.v4.text.BidiFormatter: android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat> = $r1;
        return;
    }

    void <init>(boolean, int, android.support.v4.text.TextDirectionHeuristicCompat, android.support.v4.text.BidiFormatter$1)
    {
        android.support.v4.text.BidiFormatter $r0;
        boolean $z0;
        int $i0;
        android.support.v4.text.TextDirectionHeuristicCompat $r1;
        android.support.v4.text.BidiFormatter$1 $r2;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $z0 := @parameter0: boolean;
        $i0 := @parameter1: int;
        $r1 := @parameter2: android.support.v4.text.TextDirectionHeuristicCompat;
        $r2 := @parameter3: android.support.v4.text.BidiFormatter$1;
        specialinvoke $r0.<android.support.v4.text.BidiFormatter: void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat)>($z0, $i0, $r1);
        return;
    }

    static boolean access$000(java.util.Locale)
    {
        java.util.Locale $r0;
        boolean $z0;

        $r0 := @parameter0: java.util.Locale;
        $z0 = staticinvoke <android.support.v4.text.BidiFormatter: boolean isRtlLocale(java.util.Locale)>($r0);
        return $z0;
    }

    static android.support.v4.text.TextDirectionHeuristicCompat access$100()
    {
        android.support.v4.text.TextDirectionHeuristicCompat $r0;

        $r0 = <android.support.v4.text.BidiFormatter: android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC>;
        return $r0;
    }

    static android.support.v4.text.BidiFormatter access$200()
    {
        android.support.v4.text.BidiFormatter $r0;

        $r0 = <android.support.v4.text.BidiFormatter: android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE>;
        return $r0;
    }

    static android.support.v4.text.BidiFormatter access$300()
    {
        android.support.v4.text.BidiFormatter $r0;

        $r0 = <android.support.v4.text.BidiFormatter: android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE>;
        return $r0;
    }

    private static int getEntryDir(java.lang.String)
    {
        java.lang.String $r0;
        android.support.v4.text.BidiFormatter$DirectionalityEstimator $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;
        $r1 = new android.support.v4.text.BidiFormatter$DirectionalityEstimator;
        specialinvoke $r1.<android.support.v4.text.BidiFormatter$DirectionalityEstimator: void <init>(java.lang.String,boolean)>($r0, 0);
        $i0 = virtualinvoke $r1.<android.support.v4.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()>();
        return $i0;
    }

    private static int getExitDir(java.lang.String)
    {
        java.lang.String $r0;
        android.support.v4.text.BidiFormatter$DirectionalityEstimator $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;
        $r1 = new android.support.v4.text.BidiFormatter$DirectionalityEstimator;
        specialinvoke $r1.<android.support.v4.text.BidiFormatter$DirectionalityEstimator: void <init>(java.lang.String,boolean)>($r0, 0);
        $i0 = virtualinvoke $r1.<android.support.v4.text.BidiFormatter$DirectionalityEstimator: int getExitDir()>();
        return $i0;
    }

    public static android.support.v4.text.BidiFormatter getInstance()
    {
        android.support.v4.text.BidiFormatter$Builder $r0;
        android.support.v4.text.BidiFormatter $r1;

        $r0 = new android.support.v4.text.BidiFormatter$Builder;
        specialinvoke $r0.<android.support.v4.text.BidiFormatter$Builder: void <init>()>();
        $r1 = virtualinvoke $r0.<android.support.v4.text.BidiFormatter$Builder: android.support.v4.text.BidiFormatter build()>();
        return $r1;
    }

    public static android.support.v4.text.BidiFormatter getInstance(java.util.Locale)
    {
        java.util.Locale $r0;
        android.support.v4.text.BidiFormatter$Builder $r1;
        android.support.v4.text.BidiFormatter $r2;

        $r0 := @parameter0: java.util.Locale;
        $r1 = new android.support.v4.text.BidiFormatter$Builder;
        specialinvoke $r1.<android.support.v4.text.BidiFormatter$Builder: void <init>(java.util.Locale)>($r0);
        $r2 = virtualinvoke $r1.<android.support.v4.text.BidiFormatter$Builder: android.support.v4.text.BidiFormatter build()>();
        return $r2;
    }

    public static android.support.v4.text.BidiFormatter getInstance(boolean)
    {
        boolean $z0;
        android.support.v4.text.BidiFormatter$Builder $r0;
        android.support.v4.text.BidiFormatter $r1;

        $z0 := @parameter0: boolean;
        $r0 = new android.support.v4.text.BidiFormatter$Builder;
        specialinvoke $r0.<android.support.v4.text.BidiFormatter$Builder: void <init>(boolean)>($z0);
        $r1 = virtualinvoke $r0.<android.support.v4.text.BidiFormatter$Builder: android.support.v4.text.BidiFormatter build()>();
        return $r1;
    }

    private static boolean isRtlLocale(java.util.Locale)
    {
        java.util.Locale $r0;
        int $i1;

        $r0 := @parameter0: java.util.Locale;
        $i1 = staticinvoke <android.support.v4.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)>($r0);
        if $i1 != 1 goto label0;

        return 1;

     label0:
        return 0;
    }

    private java.lang.String markAfter(java.lang.String, android.support.v4.text.TextDirectionHeuristicCompat)
    {
        android.support.v4.text.BidiFormatter $r0;
        java.lang.String $r1;
        android.support.v4.text.TextDirectionHeuristicCompat $r2;
        boolean $z0, $z1;
        int $i1;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.support.v4.text.TextDirectionHeuristicCompat;
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();
        $z0 = interfaceinvoke $r2.<android.support.v4.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>($r1, 0, $i1);
        $z1 = $r0.<android.support.v4.text.BidiFormatter: boolean mIsRtlContext>;
        if $z1 != 0 goto label1;

        if $z0 != 0 goto label0;

        $i1 = staticinvoke <android.support.v4.text.BidiFormatter: int getExitDir(java.lang.String)>($r1);
        if $i1 != 1 goto label1;

     label0:
        $r1 = <android.support.v4.text.BidiFormatter: java.lang.String LRM_STRING>;
        return $r1;

     label1:
        $z1 = $r0.<android.support.v4.text.BidiFormatter: boolean mIsRtlContext>;
        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        $i1 = staticinvoke <android.support.v4.text.BidiFormatter: int getExitDir(java.lang.String)>($r1);
        if $i1 != -1 goto label3;

     label2:
        $r1 = <android.support.v4.text.BidiFormatter: java.lang.String RLM_STRING>;
        return $r1;

     label3:
        return "";
    }

    private java.lang.String markBefore(java.lang.String, android.support.v4.text.TextDirectionHeuristicCompat)
    {
        android.support.v4.text.BidiFormatter $r0;
        java.lang.String $r1;
        android.support.v4.text.TextDirectionHeuristicCompat $r2;
        boolean $z0, $z1;
        int $i1;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.support.v4.text.TextDirectionHeuristicCompat;
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();
        $z0 = interfaceinvoke $r2.<android.support.v4.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>($r1, 0, $i1);
        $z1 = $r0.<android.support.v4.text.BidiFormatter: boolean mIsRtlContext>;
        if $z1 != 0 goto label1;

        if $z0 != 0 goto label0;

        $i1 = staticinvoke <android.support.v4.text.BidiFormatter: int getEntryDir(java.lang.String)>($r1);
        if $i1 != 1 goto label1;

     label0:
        $r1 = <android.support.v4.text.BidiFormatter: java.lang.String LRM_STRING>;
        return $r1;

     label1:
        $z1 = $r0.<android.support.v4.text.BidiFormatter: boolean mIsRtlContext>;
        if $z1 == 0 goto label3;

        if $z0 == 0 goto label2;

        $i1 = staticinvoke <android.support.v4.text.BidiFormatter: int getEntryDir(java.lang.String)>($r1);
        if $i1 != -1 goto label3;

     label2:
        $r1 = <android.support.v4.text.BidiFormatter: java.lang.String RLM_STRING>;
        return $r1;

     label3:
        return "";
    }

    public boolean getStereoReset()
    {
        android.support.v4.text.BidiFormatter $r0;
        int $i0;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $i0 = $r0.<android.support.v4.text.BidiFormatter: int mFlags>;
        $i0 = $i0 & 2;
        if $i0 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public boolean isRtl(java.lang.String)
    {
        android.support.v4.text.BidiFormatter $r0;
        java.lang.String $r1;
        android.support.v4.text.TextDirectionHeuristicCompat $r2;
        int $i1;
        boolean $z0;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $r1 := @parameter0: java.lang.String;
        $r2 = $r0.<android.support.v4.text.BidiFormatter: android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();
        $z0 = interfaceinvoke $r2.<android.support.v4.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>($r1, 0, $i1);
        return $z0;
    }

    public boolean isRtlContext()
    {
        android.support.v4.text.BidiFormatter $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $z0 = $r0.<android.support.v4.text.BidiFormatter: boolean mIsRtlContext>;
        return $z0;
    }

    public java.lang.String unicodeWrap(java.lang.String)
    {
        android.support.v4.text.BidiFormatter $r0;
        java.lang.String $r1;
        android.support.v4.text.TextDirectionHeuristicCompat $r2;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $r1 := @parameter0: java.lang.String;
        $r2 = $r0.<android.support.v4.text.BidiFormatter: android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;
        $r1 = virtualinvoke $r0.<android.support.v4.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, 1);
        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String, android.support.v4.text.TextDirectionHeuristicCompat)
    {
        android.support.v4.text.BidiFormatter $r0;
        java.lang.String $r1;
        android.support.v4.text.TextDirectionHeuristicCompat $r2;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.support.v4.text.TextDirectionHeuristicCompat;
        $r1 = virtualinvoke $r0.<android.support.v4.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, 1);
        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String, android.support.v4.text.TextDirectionHeuristicCompat, boolean)
    {
        android.support.v4.text.BidiFormatter $r0;
        java.lang.String $r1, $r4;
        android.support.v4.text.TextDirectionHeuristicCompat $r2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;
        int $i1;
        char $c2;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.support.v4.text.TextDirectionHeuristicCompat;
        $z0 := @parameter2: boolean;
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();
        $z1 = interfaceinvoke $r2.<android.support.v4.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)>($r1, 0, $i1);
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
        $z2 = virtualinvoke $r0.<android.support.v4.text.BidiFormatter: boolean getStereoReset()>();
        if $z2 == 0 goto label1;

        if $z0 == 0 goto label1;

        if $z1 == 0 goto label6;

        $r2 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat RTL>;

     label0:
        $r4 = specialinvoke $r0.<android.support.v4.text.BidiFormatter: java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat)>($r1, $r2);
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label1:
        $z2 = $r0.<android.support.v4.text.BidiFormatter: boolean mIsRtlContext>;
        if $z1 == $z2 goto label8;

        if $z1 == 0 goto label7;

        $c2 = 8235;

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8236);

     label3:
        if $z0 == 0 goto label5;

        if $z1 == 0 goto label9;

        $r2 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat RTL>;

     label4:
        $r4 = specialinvoke $r0.<android.support.v4.text.BidiFormatter: java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat)>($r1, $r2);
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label5:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r4;

     label6:
        $r2 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat LTR>;
        goto label0;

     label7:
        $c2 = 8234;
        goto label2;

     label8:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);
        goto label3;

     label9:
        $r2 = <android.support.v4.text.TextDirectionHeuristicsCompat: android.support.v4.text.TextDirectionHeuristicCompat LTR>;
        goto label4;
    }

    public java.lang.String unicodeWrap(java.lang.String, boolean)
    {
        android.support.v4.text.BidiFormatter $r0;
        java.lang.String $r1;
        boolean $z0;
        android.support.v4.text.TextDirectionHeuristicCompat $r2;

        $r0 := @this: android.support.v4.text.BidiFormatter;
        $r1 := @parameter0: java.lang.String;
        $z0 := @parameter1: boolean;
        $r2 = $r0.<android.support.v4.text.BidiFormatter: android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat>;
        $r1 = virtualinvoke $r0.<android.support.v4.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean)>($r1, $r2, $z0);
        return $r1;
    }
}
