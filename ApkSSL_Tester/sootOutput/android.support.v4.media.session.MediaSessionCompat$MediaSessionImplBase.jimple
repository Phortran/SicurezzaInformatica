class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase extends java.lang.Object implements android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl
{
    private final android.media.AudioManager mAudioManager;
    private android.support.v4.media.session.MediaSessionCompat$Callback mCallback;
    private final android.content.ComponentName mComponentName;
    private final android.content.Context mContext;
    private final android.os.RemoteCallbackList mControllerCallbacks;
    private boolean mDestroyed;
    private android.os.Bundle mExtras;
    private int mFlags;
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler;
    private boolean mIsActive;
    private boolean mIsMbrRegistered;
    private boolean mIsRccRegistered;
    private int mLocalStream;
    private final java.lang.Object mLock;
    private final android.app.PendingIntent mMediaButtonEventReceiver;
    private android.support.v4.media.MediaMetadataCompat mMetadata;
    private final java.lang.String mPackageName;
    private java.util.List mQueue;
    private java.lang.CharSequence mQueueTitle;
    private int mRatingType;
    private final java.lang.Object mRccObj;
    private android.app.PendingIntent mSessionActivity;
    private android.support.v4.media.session.PlaybackStateCompat mState;
    private final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub;
    private final java.lang.String mTag;
    private final android.support.v4.media.session.MediaSessionCompat$Token mToken;
    private android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback;
    private android.support.v4.media.VolumeProviderCompat mVolumeProvider;
    private int mVolumeType;

    public void <init>(android.content.Context, java.lang.String, android.content.ComponentName, android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r10;
        android.content.ComponentName $r3;
        android.app.PendingIntent $r4;
        android.content.Intent $r5;
        java.lang.Object $r6;
        android.os.RemoteCallbackList $r7;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 $r8;
        java.lang.IllegalArgumentException $r9;
        android.media.AudioManager $r11;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub $r12;
        android.support.v4.media.session.MediaSessionCompat$Token $r13;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler $r14;
        android.os.Looper $r15;
        int $i0, $i1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: java.lang.String;
        $r3 := @parameter2: android.content.ComponentName;
        $r4 := @parameter3: android.app.PendingIntent;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r6 = new java.lang.Object;
        specialinvoke $r6.<java.lang.Object: void <init>()>();
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock> = $r6;
        $r7 = new android.os.RemoteCallbackList;
        specialinvoke $r7.<android.os.RemoteCallbackList: void <init>()>();
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks> = $r7;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 0;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;
        $r8 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1;
        specialinvoke $r8.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>($r0);
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback> = $r8;
        if $r3 != null goto label0;

        $r9 = new java.lang.IllegalArgumentException;
        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MediaButtonReceiver component may not be null.");
        throw $r9;

     label0:
        if $r4 != null goto label1;

        $r5 = new android.content.Intent;
        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MEDIA_BUTTON");
        virtualinvoke $r5.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r3);
        $i1 = (int) 0;
        $i0 = (int) 0;
        $r4 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r1, $i1, $r5, $i0);

     label1:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext> = $r1;
        $r10 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mPackageName> = $r10;
        $r6 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");
        $r11 = (android.media.AudioManager) $r6;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager> = $r11;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mTag> = $r2;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName> = $r3;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver> = $r4;
        $r12 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub;
        specialinvoke $r12.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>($r0);
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub> = $r12;
        $r13 = new android.support.v4.media.session.MediaSessionCompat$Token;
        $r12 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub>;
        specialinvoke $r13.<android.support.v4.media.session.MediaSessionCompat$Token: void <init>(java.lang.Object)>($r12);
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken> = $r13;
        $r14 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler;
        $r15 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();
        specialinvoke $r14.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.os.Looper)>($r0, $r15);
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler> = $r14;
        $i1 = (int) 0;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = $i1;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream> = 3;
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 14 goto label3;

        $r6 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: java.lang.Object createRemoteControlClient(android.app.PendingIntent)>($r4);
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj> = $r6;

     label2:
        return;

     label3:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj> = null;
        goto label2;
    }

    static android.os.RemoteCallbackList access$1000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.RemoteCallbackList $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        return $r1;
    }

    static java.lang.String access$1100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mPackageName>;
        return $r1;
    }

    static java.lang.String access$1200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.String mTag>;
        return $r1;
    }

    static java.lang.Object access$1300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.Object $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;
        return $r1;
    }

    static android.app.PendingIntent access$1400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.app.PendingIntent $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mSessionActivity>;
        return $r1;
    }

    static android.media.AudioManager access$1500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.media.AudioManager $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;
        return $r1;
    }

    static void access$1600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase, int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void adjustVolume(int,int)>($i0, $i1);
        return;
    }

    static void access$1700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase, int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setVolumeTo(int,int)>($i0, $i1);
        return;
    }

    static android.support.v4.media.MediaMetadataCompat access$1800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.MediaMetadataCompat $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;
        return $r1;
    }

    static android.support.v4.media.session.PlaybackStateCompat access$1900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition()>();
        return $r1;
    }

    static android.support.v4.media.VolumeProviderCompat access$200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.VolumeProviderCompat $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        return $r1;
    }

    static java.util.List access$2000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.util.List $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.util.List mQueue>;
        return $r1;
    }

    static java.lang.CharSequence access$2100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.CharSequence $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.CharSequence mQueueTitle>;
        return $r1;
    }

    static android.os.Bundle access$2200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.Bundle $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.Bundle mExtras>;
        return $r1;
    }

    static int access$2300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType>;
        return $i0;
    }

    static android.support.v4.media.session.MediaSessionCompat$Callback access$2400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback>;
        return $r1;
    }

    static int access$300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;
        return $i0;
    }

    static int access$400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;
        return $i0;
    }

    static void access$500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase, android.support.v4.media.session.ParcelableVolumeInfo)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter1: android.support.v4.media.session.ParcelableVolumeInfo;
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r1);
        return;
    }

    static android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler access$700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler $r1;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler>;
        return $r1;
    }

    static int access$800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;
        return $i0;
    }

    static boolean access$900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed>;
        return $z0;
    }

    private void adjustVolume(int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1, $i2;
        android.support.v4.media.VolumeProviderCompat $r1;
        android.media.AudioManager $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;
        if $i2 != 2 goto label1;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void onAdjustVolume(int)>($i0);

     label0:
        return;

     label1:
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;
        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;
        virtualinvoke $r2.<android.media.AudioManager: void adjustStreamVolume(int,int,int)>($i0, $i2, $i1);
        goto label0;
    }

    private android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.PlaybackStateCompat$Builder $r2;
        android.support.v4.media.MediaMetadataCompat $r3;
        long $l0, $l1, $l2, $l3;
        java.lang.Object $r4;
        android.support.v4.media.session.PlaybackStateCompat $r5, $r6;
        boolean $z0;
        int $i4;
        byte $b5;
        float $f0, $f1;
        java.lang.Throwable $r8;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $l2 = -1L;
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;
        entermonitor $r4;

     label0:
        $r6 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;
        if $r3 == null goto label1;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;
        $z0 = virtualinvoke $r3.<android.support.v4.media.MediaMetadataCompat: boolean containsKey(java.lang.String)>("android.media.metadata.DURATION");
        if $z0 == 0 goto label1;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;
        $l2 = virtualinvoke $r3.<android.support.v4.media.MediaMetadataCompat: long getLong(java.lang.String)>("android.media.metadata.DURATION");

     label1:
        exitmonitor $r4;

     label2:
        $r5 = null;
        if $r6 == null goto label5;

        $i4 = virtualinvoke $r6.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();
        if $i4 == 3 goto label3;

        $i4 = virtualinvoke $r6.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();
        if $i4 == 4 goto label3;

        $i4 = virtualinvoke $r6.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();
        if $i4 != 5 goto label5;

     label3:
        $l0 = virtualinvoke $r6.<android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()>();
        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();
        $b5 = $l0 cmp 0L;
        if $b5 <= 0 goto label5;

        $f0 = virtualinvoke $r6.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();
        $l3 = $l1 - $l0;
        $f1 = (float) $l3;
        $f1 = $f0 * $f1;
        $l0 = (long) $f1;
        $l3 = virtualinvoke $r6.<android.support.v4.media.session.PlaybackStateCompat: long getPosition()>();
        $l0 = $l0 + $l3;
        $b5 = $l2 cmp 0L;
        if $b5 < 0 goto label9;

        $b5 = $l0 cmp $l2;
        if $b5 <= 0 goto label9;

        $l0 = $l2;

     label4:
        $r2 = new android.support.v4.media.session.PlaybackStateCompat$Builder;
        specialinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat$Builder: void <init>(android.support.v4.media.session.PlaybackStateCompat)>($r6);
        $i4 = virtualinvoke $r6.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();
        $f1 = virtualinvoke $r6.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();
        virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)>($i4, $l0, $f1, $l1);
        $r5 = virtualinvoke $r2.<android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()>();

     label5:
        if $r5 != null goto label10;

        return $r6;

     label6:
        $r8 := @caughtexception;

     label7:
        exitmonitor $r4;

     label8:
        throw $r8;

     label9:
        $b5 = $l0 cmp 0L;
        if $b5 >= 0 goto label4;

        $l0 = 0L;
        goto label4;

     label10:
        return $r5;

        catch java.lang.Throwable from label0 to label2 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void sendEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;
        android.os.IInterface $r3;
        int $i0;
        android.os.RemoteCallbackList $r4;
        android.support.v4.media.session.IMediaControllerCallback $r5;
        android.os.RemoteException $r6;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.os.Bundle;
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();
        $i0 = $i0 + -1;

     label0:
        if $i0 < 0 goto label3;

        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $r3 = virtualinvoke $r4.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);
        $r5 = (android.support.v4.media.session.IMediaControllerCallback) $r3;

     label1:
        interfaceinvoke $r5.<android.support.v4.media.session.IMediaControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>($r1, $r2);

     label2:
        $i0 = $i0 + -1;
        goto label0;

     label3:
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        virtualinvoke $r4.<android.os.RemoteCallbackList: void finishBroadcast()>();
        return;

     label4:
        $r6 := @caughtexception;
        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void sendMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.os.IInterface $r2;
        int $i0;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.IMediaControllerCallback $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();
        $i0 = $i0 + -1;

     label0:
        if $i0 < 0 goto label3;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $r2 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);
        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label1:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)>($r1);

     label2:
        $i0 = $i0 + -1;
        goto label0;

     label3:
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();
        return;

     label4:
        $r5 := @caughtexception;
        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void sendQueue(java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.util.List $r1;
        android.os.IInterface $r2;
        int $i0;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.IMediaControllerCallback $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: java.util.List;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();
        $i0 = $i0 + -1;

     label0:
        if $i0 < 0 goto label3;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $r2 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);
        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label1:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onQueueChanged(java.util.List)>($r1);

     label2:
        $i0 = $i0 + -1;
        goto label0;

     label3:
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();
        return;

     label4:
        $r5 := @caughtexception;
        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void sendQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.CharSequence $r1;
        android.os.IInterface $r2;
        int $i0;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.IMediaControllerCallback $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: java.lang.CharSequence;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();
        $i0 = $i0 + -1;

     label0:
        if $i0 < 0 goto label3;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $r2 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);
        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label1:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>($r1);

     label2:
        $i0 = $i0 + -1;
        goto label0;

     label3:
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();
        return;

     label4:
        $r5 := @caughtexception;
        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void sendSessionDestroyed()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.IInterface $r1;
        int $i0;
        android.os.RemoteCallbackList $r2;
        android.support.v4.media.session.IMediaControllerCallback $r3;
        android.os.RemoteException $r4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $i0 = virtualinvoke $r2.<android.os.RemoteCallbackList: int beginBroadcast()>();
        $i0 = $i0 + -1;

     label0:
        if $i0 < 0 goto label3;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $r1 = virtualinvoke $r2.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);
        $r3 = (android.support.v4.media.session.IMediaControllerCallback) $r1;

     label1:
        interfaceinvoke $r3.<android.support.v4.media.session.IMediaControllerCallback: void onSessionDestroyed()>();

     label2:
        $i0 = $i0 + -1;
        goto label0;

     label3:
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        virtualinvoke $r2.<android.os.RemoteCallbackList: void finishBroadcast()>();
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        virtualinvoke $r2.<android.os.RemoteCallbackList: void kill()>();
        return;

     label4:
        $r4 := @caughtexception;
        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void sendState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        android.os.IInterface $r2;
        int $i0;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.IMediaControllerCallback $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();
        $i0 = $i0 + -1;

     label0:
        if $i0 < 0 goto label3;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $r2 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);
        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label1:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)>($r1);

     label2:
        $i0 = $i0 + -1;
        goto label0;

     label3:
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();
        return;

     label4:
        $r5 := @caughtexception;
        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;
        android.os.IInterface $r2;
        int $i0;
        android.os.RemoteCallbackList $r3;
        android.support.v4.media.session.IMediaControllerCallback $r4;
        android.os.RemoteException $r5;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.support.v4.media.session.ParcelableVolumeInfo;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $i0 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();
        $i0 = $i0 + -1;

     label0:
        if $i0 < 0 goto label3;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        $r2 = virtualinvoke $r3.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>($i0);
        $r4 = (android.support.v4.media.session.IMediaControllerCallback) $r2;

     label1:
        interfaceinvoke $r4.<android.support.v4.media.session.IMediaControllerCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r1);

     label2:
        $i0 = $i0 + -1;
        goto label0;

     label3:
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.RemoteCallbackList mControllerCallbacks>;
        virtualinvoke $r3.<android.os.RemoteCallbackList: void finishBroadcast()>();
        return;

     label4:
        $r5 := @caughtexception;
        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void setVolumeTo(int, int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i1, $i2;
        android.support.v4.media.VolumeProviderCompat $r1;
        android.media.AudioManager $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;
        if $i2 != 2 goto label1;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void onSetVolumeTo(int)>($i0);

     label0:
        return;

     label1:
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;
        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;
        virtualinvoke $r2.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i2, $i0, $i1);
        goto label0;
    }

    private boolean update()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        boolean $z0, $z1, $z3;
        int $i2;
        android.content.Context $r1;
        android.app.PendingIntent $r2;
        java.lang.Object $r3;
        android.content.ComponentName $r4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $z0 = 0;
        $z1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;
        if $z1 == 0 goto label8;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 < 8 goto label1;

        $z1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;
        if $z1 != 0 goto label4;

        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;
        $i2 = $i2 & 1;
        if $i2 == 0 goto label4;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 < 18 goto label3;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void registerMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent)>($r1, $r2);

     label0:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 1;

     label1:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 < 14 goto label2;

        $z1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;
        if $z1 != 0 goto label7;

        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;
        $i2 = $i2 & 2;
        if $i2 == 0 goto label7;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void registerRemoteControlClient(android.content.Context,java.lang.Object)>($r1, $r3);
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 1;
        $z0 = 1;

     label2:
        return $z0;

     label3:
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi8: void registerMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)>($r1, $r4);
        goto label0;

     label4:
        $z1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;
        if $z1 == 0 goto label1;

        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;
        $i2 = $i2 & 1;
        if $i2 != 0 goto label1;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 < 18 goto label6;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent)>($r1, $r2);

     label5:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;
        goto label1;

     label6:
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi8: void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)>($r1, $r4);
        goto label5;

     label7:
        $z3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;
        if $z3 == 0 goto label2;

        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags>;
        $i2 = $i2 & 2;
        if $i2 != 0 goto label2;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void unregisterRemoteControlClient(android.content.Context,java.lang.Object)>($r1, $r3);
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;
        return 0;

     label8:
        $z3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered>;
        if $z3 == 0 goto label10;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 < 18 goto label11;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mMediaButtonEventReceiver>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent)>($r1, $r2);

     label9:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsMbrRegistered> = 0;

     label10:
        $z3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered>;
        if $z3 == 0 goto label2;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void unregisterRemoteControlClient(android.content.Context,java.lang.Object)>($r1, $r3);
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsRccRegistered> = 0;
        return 0;

     label11:
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.Context mContext>;
        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.content.ComponentName mComponentName>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi8: void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName)>($r1, $r4);
        goto label9;
    }

    public java.lang.Object getMediaSession()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        return null;
    }

    public java.lang.Object getRemoteControlClient()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.Object $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        return $r1;
    }

    public android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$Token $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Token mToken>;
        return $r1;
    }

    public boolean isActive()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        boolean $z0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;
        return $z0;
    }

    public void release()
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = 0;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mDestroyed> = 1;
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendSessionDestroyed()>();
        return;
    }

    public void sendSessionEvent(java.lang.String, android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.String $r1;
        android.os.Bundle $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: java.lang.String;
        $r2 := @parameter1: android.os.Bundle;
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendEvent(java.lang.String,android.os.Bundle)>($r1, $r2);
        return;
    }

    public void setActive(boolean)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        boolean $z0, $z1;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.support.v4.media.session.PlaybackStateCompat $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $z0 := @parameter0: boolean;
        $z1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;
        if $z0 != $z1 goto label1;

     label0:
        return;

     label1:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive> = $z0;
        $z1 = specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();
        if $z1 == 0 goto label0;

        $r1 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata>;
        virtualinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;
        virtualinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)>($r2);
        goto label0;
    }

    public void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback, android.os.Handler)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.MediaSessionCompat$Callback $r1, $r5;
        android.os.Handler $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2 $r3;
        java.lang.Object $r4, $r6;
        int $i2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$Callback;
        $r2 := @parameter1: android.os.Handler;
        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback>;
        if $r1 != $r5 goto label1;

     label0:
        return;

     label1:
        if $r1 == null goto label2;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 >= 18 goto label5;

     label2:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 < 18 goto label3;

        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object)>($r4, null);

     label3:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 < 19 goto label4;

        $r4 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object)>($r4, null);

     label4:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.MediaSessionCompat$Callback mCallback> = $r1;
        goto label0;

     label5:
        if $r2 != null goto label6;

        $r2 = new android.os.Handler;
        specialinvoke $r2.<android.os.Handler: void <init>()>();

     label6:
        $r3 = new android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2;
        specialinvoke $r3.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2: void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.MediaSessionCompat$Callback)>($r0, $r1);
        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 < 18 goto label7;

        $r4 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: java.lang.Object createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)>($r3);
        $r6 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object)>($r6, $r4);

     label7:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;
        if $i2 < 19 goto label4;

        $r4 = staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: java.lang.Object createMetadataUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback)>($r3);
        $r6 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object)>($r6, $r4);
        goto label4;
    }

    public void setExtras(android.os.Bundle)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.os.Bundle $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.os.Bundle;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.os.Bundle mExtras> = $r1;
        return;
    }

    public void setFlags(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 := @parameter0: int;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;
        entermonitor $r2;

     label0:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mFlags> = $i0;
        exitmonitor $r2;

     label1:
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean update()>();
        return;

     label2:
        $r1 := @caughtexception;

     label3:
        exitmonitor $r2;

     label4:
        throw $r1;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void setMediaButtonReceiver(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.app.PendingIntent $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.app.PendingIntent;
        return;
    }

    public void setMetadata(android.support.v4.media.MediaMetadataCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.MediaMetadataCompat $r1;
        android.os.Bundle $r2;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        int $i1;
        android.support.v4.media.session.PlaybackStateCompat $r5;
        long $l2;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.support.v4.media.MediaMetadataCompat;
        $r2 = null;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;
        entermonitor $r3;

     label0:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.MediaMetadataCompat mMetadata> = $r1;
        exitmonitor $r3;

     label1:
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendMetadata(android.support.v4.media.MediaMetadataCompat)>($r1);
        $z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;
        if $z0 != 0 goto label6;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor $r3;

     label5:
        throw $r4;

     label6:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;
        if $i1 < 19 goto label11;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        if $r1 != null goto label9;

     label7:
        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;
        if $r5 != null goto label10;

        $l2 = 0L;

     label8:
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setMetadata(java.lang.Object,android.os.Bundle,long)>($r3, $r2, $l2);
        goto label2;

     label9:
        $r2 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()>();
        goto label7;

     label10:
        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState>;
        $l2 = virtualinvoke $r5.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();
        goto label8;

     label11:
        $i1 = <android.os.Build$VERSION: int SDK_INT>;
        if $i1 < 14 goto label2;

        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        if $r1 != null goto label13;

     label12:
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setMetadata(java.lang.Object,android.os.Bundle)>($r3, $r2);
        goto label2;

     label13:
        $r2 = virtualinvoke $r1.<android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()>();
        goto label12;

        catch java.lang.Throwable from label0 to label1 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.session.PlaybackStateCompat $r1;
        boolean $z0;
        java.lang.Object $r2;
        long $l0, $l4;
        float $f0;
        int $i3;
        java.lang.Throwable $r3;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.support.v4.media.session.PlaybackStateCompat;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;
        entermonitor $r2;

     label0:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.session.PlaybackStateCompat mState> = $r1;
        exitmonitor $r2;

     label1:
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendState(android.support.v4.media.session.PlaybackStateCompat)>($r1);
        $z0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: boolean mIsActive>;
        if $z0 != 0 goto label6;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor $r2;

     label5:
        throw $r3;

     label6:
        if $r1 != null goto label7;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;
        if $i3 < 14 goto label2;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setState(java.lang.Object,int)>($r2, 0);
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setTransportControlFlags(java.lang.Object,long)>($r2, 0L);
        goto label2;

     label7:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;
        if $i3 < 18 goto label9;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        $i3 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();
        $l4 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getPosition()>();
        $f0 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()>();
        $l0 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()>();
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setState(java.lang.Object,int,long,float,long)>($r2, $i3, $l4, $f0, $l0);

     label8:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;
        if $i3 < 19 goto label10;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        $l4 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi19: void setTransportControlFlags(java.lang.Object,long)>($r2, $l4);
        goto label2;

     label9:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;
        if $i3 < 14 goto label8;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        $i3 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: int getState()>();
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setState(java.lang.Object,int)>($r2, $i3);
        goto label8;

     label10:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;
        if $i3 < 18 goto label11;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        $l4 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi18: void setTransportControlFlags(java.lang.Object,long)>($r2, $l4);
        goto label2;

     label11:
        $i3 = <android.os.Build$VERSION: int SDK_INT>;
        if $i3 < 14 goto label2;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mRccObj>;
        $l4 = virtualinvoke $r1.<android.support.v4.media.session.PlaybackStateCompat: long getActions()>();
        staticinvoke <android.support.v4.media.session.MediaSessionCompatApi14: void setTransportControlFlags(java.lang.Object,long)>($r2, $l4);
        goto label2;

        catch java.lang.Throwable from label0 to label1 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setPlaybackToLocal(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0, $i2, $i3, $i4;
        android.support.v4.media.session.ParcelableVolumeInfo $r1;
        android.support.v4.media.VolumeProviderCompat $r2;
        android.media.AudioManager $r3;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 := @parameter0: int;
        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        virtualinvoke $r2.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>(null);

     label0:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 1;
        $r1 = new android.support.v4.media.session.ParcelableVolumeInfo;
        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;
        $i3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;
        $i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;
        $i4 = virtualinvoke $r3.<android.media.AudioManager: int getStreamMaxVolume(int)>($i0);
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.media.AudioManager mAudioManager>;
        $i0 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;
        $i0 = virtualinvoke $r3.<android.media.AudioManager: int getStreamVolume(int)>($i0);
        specialinvoke $r1.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i2, $i3, 2, $i4, $i0);
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r1);
        return;
    }

    public void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.support.v4.media.VolumeProviderCompat $r1, $r5;
        android.support.v4.media.session.ParcelableVolumeInfo $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0, $i2, $i3, $i4, $i5;
        android.support.v4.media.VolumeProviderCompat$Callback $r6;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.support.v4.media.VolumeProviderCompat;
        if $r1 != null goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("volumeProvider may not be null");
        throw $r3;

     label0:
        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        if $r5 == null goto label1;

        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        virtualinvoke $r5.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>(null);

     label1:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType> = 2;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider> = $r1;
        $r2 = new android.support.v4.media.session.ParcelableVolumeInfo;
        $i2 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mVolumeType>;
        $i3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mLocalStream>;
        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        $i0 = virtualinvoke $r5.<android.support.v4.media.VolumeProviderCompat: int getVolumeControl()>();
        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        $i4 = virtualinvoke $r5.<android.support.v4.media.VolumeProviderCompat: int getMaxVolume()>();
        $r5 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat mVolumeProvider>;
        $i5 = virtualinvoke $r5.<android.support.v4.media.VolumeProviderCompat: int getCurrentVolume()>();
        specialinvoke $r2.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i2, $i3, $i0, $i4, $i5);
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)>($r2);
        $r6 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback>;
        virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: void setCallback(android.support.v4.media.VolumeProviderCompat$Callback)>($r6);
        return;
    }

    public void setQueue(java.util.List)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.util.List $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: java.util.List;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.util.List mQueue> = $r1;
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueue(java.util.List)>($r1);
        return;
    }

    public void setQueueTitle(java.lang.CharSequence)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: java.lang.CharSequence;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.CharSequence mQueueTitle> = $r1;
        specialinvoke $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void sendQueueTitle(java.lang.CharSequence)>($r1);
        return;
    }

    public void setRatingType(int)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        int $i0;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $i0 := @parameter0: int;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int mRatingType> = $i0;
        return;
    }

    public void setSessionActivity(android.app.PendingIntent)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r0;
        android.app.PendingIntent $r1;
        java.lang.Throwable $r2;
        java.lang.Object $r3;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r1 := @parameter0: android.app.PendingIntent;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: java.lang.Object mLock>;
        entermonitor $r3;

     label0:
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.app.PendingIntent mSessionActivity> = $r1;
        exitmonitor $r3;
        return;

     label1:
        $r2 := @caughtexception;
        exitmonitor $r3;

     label2:
        throw $r2;

        catch java.lang.Throwable from label0 to label2 with label1;
    }
}
