class android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 extends android.support.v4.media.VolumeProviderCompat$Callback
{
    final android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0;

    void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 $r0;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r1;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1;
        $r1 := @parameter0: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase;
        $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0> = $r1;
        specialinvoke $r0.<android.support.v4.media.VolumeProviderCompat$Callback: void <init>()>();
        return;
    }

    public void onVolumeChanged(android.support.v4.media.VolumeProviderCompat)
    {
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 $r0;
        android.support.v4.media.VolumeProviderCompat $r1, $r4;
        android.support.v4.media.session.ParcelableVolumeInfo $r2;
        android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase $r3;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1;
        $r1 := @parameter0: android.support.v4.media.VolumeProviderCompat;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0>;
        $r4 = staticinvoke <android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: android.support.v4.media.VolumeProviderCompat access$200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>($r3);
        if $r4 == $r1 goto label1;

     label0:
        return;

     label1:
        $r2 = new android.support.v4.media.session.ParcelableVolumeInfo;
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0>;
        $i3 = staticinvoke <android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int access$300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>($r3);
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0>;
        $i4 = staticinvoke <android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: int access$400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase)>($r3);
        $i0 = virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: int getVolumeControl()>();
        $i1 = virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: int getMaxVolume()>();
        $i2 = virtualinvoke $r1.<android.support.v4.media.VolumeProviderCompat: int getCurrentVolume()>();
        specialinvoke $r2.<android.support.v4.media.session.ParcelableVolumeInfo: void <init>(int,int,int,int,int)>($i3, $i4, $i0, $i1, $i2);
        $r3 = $r0.<android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1: android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0>;
        staticinvoke <android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase: void access$500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.ParcelableVolumeInfo)>($r3, $r2);
        goto label0;
    }
}
