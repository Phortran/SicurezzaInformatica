public class android.support.v7.widget.SwitchCompat extends android.widget.CompoundButton
{
    private static final java.lang.String ACCESSIBILITY_EVENT_CLASS_NAME;
    private static final int[] CHECKED_STATE_SET;
    private static final int MONOSPACE;
    private static final int SANS;
    private static final int SERIF;
    private static final int THUMB_ANIMATION_DURATION;
    private static final int TOUCH_MODE_DOWN;
    private static final int TOUCH_MODE_DRAGGING;
    private static final int TOUCH_MODE_IDLE;
    private int mMinFlingVelocity;
    private android.text.Layout mOffLayout;
    private android.text.Layout mOnLayout;
    private android.view.animation.Animation mPositionAnimator;
    private boolean mShowText;
    private boolean mSplitTrack;
    private int mSwitchBottom;
    private int mSwitchHeight;
    private int mSwitchLeft;
    private int mSwitchMinWidth;
    private int mSwitchPadding;
    private int mSwitchRight;
    private int mSwitchTop;
    private android.text.method.TransformationMethod mSwitchTransformationMethod;
    private int mSwitchWidth;
    private final android.graphics.Rect mTempRect;
    private android.content.res.ColorStateList mTextColors;
    private java.lang.CharSequence mTextOff;
    private java.lang.CharSequence mTextOn;
    private android.text.TextPaint mTextPaint;
    private android.graphics.drawable.Drawable mThumbDrawable;
    private float mThumbPosition;
    private int mThumbTextPadding;
    private int mThumbWidth;
    private final android.support.v7.internal.widget.TintManager mTintManager;
    private int mTouchMode;
    private int mTouchSlop;
    private float mTouchX;
    private float mTouchY;
    private android.graphics.drawable.Drawable mTrackDrawable;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];
        $r0[0] = 16842912;
        <android.support.v7.widget.SwitchCompat: int[] CHECKED_STATE_SET> = $r0;
        return;
    }

    public void <init>(android.content.Context)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.content.Context $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.content.Context;
        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        $i0 = <android.support.v7.appcompat.R$attr: int switchStyle>;
        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);
        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0, i1;
        android.support.v7.internal.widget.TintTypedArray $r3;
        android.view.ViewConfiguration $r4;
        android.content.res.Resources $r5;
        android.view.VelocityTracker $r6;
        android.util.DisplayMetrics $r7;
        boolean $z1;
        android.graphics.Rect $r8;
        android.text.TextPaint $r9;
        float $f0;
        int[] $r10;
        android.graphics.drawable.Drawable $r11;
        java.lang.CharSequence $r12;
        android.support.v7.internal.widget.TintManager $r13;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.content.Context;
        $r2 := @parameter1: android.util.AttributeSet;
        $i0 := @parameter2: int;
        specialinvoke $r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0);
        $r6 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();
        $r0.<android.support.v7.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker> = $r6;
        $r8 = new android.graphics.Rect;
        specialinvoke $r8.<android.graphics.Rect: void <init>()>();
        $r0.<android.support.v7.widget.SwitchCompat: android.graphics.Rect mTempRect> = $r8;
        $r9 = new android.text.TextPaint;
        i1 = (int) 1;
        specialinvoke $r9.<android.text.TextPaint: void <init>(int)>(i1);
        $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint> = $r9;
        $r5 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: android.content.res.Resources getResources()>();
        $r9 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        $r7 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f0 = $r7.<android.util.DisplayMetrics: float density>;
        $r9.<android.text.TextPaint: float density> = $f0;
        $r10 = <android.support.v7.appcompat.R$styleable: int[] SwitchCompat>;
        i1 = (int) 0;
        $r3 = staticinvoke <android.support.v7.internal.widget.TintTypedArray: android.support.v7.internal.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)>($r1, $r2, $r10, $i0, i1);
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_android_thumb>;
        $r11 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);
        $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable> = $r11;
        $r11 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r11 == null goto label0;

        $r11 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        virtualinvoke $r11.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

     label0:
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_track>;
        $r11 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)>($i0);
        $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable> = $r11;
        $r11 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r11 == null goto label1;

        $r11 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        virtualinvoke $r11.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>($r0);

     label1:
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_android_textOn>;
        $r12 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i0);
        $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOn> = $r12;
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_android_textOff>;
        $r12 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: java.lang.CharSequence getText(int)>($i0);
        $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOff> = $r12;
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_showText>;
        $z1 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i0, 1);
        $r0.<android.support.v7.widget.SwitchCompat: boolean mShowText> = $z1;
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_thumbTextPadding>;
        i1 = (int) 0;
        $i0 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: int getDimensionPixelSize(int,int)>($i0, i1);
        $r0.<android.support.v7.widget.SwitchCompat: int mThumbTextPadding> = $i0;
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_switchMinWidth>;
        i1 = (int) 0;
        $i0 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: int getDimensionPixelSize(int,int)>($i0, i1);
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchMinWidth> = $i0;
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_switchPadding>;
        i1 = (int) 0;
        $i0 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: int getDimensionPixelSize(int,int)>($i0, i1);
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchPadding> = $i0;
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_splitTrack>;
        $z1 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: boolean getBoolean(int,boolean)>($i0, 0);
        $r0.<android.support.v7.widget.SwitchCompat: boolean mSplitTrack> = $z1;
        $i0 = <android.support.v7.appcompat.R$styleable: int SwitchCompat_switchTextAppearance>;
        i1 = (int) 0;
        $i0 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: int getResourceId(int,int)>($i0, i1);
        if $i0 == 0 goto label2;

        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setSwitchTextAppearance(android.content.Context,int)>($r1, $i0);

     label2:
        $r13 = virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: android.support.v7.internal.widget.TintManager getTintManager()>();
        $r0.<android.support.v7.widget.SwitchCompat: android.support.v7.internal.widget.TintManager mTintManager> = $r13;
        virtualinvoke $r3.<android.support.v7.internal.widget.TintTypedArray: void recycle()>();
        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r1);
        $i0 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledTouchSlop()>();
        $r0.<android.support.v7.widget.SwitchCompat: int mTouchSlop> = $i0;
        $i0 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();
        $r0.<android.support.v7.widget.SwitchCompat: int mMinFlingVelocity> = $i0;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void refreshDrawableState()>();
        $z1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean isChecked()>();
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setChecked(boolean)>($z1);
        return;
    }

    static void access$000(android.support.v7.widget.SwitchCompat, float)
    {
        android.support.v7.widget.SwitchCompat $r0;
        float $f0;

        $r0 := @parameter0: android.support.v7.widget.SwitchCompat;
        $f0 := @parameter1: float;
        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void setThumbPosition(float)>($f0);
        return;
    }

    private void animateThumbToCheckedState(boolean)
    {
        android.support.v7.widget.SwitchCompat $r0;
        boolean $z0;
        float $f0, $f1;
        android.support.v7.widget.SwitchCompat$1 $r1;
        android.view.animation.Animation $r2;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 := @parameter0: boolean;
        $f1 = $r0.<android.support.v7.widget.SwitchCompat: float mThumbPosition>;
        if $z0 == 0 goto label1;

        $f0 = 1.0F;

     label0:
        $f0 = $f0 - $f1;
        $r1 = new android.support.v7.widget.SwitchCompat$1;
        specialinvoke $r1.<android.support.v7.widget.SwitchCompat$1: void <init>(android.support.v7.widget.SwitchCompat,float,float)>($r0, $f1, $f0);
        $r0.<android.support.v7.widget.SwitchCompat: android.view.animation.Animation mPositionAnimator> = $r1;
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.view.animation.Animation mPositionAnimator>;
        virtualinvoke $r2.<android.view.animation.Animation: void setDuration(long)>(250L);
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.view.animation.Animation mPositionAnimator>;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void startAnimation(android.view.animation.Animation)>($r2);
        return;

     label1:
        $f0 = 0.0F;
        goto label0;
    }

    private void cancelPositionAnimator()
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.view.animation.Animation $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.view.animation.Animation mPositionAnimator>;
        if $r1 == null goto label0;

        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void clearAnimation()>();
        $r0.<android.support.v7.widget.SwitchCompat: android.view.animation.Animation mPositionAnimator> = null;

     label0:
        return;
    }

    private void cancelSuperTouch(android.view.MotionEvent)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.view.MotionEvent $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.view.MotionEvent;
        $r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>($r1);
        virtualinvoke $r1.<android.view.MotionEvent: void setAction(int)>(3);
        specialinvoke $r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>($r1);
        virtualinvoke $r1.<android.view.MotionEvent: void recycle()>();
        return;
    }

    private static float constrain(float, float, float)
    {
        float $f0, $f1, $f2;
        byte $b0;

        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $f2 := @parameter2: float;
        $b0 = $f0 cmpg $f1;
        if $b0 >= 0 goto label0;

        return $f1;

     label0:
        $b0 = $f0 cmpl $f2;
        if $b0 <= 0 goto label1;

        return $f2;

     label1:
        return $f0;
    }

    private boolean getTargetCheckedState()
    {
        android.support.v7.widget.SwitchCompat $r0;
        float $f0;
        byte $b0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $f0 = $r0.<android.support.v7.widget.SwitchCompat: float mThumbPosition>;
        $b0 = $f0 cmpl 0.5F;
        if $b0 <= 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    private int getThumbOffset()
    {
        android.support.v7.widget.SwitchCompat $r0;
        float $f0, $f1;
        boolean $z0;
        int $i0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 = staticinvoke <android.support.v7.internal.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>($r0);
        if $z0 == 0 goto label1;

        $f0 = $r0.<android.support.v7.widget.SwitchCompat: float mThumbPosition>;
        $f0 = 1.0F - $f0;

     label0:
        $i0 = specialinvoke $r0.<android.support.v7.widget.SwitchCompat: int getThumbScrollRange()>();
        $f1 = (float) $i0;
        $f1 = $f1 * $f0;
        $f1 = $f1 + 0.5F;
        $i0 = (int) $f1;
        return $i0;

     label1:
        $f0 = $r0.<android.support.v7.widget.SwitchCompat: float mThumbPosition>;
        goto label0;
    }

    private int getThumbScrollRange()
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.Rect $r1, $r2;
        android.graphics.drawable.Drawable $r3;
        int $i0, $i1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r3 == null goto label2;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.Rect mTempRect>;
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r3 == null goto label1;

        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        $r1 = staticinvoke <android.support.v7.internal.widget.DrawableUtils: android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)>($r3);

     label0:
        $i1 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchWidth>;
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mThumbWidth>;
        $i1 = $i1 - $i0;
        $i0 = $r2.<android.graphics.Rect: int left>;
        $i1 = $i1 - $i0;
        $i0 = $r2.<android.graphics.Rect: int right>;
        $i1 = $i1 - $i0;
        $i0 = $r1.<android.graphics.Rect: int left>;
        $i1 = $i1 - $i0;
        $i0 = $r1.<android.graphics.Rect: int right>;
        $i1 = $i1 - $i0;
        return $i1;

     label1:
        $r1 = <android.support.v7.internal.widget.DrawableUtils: android.graphics.Rect INSETS_NONE>;
        goto label0;

     label2:
        return 0;
    }

    private boolean hitThumb(float, float)
    {
        android.support.v7.widget.SwitchCompat $r0;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.Drawable $r1;
        android.graphics.Rect $r2;
        byte $b5;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r1 != null goto label1;

     label0:
        return 0;

     label1:
        $i1 = specialinvoke $r0.<android.support.v7.widget.SwitchCompat: int getThumbOffset()>();
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.Rect mTempRect>;
        virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);
        $i3 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchTop>;
        $i2 = $r0.<android.support.v7.widget.SwitchCompat: int mTouchSlop>;
        $i3 = $i3 - $i2;
        $i2 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchLeft>;
        $i2 = $i2 + $i1;
        $i1 = $r0.<android.support.v7.widget.SwitchCompat: int mTouchSlop>;
        $i1 = $i2 - $i1;
        $i2 = $r0.<android.support.v7.widget.SwitchCompat: int mThumbWidth>;
        $i2 = $i2 + $i1;
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.Rect mTempRect>;
        $i0 = $r2.<android.graphics.Rect: int left>;
        $i2 = $i2 + $i0;
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.Rect mTempRect>;
        $i0 = $r2.<android.graphics.Rect: int right>;
        $i2 = $i2 + $i0;
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mTouchSlop>;
        $i2 = $i2 + $i0;
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchBottom>;
        $i4 = $r0.<android.support.v7.widget.SwitchCompat: int mTouchSlop>;
        $i0 = $i0 + $i4;
        $f2 = (float) $i1;
        $b5 = $f0 cmpl $f2;
        if $b5 <= 0 goto label0;

        $f2 = (float) $i2;
        $b5 = $f0 cmpg $f2;
        if $b5 >= 0 goto label0;

        $f2 = (float) $i3;
        $b5 = $f1 cmpl $f2;
        if $b5 <= 0 goto label0;

        $f2 = (float) $i0;
        $b5 = $f1 cmpg $f2;
        if $b5 >= 0 goto label0;

        return 1;
    }

    private android.text.Layout makeLayout(java.lang.CharSequence)
    {
        android.support.v7.widget.SwitchCompat $r0;
        java.lang.CharSequence $r1;
        android.text.method.TransformationMethod $r2;
        android.text.TextPaint $r3, $r4;
        double $d0;
        float $f1;
        android.text.StaticLayout $r5;
        int $i0;
        android.text.Layout$Alignment $r6;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: java.lang.CharSequence;
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod>;
        if $r2 == null goto label2;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod>;
        $r1 = interfaceinvoke $r2.<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>($r1, $r0);

     label0:
        $r5 = new android.text.StaticLayout;
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        if $r1 == null goto label3;

        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        $f1 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>($r1, $r4);
        $d0 = (double) $f1;
        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);
        $i0 = (int) $d0;

     label1:
        $r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;
        specialinvoke $r5.<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>($r1, $r3, $i0, $r6, 1.0F, 0.0F, 1);
        return $r5;

     label2:
        goto label0;

     label3:
        $i0 = 0;
        goto label1;
    }

    private void setSwitchTypefaceByIndex(int, int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0, $i1;
        android.graphics.Typeface $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $r1 = null;
        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label0;
        };

     label0:
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface,int)>($r1, $i1);
        return;

     label1:
        $r1 = <android.graphics.Typeface: android.graphics.Typeface SANS_SERIF>;
        goto label0;

     label2:
        $r1 = <android.graphics.Typeface: android.graphics.Typeface SERIF>;
        goto label0;

     label3:
        $r1 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;
        goto label0;
    }

    private void setThumbPosition(float)
    {
        android.support.v7.widget.SwitchCompat $r0;
        float $f0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $f0 := @parameter0: float;
        $r0.<android.support.v7.widget.SwitchCompat: float mThumbPosition> = $f0;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void invalidate()>();
        return;
    }

    private void stopDrag(android.view.MotionEvent)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.view.MotionEvent $r1;
        boolean $z0, $z1;
        float $f0, $f2, $f3;
        int $i0, i2;
        android.view.VelocityTracker $r2;
        byte $b1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.view.MotionEvent;
        $i0 = (int) 0;
        $r0.<android.support.v7.widget.SwitchCompat: int mTouchMode> = $i0;
        $i0 = virtualinvoke $r1.<android.view.MotionEvent: int getAction()>();
        i2 = (int) 1;
        if $i0 != i2 goto label3;

        $z1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean isEnabled()>();
        if $z1 == 0 goto label3;

        $z0 = 1;

     label0:
        $z1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean isChecked()>();
        if $z0 == 0 goto label8;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r2.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker>;
        $f0 = virtualinvoke $r2.<android.view.VelocityTracker: float getXVelocity()>();
        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f0);
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mMinFlingVelocity>;
        $f3 = (float) $i0;
        $b1 = $f2 cmpl $f3;
        if $b1 <= 0 goto label7;

        $z0 = staticinvoke <android.support.v7.internal.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>($r0);
        if $z0 == 0 goto label5;

        $b1 = $f0 cmpg 0.0F;
        if $b1 >= 0 goto label4;

        $z0 = 1;

     label1:
        if $z0 == $z1 goto label2;

        i2 = (int) 0;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void playSoundEffect(int)>(i2);
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setChecked(boolean)>($z0);

     label2:
        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void cancelSuperTouch(android.view.MotionEvent)>($r1);
        return;

     label3:
        $z0 = 0;
        goto label0;

     label4:
        $z0 = 0;
        goto label1;

     label5:
        $b1 = $f0 cmpl 0.0F;
        if $b1 <= 0 goto label6;

        $z0 = 1;
        goto label1;

     label6:
        $z0 = 0;
        goto label1;

     label7:
        $z0 = specialinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean getTargetCheckedState()>();
        goto label1;

     label8:
        $z0 = $z1;
        goto label1;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r3;
        android.graphics.Rect $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.graphics.Canvas;
        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.Rect mTempRect>;
        $i1 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchLeft>;
        $i3 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchTop>;
        $i2 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchRight>;
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchBottom>;
        $i6 = specialinvoke $r0.<android.support.v7.widget.SwitchCompat: int getThumbOffset()>();
        $i4 = $i1 + $i6;
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r3 == null goto label7;

        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        $r5 = staticinvoke <android.support.v7.internal.widget.DrawableUtils: android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)>($r3);

     label0:
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r3 == null goto label5;

        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r4);
        $i7 = $r4.<android.graphics.Rect: int left>;
        $i4 = $i4 + $i7;
        $i6 = $i3;
        $i5 = $i2;
        $i2 = $i0;
        if $r5 == null goto label4;

        $z0 = virtualinvoke $r5.<android.graphics.Rect: boolean isEmpty()>();
        if $z0 != 0 goto label4;

        $i8 = $r5.<android.graphics.Rect: int left>;
        $i7 = $r4.<android.graphics.Rect: int left>;
        if $i8 <= $i7 goto label1;

        $i8 = $r5.<android.graphics.Rect: int left>;
        $i7 = $r4.<android.graphics.Rect: int left>;
        $i8 = $i8 - $i7;
        $i1 = $i1 + $i8;

     label1:
        $i8 = $r5.<android.graphics.Rect: int top>;
        $i7 = $r4.<android.graphics.Rect: int top>;
        if $i8 <= $i7 goto label2;

        $i8 = $r5.<android.graphics.Rect: int top>;
        $i7 = $r4.<android.graphics.Rect: int top>;
        $i8 = $i8 - $i7;
        $i6 = $i3 + $i8;

     label2:
        $i8 = $r5.<android.graphics.Rect: int right>;
        $i7 = $r4.<android.graphics.Rect: int right>;
        if $i8 <= $i7 goto label3;

        $i8 = $r5.<android.graphics.Rect: int right>;
        $i7 = $r4.<android.graphics.Rect: int right>;
        $i8 = $i8 - $i7;
        $i5 = $i5 - $i8;

     label3:
        $i8 = $r5.<android.graphics.Rect: int bottom>;
        $i7 = $r4.<android.graphics.Rect: int bottom>;
        if $i8 <= $i7 goto label4;

        $i8 = $r5.<android.graphics.Rect: int bottom>;
        $i7 = $r4.<android.graphics.Rect: int bottom>;
        $i8 = $i8 - $i7;
        $i2 = $i0 - $i8;

     label4:
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i1, $i6, $i5, $i2);

     label5:
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r3 == null goto label6;

        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r4);
        $i8 = $r4.<android.graphics.Rect: int left>;
        $i2 = $i4 - $i8;
        $i8 = $r0.<android.support.v7.widget.SwitchCompat: int mThumbWidth>;
        $i8 = $i8 + $i4;
        $i7 = $r4.<android.graphics.Rect: int right>;
        $i4 = $i8 + $i7;
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i2, $i3, $i4, $i0);
        $r3 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable getBackground()>();
        if $r3 == null goto label6;

        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>($r3, $i2, $i3, $i4, $i0);

     label6:
        specialinvoke $r0.<android.widget.CompoundButton: void draw(android.graphics.Canvas)>($r1);
        return;

     label7:
        $r5 = <android.support.v7.internal.widget.DrawableUtils: android.graphics.Rect INSETS_NONE>;
        goto label0;
    }

    public void drawableHotspotChanged(float, float)
    {
        android.support.v7.widget.SwitchCompat $r0;
        float $f0, $f1;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 21 goto label0;

        specialinvoke $r0.<android.widget.CompoundButton: void drawableHotspotChanged(float,float)>($f0, $f1);

     label0:
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>($r1, $f0, $f1);

     label1:
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r1 == null goto label2;

        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        staticinvoke <android.support.v4.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>($r1, $f0, $f1);

     label2:
        return;
    }

    protected void drawableStateChanged()
    {
        android.support.v7.widget.SwitchCompat $r0;
        int[] $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        specialinvoke $r0.<android.widget.CompoundButton: void drawableStateChanged()>();
        $r1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int[] getDrawableState()>();
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

     label0:
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r2 == null goto label1;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setState(int[])>($r1);

     label1:
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void invalidate()>();
        return;
    }

    public int getCompoundPaddingLeft()
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 = staticinvoke <android.support.v7.internal.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>($r0);
        if $z0 != 0 goto label1;

        $i0 = specialinvoke $r0.<android.widget.CompoundButton: int getCompoundPaddingLeft()>();

     label0:
        return $i0;

     label1:
        $i1 = specialinvoke $r0.<android.widget.CompoundButton: int getCompoundPaddingLeft()>();
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchWidth>;
        $i0 = $i1 + $i0;
        $r1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence getText()>();
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);
        if $z0 != 0 goto label0;

        $i1 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchPadding>;
        $i0 = $i0 + $i1;
        return $i0;
    }

    public int getCompoundPaddingRight()
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 = staticinvoke <android.support.v7.internal.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>($r0);
        if $z0 == 0 goto label1;

        $i0 = specialinvoke $r0.<android.widget.CompoundButton: int getCompoundPaddingRight()>();

     label0:
        return $i0;

     label1:
        $i1 = specialinvoke $r0.<android.widget.CompoundButton: int getCompoundPaddingRight()>();
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchWidth>;
        $i0 = $i1 + $i0;
        $r1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence getText()>();
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);
        if $z0 != 0 goto label0;

        $i1 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchPadding>;
        $i0 = $i0 + $i1;
        return $i0;
    }

    public boolean getShowText()
    {
        android.support.v7.widget.SwitchCompat $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 = $r0.<android.support.v7.widget.SwitchCompat: boolean mShowText>;
        return $z0;
    }

    public boolean getSplitTrack()
    {
        android.support.v7.widget.SwitchCompat $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 = $r0.<android.support.v7.widget.SwitchCompat: boolean mSplitTrack>;
        return $z0;
    }

    public int getSwitchMinWidth()
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchMinWidth>;
        return $i0;
    }

    public int getSwitchPadding()
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchPadding>;
        return $i0;
    }

    public java.lang.CharSequence getTextOff()
    {
        android.support.v7.widget.SwitchCompat $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOff>;
        return $r1;
    }

    public java.lang.CharSequence getTextOn()
    {
        android.support.v7.widget.SwitchCompat $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOn>;
        return $r1;
    }

    public android.graphics.drawable.Drawable getThumbDrawable()
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        return $r1;
    }

    public int getThumbTextPadding()
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mThumbTextPadding>;
        return $i0;
    }

    public android.graphics.drawable.Drawable getTrackDrawable()
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        return $r1;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.view.animation.Animation $r2;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 11 goto label2;

        specialinvoke $r0.<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>();
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label0:
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r1 == null goto label1;

        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.view.animation.Animation mPositionAnimator>;
        if $r2 == null goto label2;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.view.animation.Animation mPositionAnimator>;
        $z0 = virtualinvoke $r2.<android.view.animation.Animation: boolean hasEnded()>();
        if $z0 != 0 goto label2;

        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void clearAnimation()>();
        $r0.<android.support.v7.widget.SwitchCompat: android.view.animation.Animation mPositionAnimator> = null;

     label2:
        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;
        int[] $r2, $r3;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 := @parameter0: int;
        $i0 = $i0 + 1;
        $r2 = specialinvoke $r0.<android.widget.CompoundButton: int[] onCreateDrawableState(int)>($i0);
        $z0 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean isChecked()>();
        if $z0 == 0 goto label0;

        $r3 = <android.support.v7.widget.SwitchCompat: int[] CHECKED_STATE_SET>;
        staticinvoke <android.support.v7.widget.SwitchCompat: int[] mergeDrawableStates(int[],int[])>($r2, $r3);

     label0:
        return $r2;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.Canvas $r1;
        android.graphics.Region$Op $r3;
        float $f0, $f2;
        android.graphics.Rect $r4, $r6;
        int $i0, $i1, $i2, $i4, $i5;
        int[] $r5;
        android.text.Layout $r7;
        android.graphics.drawable.Drawable $r8, $r9;
        boolean $z0;
        android.content.res.ColorStateList $r11;
        android.text.TextPaint $r12;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.graphics.Canvas;
        specialinvoke $r0.<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>($r1);
        $r6 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.Rect mTempRect>;
        $r9 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r9 == null goto label7;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r6);

     label0:
        $i2 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchTop>;
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchBottom>;
        $i1 = $r6.<android.graphics.Rect: int top>;
        $i2 = $i2 + $i1;
        $i1 = $r6.<android.graphics.Rect: int bottom>;
        $i1 = $i0 - $i1;
        $r8 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r9 == null goto label1;

        $z0 = $r0.<android.support.v7.widget.SwitchCompat: boolean mSplitTrack>;
        if $z0 == 0 goto label8;

        if $r8 == null goto label8;

        $r4 = staticinvoke <android.support.v7.internal.widget.DrawableUtils: android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)>($r8);
        virtualinvoke $r8.<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>($r6);
        $i4 = $r6.<android.graphics.Rect: int left>;
        $i0 = $r4.<android.graphics.Rect: int left>;
        $i4 = $i4 + $i0;
        $r6.<android.graphics.Rect: int left> = $i4;
        $i4 = $r6.<android.graphics.Rect: int right>;
        $i0 = $r4.<android.graphics.Rect: int right>;
        $i4 = $i4 - $i0;
        $r6.<android.graphics.Rect: int right> = $i4;
        $i0 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();
        $r3 = <android.graphics.Region$Op: android.graphics.Region$Op DIFFERENCE>;
        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region$Op)>($r6, $r3);
        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

     label1:
        $i4 = virtualinvoke $r1.<android.graphics.Canvas: int save()>();
        if $r8 == null goto label2;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

     label2:
        $z0 = specialinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean getTargetCheckedState()>();
        if $z0 == 0 goto label9;

        $r7 = $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout mOnLayout>;

     label3:
        if $r7 == null goto label6;

        $r5 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int[] getDrawableState()>();
        $r11 = $r0.<android.support.v7.widget.SwitchCompat: android.content.res.ColorStateList mTextColors>;
        if $r11 == null goto label4;

        $r12 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        $r11 = $r0.<android.support.v7.widget.SwitchCompat: android.content.res.ColorStateList mTextColors>;
        $i0 = virtualinvoke $r11.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r5, 0);
        virtualinvoke $r12.<android.text.TextPaint: void setColor(int)>($i0);

     label4:
        $r12 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        $r12.<android.text.TextPaint: int[] drawableState> = $r5;
        if $r8 == null goto label10;

        $r4 = virtualinvoke $r8.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();
        $i0 = $r4.<android.graphics.Rect: int left>;
        $i5 = $r4.<android.graphics.Rect: int right>;
        $i0 = $i0 + $i5;

     label5:
        $i5 = $i0 / 2;
        $i0 = virtualinvoke $r7.<android.text.Layout: int getWidth()>();
        $i0 = $i0 / 2;
        $i0 = $i5 - $i0;
        $i5 = $i2 + $i1;
        $i5 = $i5 / 2;
        $i2 = virtualinvoke $r7.<android.text.Layout: int getHeight()>();
        $i2 = $i2 / 2;
        $i5 = $i5 - $i2;
        $f2 = (float) $i0;
        $f0 = (float) $i5;
        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f0);
        virtualinvoke $r7.<android.text.Layout: void draw(android.graphics.Canvas)>($r1);

     label6:
        virtualinvoke $r1.<android.graphics.Canvas: void restoreToCount(int)>($i4);
        return;

     label7:
        virtualinvoke $r6.<android.graphics.Rect: void setEmpty()>();
        goto label0;

     label8:
        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);
        goto label1;

     label9:
        $r7 = $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout mOffLayout>;
        goto label3;

     label10:
        $i0 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getWidth()>();
        goto label5;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.view.accessibility.AccessibilityEvent $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;
        specialinvoke $r0.<android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);
        virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>("android.widget.Switch");
        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.view.accessibility.AccessibilityNodeInfo $r1;
        java.lang.StringBuilder $r2, $r6;
        java.lang.CharSequence $r3, $r4;
        int $i0;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;
        $i0 = <android.os.Build$VERSION: int SDK_INT>;
        if $i0 < 14 goto label1;

        specialinvoke $r0.<android.widget.CompoundButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>($r1);
        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>("android.widget.Switch");
        $z0 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean isChecked()>();
        if $z0 == 0 goto label2;

        $r4 = $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOn>;

     label0:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);
        if $z0 != 0 goto label1;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);
        if $z0 == 0 goto label3;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r4);

     label1:
        return;

     label2:
        $r4 = $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOff>;
        goto label0;

     label3:
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r3);
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r4);
        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>($r2);
        goto label1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r1, $r2;
        android.graphics.drawable.Drawable $r3;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 := @parameter0: boolean;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $i3 := @parameter4: int;
        specialinvoke $r0.<android.widget.CompoundButton: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3);
        $i3 = 0;
        $i2 = 0;
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r3 == null goto label1;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.Rect mTempRect>;
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r3 == null goto label5;

        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

     label0:
        $r3 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        $r1 = staticinvoke <android.support.v7.internal.widget.DrawableUtils: android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)>($r3);
        $i3 = $r1.<android.graphics.Rect: int left>;
        $i2 = $r2.<android.graphics.Rect: int left>;
        $i3 = $i3 - $i2;
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);
        $i2 = $r1.<android.graphics.Rect: int right>;
        $i1 = $r2.<android.graphics.Rect: int right>;
        $i2 = $i2 - $i1;
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i2);

     label1:
        $z0 = staticinvoke <android.support.v7.internal.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>($r0);
        if $z0 == 0 goto label6;

        $i1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getPaddingLeft()>();
        $i1 = $i1 + $i3;
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchWidth>;
        $i0 = $i0 + $i1;
        $i3 = $i0 - $i3;
        $i0 = $i3 - $i2;

     label2:
        $i3 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getGravity()>();
        $i3 = $i3 & 112;
        lookupswitch($i3)
        {
            case 16: goto label7;
            case 80: goto label8;
            default: goto label3;
        };

     label3:
        $i2 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getPaddingTop()>();
        $i3 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchHeight>;
        $i3 = $i2 + $i3;

     label4:
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchLeft> = $i1;
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchTop> = $i2;
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchBottom> = $i3;
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchRight> = $i0;
        return;

     label5:
        virtualinvoke $r2.<android.graphics.Rect: void setEmpty()>();
        goto label0;

     label6:
        $i1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getWidth()>();
        $i0 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getPaddingRight()>();
        $i1 = $i1 - $i0;
        $i0 = $i1 - $i2;
        $i1 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchWidth>;
        $i1 = $i0 - $i1;
        $i3 = $i1 + $i3;
        $i1 = $i3 + $i2;
        goto label2;

     label7:
        $i3 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getPaddingTop()>();
        $i2 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getHeight()>();
        $i3 = $i3 + $i2;
        $i2 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getPaddingBottom()>();
        $i3 = $i3 - $i2;
        $i3 = $i3 / 2;
        $i2 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchHeight>;
        $i2 = $i2 / 2;
        $i2 = $i3 - $i2;
        $i3 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchHeight>;
        $i3 = $i2 + $i3;
        goto label4;

     label8:
        $i3 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getHeight()>();
        $i2 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getPaddingBottom()>();
        $i3 = $i3 - $i2;
        $i2 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchHeight>;
        $i2 = $i3 - $i2;
        goto label4;
    }

    public void onMeasure(int, int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Rect $r1;
        boolean $z0;
        android.text.Layout $r2;
        java.lang.CharSequence $r3;
        android.graphics.drawable.Drawable $r4;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $z0 = $r0.<android.support.v7.widget.SwitchCompat: boolean mShowText>;
        if $z0 == 0 goto label1;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout mOnLayout>;
        if $r2 != null goto label0;

        $r3 = $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOn>;
        $r2 = specialinvoke $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout makeLayout(java.lang.CharSequence)>($r3);
        $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout mOnLayout> = $r2;

     label0:
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout mOffLayout>;
        if $r2 != null goto label1;

        $r3 = $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOff>;
        $r2 = specialinvoke $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout makeLayout(java.lang.CharSequence)>($r3);
        $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout mOffLayout> = $r2;

     label1:
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.Rect mTempRect>;
        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r4 == null goto label7;

        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);
        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        $i4 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();
        $i5 = $r1.<android.graphics.Rect: int left>;
        $i5 = $i4 - $i5;
        $i4 = $r1.<android.graphics.Rect: int right>;
        $i3 = $i5 - $i4;
        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        $i4 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label2:
        $z0 = $r0.<android.support.v7.widget.SwitchCompat: boolean mShowText>;
        if $z0 == 0 goto label8;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout mOnLayout>;
        $i5 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.Layout mOffLayout>;
        $i2 = virtualinvoke $r2.<android.text.Layout: int getWidth()>();
        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i2);
        $i2 = $r0.<android.support.v7.widget.SwitchCompat: int mThumbTextPadding>;
        $i2 = $i2 * 2;
        $i2 = $i5 + $i2;

     label3:
        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);
        $r0.<android.support.v7.widget.SwitchCompat: int mThumbWidth> = $i5;
        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r4 == null goto label9;

        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);
        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        $i5 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label4:
        $i2 = $r1.<android.graphics.Rect: int left>;
        $i3 = $r1.<android.graphics.Rect: int right>;
        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r4 == null goto label5;

        $r4 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        $r1 = staticinvoke <android.support.v7.internal.widget.DrawableUtils: android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)>($r4);
        $i6 = $r1.<android.graphics.Rect: int left>;
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i6);
        $i6 = $r1.<android.graphics.Rect: int right>;
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i3, $i6);

     label5:
        $i6 = $r0.<android.support.v7.widget.SwitchCompat: int mSwitchMinWidth>;
        $i7 = $r0.<android.support.v7.widget.SwitchCompat: int mThumbWidth>;
        $i7 = $i7 * 2;
        $i7 = $i7 + $i2;
        $i7 = $i7 + $i3;
        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i6, $i7);
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i4);
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchWidth> = $i2;
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchHeight> = $i3;
        specialinvoke $r0.<android.widget.CompoundButton: void onMeasure(int,int)>($i0, $i1);
        $i2 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: int getMeasuredHeight()>();
        if $i2 >= $i3 goto label6;

        $i7 = staticinvoke <android.support.v4.view.ViewCompat: int getMeasuredWidthAndState(android.view.View)>($r0);
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setMeasuredDimension(int,int)>($i7, $i3);

     label6:
        return;

     label7:
        $i3 = 0;
        $i4 = 0;
        goto label2;

     label8:
        $i2 = 0;
        goto label3;

     label9:
        virtualinvoke $r1.<android.graphics.Rect: void setEmpty()>();
        $i5 = 0;
        goto label4;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.view.accessibility.AccessibilityEvent $r1;
        java.lang.CharSequence $r2;
        boolean $z0;
        java.util.List $r3;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.view.accessibility.AccessibilityEvent;
        specialinvoke $r0.<android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1);
        $z0 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean isChecked()>();
        if $z0 == 0 goto label2;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOn>;

     label0:
        if $r2 == null goto label1;

        $r3 = virtualinvoke $r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

     label1:
        return;

     label2:
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOff>;
        goto label0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.view.MotionEvent $r1;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3, $f4;
        boolean $z0, $z1;
        android.view.VelocityTracker $r2;
        byte $b2;
        android.view.ViewParent $r3;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.view.MotionEvent;
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>($r1);
        $i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>($r1);
        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label13;
            case 2: goto label2;
            case 3: goto label13;
            default: goto label0;
        };

     label0:
        $z0 = specialinvoke $r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>($r1);
        return $z0;

     label1:
        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $z1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean isEnabled()>();
        if $z1 == 0 goto label0;

        $z1 = specialinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean hitThumb(float,float)>($f0, $f1);
        if $z1 == 0 goto label0;

        $i1 = (int) 1;
        $r0.<android.support.v7.widget.SwitchCompat: int mTouchMode> = $i1;
        $r0.<android.support.v7.widget.SwitchCompat: float mTouchX> = $f0;
        $r0.<android.support.v7.widget.SwitchCompat: float mTouchY> = $f1;
        goto label0;

     label2:
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mTouchMode>;
        lookupswitch($i0)
        {
            case 0: goto label0;
            case 1: goto label4;
            case 2: goto label6;
            default: goto label3;
        };

     label3:
        goto label0;

     label4:
        $f2 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();
        $f0 = $r0.<android.support.v7.widget.SwitchCompat: float mTouchX>;
        $f0 = $f2 - $f0;
        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mTouchSlop>;
        $f3 = (float) $i0;
        $b2 = $f0 cmpl $f3;
        if $b2 > 0 goto label5;

        $f3 = $r0.<android.support.v7.widget.SwitchCompat: float mTouchY>;
        $f3 = $f1 - $f3;
        $f3 = staticinvoke <java.lang.Math: float abs(float)>($f3);
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mTouchSlop>;
        $f0 = (float) $i0;
        $b2 = $f3 cmpl $f0;
        if $b2 <= 0 goto label0;

     label5:
        $r0.<android.support.v7.widget.SwitchCompat: int mTouchMode> = 2;
        $r3 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: android.view.ViewParent getParent()>();
        interfaceinvoke $r3.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);
        $r0.<android.support.v7.widget.SwitchCompat: float mTouchX> = $f2;
        $r0.<android.support.v7.widget.SwitchCompat: float mTouchY> = $f1;
        return 1;

     label6:
        $f3 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();
        $i0 = specialinvoke $r0.<android.support.v7.widget.SwitchCompat: int getThumbScrollRange()>();
        $f0 = $r0.<android.support.v7.widget.SwitchCompat: float mTouchX>;
        $f0 = $f3 - $f0;
        if $i0 == 0 goto label10;

        $f4 = (float) $i0;
        $f0 = $f0 / $f4;

     label7:
        $z1 = staticinvoke <android.support.v7.internal.widget.ViewUtils: boolean isLayoutRtl(android.view.View)>($r0);
        if $z1 == 0 goto label8;

        $f0 = neg $f0;

     label8:
        $f4 = $r0.<android.support.v7.widget.SwitchCompat: float mThumbPosition>;
        $f4 = $f4 + $f0;
        $f0 = staticinvoke <android.support.v7.widget.SwitchCompat: float constrain(float,float,float)>($f4, 0.0F, 1.0F);
        $f4 = $r0.<android.support.v7.widget.SwitchCompat: float mThumbPosition>;
        $b2 = $f0 cmpl $f4;
        if $b2 == 0 goto label9;

        $r0.<android.support.v7.widget.SwitchCompat: float mTouchX> = $f3;
        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void setThumbPosition(float)>($f0);

     label9:
        return 1;

     label10:
        $b2 = $f0 cmpl 0.0F;
        if $b2 <= 0 goto label12;

        $f0 = 1.0F;

     label11:
        goto label7;

     label12:
        $f0 = -1.0F;
        goto label11;

     label13:
        $i0 = $r0.<android.support.v7.widget.SwitchCompat: int mTouchMode>;
        if $i0 != 2 goto label14;

        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void stopDrag(android.view.MotionEvent)>($r1);
        specialinvoke $r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>($r1);
        return 1;

     label14:
        $r0.<android.support.v7.widget.SwitchCompat: int mTouchMode> = 0;
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.view.VelocityTracker mVelocityTracker>;
        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();
        goto label0;
    }

    public void setChecked(boolean)
    {
        android.support.v7.widget.SwitchCompat $r0;
        boolean $z0, $z1;
        android.os.IBinder $r1;
        float $f0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 := @parameter0: boolean;
        specialinvoke $r0.<android.widget.CompoundButton: void setChecked(boolean)>($z0);
        $z0 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean isChecked()>();
        $r1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: android.os.IBinder getWindowToken()>();
        if $r1 == null goto label1;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean isLaidOut(android.view.View)>($r0);
        if $z1 == 0 goto label1;

        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void animateThumbToCheckedState(boolean)>($z0);

     label0:
        return;

     label1:
        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void cancelPositionAnimator()>();
        if $z0 == 0 goto label3;

        $f0 = 1.0F;

     label2:
        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void setThumbPosition(float)>($f0);
        goto label0;

     label3:
        $f0 = 0.0F;
        goto label2;
    }

    public void setShowText(boolean)
    {
        android.support.v7.widget.SwitchCompat $r0;
        boolean $z0, $z1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 := @parameter0: boolean;
        $z1 = $r0.<android.support.v7.widget.SwitchCompat: boolean mShowText>;
        if $z1 == $z0 goto label0;

        $r0.<android.support.v7.widget.SwitchCompat: boolean mShowText> = $z0;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();

     label0:
        return;
    }

    public void setSplitTrack(boolean)
    {
        android.support.v7.widget.SwitchCompat $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 := @parameter0: boolean;
        $r0.<android.support.v7.widget.SwitchCompat: boolean mSplitTrack> = $z0;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void invalidate()>();
        return;
    }

    public void setSwitchMinWidth(int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 := @parameter0: int;
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchMinWidth> = $i0;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();
        return;
    }

    public void setSwitchPadding(int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 := @parameter0: int;
        $r0.<android.support.v7.widget.SwitchCompat: int mSwitchPadding> = $i0;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();
        return;
    }

    public void setSwitchTextAppearance(android.content.Context, int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.content.Context $r1;
        int $i0, $i1;
        boolean $z0;
        android.content.res.TypedArray $r2;
        android.content.res.ColorStateList $r3;
        int[] $r4;
        android.text.TextPaint $r5;
        float $f0, $f1;
        byte $b3;
        android.support.v7.internal.text.AllCapsTransformationMethod $r6;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.content.Context;
        $i0 := @parameter1: int;
        $r4 = <android.support.v7.appcompat.R$styleable: int[] TextAppearance>;
        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>($i0, $r4);
        $i1 = <android.support.v7.appcompat.R$styleable: int TextAppearance_android_textColor>;
        $r3 = virtualinvoke $r2.<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>($i1);
        if $r3 == null goto label3;

        $r0.<android.support.v7.widget.SwitchCompat: android.content.res.ColorStateList mTextColors> = $r3;

     label0:
        $i1 = <android.support.v7.appcompat.R$styleable: int TextAppearance_android_textSize>;
        $i0 = (int) 0;
        $i0 = virtualinvoke $r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i1, $i0);
        if $i0 == 0 goto label1;

        $f0 = (float) $i0;
        $r5 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        $f1 = virtualinvoke $r5.<android.text.TextPaint: float getTextSize()>();
        $b3 = $f0 cmpl $f1;
        if $b3 == 0 goto label1;

        $r5 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        $f1 = (float) $i0;
        virtualinvoke $r5.<android.text.TextPaint: void setTextSize(float)>($f1);
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();

     label1:
        $i1 = <android.support.v7.appcompat.R$styleable: int TextAppearance_android_typeface>;
        $i1 = virtualinvoke $r2.<android.content.res.TypedArray: int getInt(int,int)>($i1, -1);
        $i0 = <android.support.v7.appcompat.R$styleable: int TextAppearance_android_textStyle>;
        $i0 = virtualinvoke $r2.<android.content.res.TypedArray: int getInt(int,int)>($i0, -1);
        specialinvoke $r0.<android.support.v7.widget.SwitchCompat: void setSwitchTypefaceByIndex(int,int)>($i1, $i0);
        $i1 = <android.support.v7.appcompat.R$styleable: int TextAppearance_textAllCaps>;
        $z0 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);
        if $z0 == 0 goto label4;

        $r6 = new android.support.v7.internal.text.AllCapsTransformationMethod;
        $r1 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: android.content.Context getContext()>();
        specialinvoke $r6.<android.support.v7.internal.text.AllCapsTransformationMethod: void <init>(android.content.Context)>($r1);
        $r0.<android.support.v7.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod> = $r6;

     label2:
        virtualinvoke $r2.<android.content.res.TypedArray: void recycle()>();
        return;

     label3:
        $r3 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: android.content.res.ColorStateList getTextColors()>();
        $r0.<android.support.v7.widget.SwitchCompat: android.content.res.ColorStateList mTextColors> = $r3;
        goto label0;

     label4:
        $r0.<android.support.v7.widget.SwitchCompat: android.text.method.TransformationMethod mSwitchTransformationMethod> = null;
        goto label2;
    }

    public void setSwitchTypeface(android.graphics.Typeface)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.Typeface $r1, $r3;
        android.text.TextPaint $r2;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.graphics.Typeface;
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        $r3 = virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface getTypeface()>();
        if $r3 == $r1 goto label0;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        virtualinvoke $r2.<android.text.TextPaint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r1);
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void invalidate()>();

     label0:
        return;
    }

    public void setSwitchTypeface(android.graphics.Typeface, int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.Typeface $r1;
        int $i0, $i1;
        boolean $z0;
        float $f0;
        android.text.TextPaint $r2;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.graphics.Typeface;
        $i0 := @parameter1: int;
        $z0 = 0;
        if $i0 <= 0 goto label8;

        if $r1 != null goto label5;

        $r1 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>($i0);

     label0:
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)>($r1);
        if $r1 == null goto label6;

        $i1 = virtualinvoke $r1.<android.graphics.Typeface: int getStyle()>();

     label1:
        $i1 = $i1 ^ -1;
        $i0 = $i0 & $i1;
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        $i1 = $i0 & 1;
        if $i1 == 0 goto label2;

        $z0 = 1;

     label2:
        virtualinvoke $r2.<android.text.TextPaint: void setFakeBoldText(boolean)>($z0);
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        $i1 = $i0 & 2;
        if $i1 == 0 goto label7;

        $f0 = -0.25F;

     label3:
        virtualinvoke $r2.<android.text.TextPaint: void setTextSkewX(float)>($f0);

     label4:
        return;

     label5:
        $r1 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>($r1, $i0);
        goto label0;

     label6:
        $i1 = (int) 0;
        goto label1;

     label7:
        $f0 = 0.0F;
        goto label3;

     label8:
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        virtualinvoke $r2.<android.text.TextPaint: void setFakeBoldText(boolean)>(0);
        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.text.TextPaint mTextPaint>;
        virtualinvoke $r2.<android.text.TextPaint: void setTextSkewX(float)>(0.0F);
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)>($r1);
        goto label4;
    }

    public void setTextOff(java.lang.CharSequence)
    {
        android.support.v7.widget.SwitchCompat $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: java.lang.CharSequence;
        $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOff> = $r1;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();
        return;
    }

    public void setTextOn(java.lang.CharSequence)
    {
        android.support.v7.widget.SwitchCompat $r0;
        java.lang.CharSequence $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: java.lang.CharSequence;
        $r0.<android.support.v7.widget.SwitchCompat: java.lang.CharSequence mTextOn> = $r1;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();
        return;
    }

    public void setThumbDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable> = $r1;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();
        return;
    }

    public void setThumbResource(int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;
        android.support.v7.internal.widget.TintManager $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.support.v7.internal.widget.TintManager mTintManager>;
        $r2 = virtualinvoke $r1.<android.support.v7.internal.widget.TintManager: android.graphics.drawable.Drawable getDrawable(int)>($i0);
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)>($r2);
        return;
    }

    public void setThumbTextPadding(int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 := @parameter0: int;
        $r0.<android.support.v7.widget.SwitchCompat: int mThumbTextPadding> = $i0;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();
        return;
    }

    public void setTrackDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable> = $r1;
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void requestLayout()>();
        return;
    }

    public void setTrackResource(int)
    {
        android.support.v7.widget.SwitchCompat $r0;
        int $i0;
        android.support.v7.internal.widget.TintManager $r1;
        android.graphics.drawable.Drawable $r2;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.widget.SwitchCompat: android.support.v7.internal.widget.TintManager mTintManager>;
        $r2 = virtualinvoke $r1.<android.support.v7.internal.widget.TintManager: android.graphics.drawable.Drawable getDrawable(int)>($i0);
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)>($r2);
        return;
    }

    public void toggle()
    {
        android.support.v7.widget.SwitchCompat $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $z0 = virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: boolean isChecked()>();
        if $z0 != 0 goto label1;

        $z0 = 1;

     label0:
        virtualinvoke $r0.<android.support.v7.widget.SwitchCompat: void setChecked(boolean)>($z0);
        return;

     label1:
        $z0 = 0;
        goto label0;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.widget.SwitchCompat $r0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;

        $r0 := @this: android.support.v7.widget.SwitchCompat;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $z0 = specialinvoke $r0.<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1);
        if $z0 != 0 goto label0;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mThumbDrawable>;
        if $r1 == $r2 goto label0;

        $r2 = $r0.<android.support.v7.widget.SwitchCompat: android.graphics.drawable.Drawable mTrackDrawable>;
        if $r1 != $r2 goto label1;

     label0:
        return 1;

     label1:
        return 0;
    }
}
