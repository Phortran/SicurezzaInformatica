public class com.b.a.a.k.b extends java.lang.Object implements com.b.a.a.k.d
{
    byte[] a;
    int b;
    int c;

    public void <init>()
    {
        com.b.a.a.k.b $r0;

        $r0 := @this: com.b.a.a.k.b;
        specialinvoke $r0.<com.b.a.a.k.b: void <init>(int)>(20);
        return;
    }

    public void <init>(int)
    {
        com.b.a.a.k.b $r0;
        int $i0;
        byte[] $r1;

        $r0 := @this: com.b.a.a.k.b;
        $i0 := @parameter0: int;
        $r1 = newarray (byte)[$i0];
        specialinvoke $r0.<com.b.a.a.k.b: void <init>(byte[])>($r1);
        return;
    }

    public void <init>(byte[])
    {
        com.b.a.a.k.b $r0;
        byte[] $r1;
        int $i1;

        $r0 := @this: com.b.a.a.k.b;
        $r1 := @parameter0: byte[];
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r0.<com.b.a.a.k.b: int c> = 0;
        $r0.<com.b.a.a.k.b: byte[] a> = $r1;
        $i1 = virtualinvoke $r0.<com.b.a.a.k.b: int b()>();
        $r0.<com.b.a.a.k.b: int b> = $i1;
        return;
    }

    public void <init>(byte[], int, int)
    {
        com.b.a.a.k.b $r0;
        byte[] $r1;
        int $i0, $i1;

        $r0 := @this: com.b.a.a.k.b;
        $r1 := @parameter0: byte[];
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        $r0.<com.b.a.a.k.b: int c> = 0;
        $r0.<com.b.a.a.k.b: byte[] a> = $r1;
        $r0.<com.b.a.a.k.b: int b> = $i1;
        $r0.<com.b.a.a.k.b: int c> = $i0;
        return;
    }

    public static int a(byte[])
    {
        byte[] $r0;
        byte $b0;
        int $i1, $i3;
        short $s2;

        $r0 := @parameter0: byte[];
        $b0 = $r0[0];
        $i1 = $b0 << 8;
        $b0 = $r0[1];
        $s2 = $b0 & 255;
        $i1 = $i1 | $s2;
        $i1 = $i1 << 16;
        $b0 = $r0[2];
        $i3 = $b0 << 8;
        $b0 = $r0[3];
        $s2 = $b0 & 255;
        $i3 = $i3 | $s2;
        $i3 = $i3 & 65535;
        $i3 = $i1 | $i3;
        return $i3;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;
        if $r0 != null goto label0;

        $r0 = "";

     label0:
        return $r0;
    }

    public static void a(int, byte[])
    {
        int $i0, $i2;
        byte[] $r0;
        byte $b1, $b3;

        $i0 := @parameter0: int;
        $r0 := @parameter1: byte[];
        $i2 = $i0 >> 24;
        $b3 = (byte) $i2;
        $r0[0] = $b3;
        $i2 = $i0 >> 16;
        $b1 = (byte) $i2;
        $r0[1] = $b1;
        $i2 = $i0 >> 8;
        $b1 = (byte) $i2;
        $r0[2] = $b1;
        $b1 = (byte) $i0;
        $r0[3] = $b1;
        return;
    }

    private static void a(com.b.a.a.k.d, java.lang.String)
    {
        com.b.a.a.k.d $r0;
        java.lang.String $r1;
        int $i0, $i2, $i3, $i5, $i8;
        byte[] $r2;
        char $c4, $c10;
        short $s7;
        byte $b9;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: com.b.a.a.k.d;
        $r1 := @parameter1: java.lang.String;
        if $r1 != null goto label3;

        $i0 = 0;

     label0:
        $i2 = $i0 * 4;
        $r2 = newarray (byte)[$i2];
        $i3 = 0;
        $i2 = 0;

     label1:
        if $i3 >= $i0 goto label7;

        if $r1 == null goto label7;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);
        if $c4 < 0 goto label4;

        if $c4 >= 128 goto label4;

        $i8 = $i2 + 1;
        $b9 = (byte) $c4;
        $r2[$i2] = $b9;

     label2:
        $i3 = $i3 + 1;
        $i2 = $i8;
        goto label1;

     label3:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();
        goto label0;

     label4:
        if $c4 <= 127 goto label5;

        if $c4 >= 2048 goto label5;

        $i5 = $i2 + 1;
        $c10 = $c4 >>> 6;
        $c10 = $c10 | 192;
        $b9 = (byte) $c10;
        $r2[$i2] = $b9;
        $i8 = $i5 + 1;
        $c10 = $c4 & 63;
        $c10 = $c10 | 128;
        $b9 = (byte) $c10;
        $r2[$i5] = $b9;
        goto label2;

     label5:
        if $c4 <= 2047 goto label6;

        if $c4 >= 65536 goto label6;

        $i8 = $i2 + 1;
        $c10 = $c4 >>> 12;
        $c10 = $c10 | 224;
        $b9 = (byte) $c10;
        $r2[$i2] = $b9;
        $i5 = $i8 + 1;
        $c10 = $c4 >>> 6;
        $c10 = $c10 & 63;
        $c10 = $c10 | 128;
        $b9 = (byte) $c10;
        $r2[$i8] = $b9;
        $i8 = $i5 + 1;
        $c10 = $c4 & 63;
        $c10 = $c10 | 128;
        $b9 = (byte) $c10;
        $r2[$i5] = $b9;
        goto label2;

     label6:
        if $c4 <= 65535 goto label9;

        if $c4 >= 1048575 goto label9;

        $i8 = $i2 + 1;
        $r2[$i2] = 63;
        goto label2;

     label7:
        if $i2 > 65535 goto label8;

        $s7 = (short) $i2;
        interfaceinvoke $r0.<com.b.a.a.k.d: void a(short)>($s7);
        interfaceinvoke $r0.<com.b.a.a.k.d: void b(byte[],int,int)>($r2, 0, $i2);
        return;

     label8:
        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("string too long");
        throw $r3;

     label9:
        $i8 = $i2;
        goto label2;
    }

    private static java.lang.String b(com.b.a.a.k.e)
    {
        com.b.a.a.k.e $r0;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2;
        boolean $z0;
        com.b.a.a.k.b $r3;
        byte[] $r4;

        $r0 := @parameter0: com.b.a.a.k.e;
        $i1 = interfaceinvoke $r0.<com.b.a.a.k.e: int l()>();
        $i0 = interfaceinvoke $r0.<com.b.a.a.k.e: int n()>();
        if $i1 <= $i0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("underflow");
        throw $r1;

     label0:
        if $i1 != 0 goto label1;

        return "";

     label1:
        $z0 = $r0 instanceof com.b.a.a.k.b;
        if $z0 == 0 goto label2;

        $r3 = (com.b.a.a.k.b) $r0;
        $r4 = $r3.<com.b.a.a.k.b: byte[] a>;
        $i0 = $r3.<com.b.a.a.k.b: int c>;
        $r2 = staticinvoke <com.b.a.a.k.b: java.lang.String c(byte[],int,int)>($r4, $i0, $i1);
        virtualinvoke $r3.<com.b.a.a.k.b: void e(int)>($i1);
        return $r2;

     label2:
        $r4 = newarray (byte)[$i1];
        interfaceinvoke $r0.<com.b.a.a.k.e: void c(byte[])>($r4);
        $i1 = lengthof $r4;
        $r2 = staticinvoke <com.b.a.a.k.b: java.lang.String c(byte[],int,int)>($r4, 0, $i1);
        return $r2;
    }

    public static short b(byte[])
    {
        byte[] $r0;
        byte $b0;
        int $i1;
        short $s2;

        $r0 := @parameter0: byte[];
        $b0 = $r0[0];
        $i1 = $b0 << 8;
        $b0 = $r0[1];
        $s2 = $b0 & 255;
        $i1 = $i1 | $s2;
        $s2 = (short) $i1;
        return $s2;
    }

    private static java.lang.String c(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i5, $i10, $i11;
        byte $b4;
        char[] $r1;
        short $s6, $s7, $s9;
        char $c8;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r1 = newarray (char)[$i1];
        $i5 = $i0 + $i1;
        $i2 = 0;

     label0:
        if $i0 >= $i5 goto label5;

        $i1 = $i0 + 1;
        $b4 = $r0[$i0];
        $s6 = $b4 & 255;
        $s7 = $s6 & 128;
        if $s7 != 0 goto label1;

        $c8 = (char) $s6;
        $r1[$i2] = $c8;
        $i2 = $i2 + 1;
        $i0 = $i1;
        goto label0;

     label1:
        $s9 = $s6 & 224;
        if $s9 != 192 goto label2;

        $s9 = $s6 & 31;
        $i11 = $s9 << 6;
        $i0 = $i1 + 1;
        $b4 = $r0[$i1];
        $b4 = $b4 & 63;
        $i11 = $b4 | $i11;
        $c8 = (char) $i11;
        $r1[$i2] = $c8;
        $i2 = $i2 + 1;
        goto label0;

     label2:
        $s9 = $s6 & 240;
        if $s9 != 224 goto label3;

        $s9 = $s6 & 15;
        $i10 = $s9 << 12;
        $i0 = $i1 + 1;
        $b4 = $r0[$i1];
        $b4 = $b4 & 63;
        $i1 = $b4 << 6;
        $i10 = $i10 | $i1;
        $b4 = $r0[$i0];
        $b4 = $b4 & 63;
        $i10 = $i10 | $b4;
        $c8 = (char) $i10;
        $r1[$i2] = $c8;
        $i2 = $i2 + 1;
        $i0 = $i0 + 1;
        goto label0;

     label3:
        $s9 = $s6 & 248;
        if $s9 != 240 goto label4;

        $i1 = $i1 + 3;

     label4:
        $r1[$i2] = 63;
        $i2 = $i2 + 1;
        $i0 = $i1;
        goto label0;

     label5:
        $r2 = new java.lang.String;
        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r1, 0, $i2);
        return $r2;
    }

    public final void a(byte)
    {
        com.b.a.a.k.b $r0;
        byte $b0;
        int $i2, $i3;
        byte[] $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $b0 := @parameter0: byte;
        virtualinvoke $r0.<com.b.a.a.k.b: void a(int)>(1);
        $i3 = $r0.<com.b.a.a.k.b: int b>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i3 = $i3 - $i2;
        if $i3 <= 0 goto label0;

        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i3 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $i3 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i2;
        $r1[$i3] = $b0;
        return;

     label0:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("overflow");
        throw $r2;
    }

    public final void a(int)
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1;
        byte[] $r1, $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 := @parameter0: int;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i0 = $i1 + $i0;
        $i1 = virtualinvoke $r0.<com.b.a.a.k.b: int b()>();
        if $i0 <= $i1 goto label0;

        $i1 = virtualinvoke $r0.<com.b.a.a.k.b: int b()>();
        $i1 = $i1 * 175;
        $i1 = $i1 / 100;
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $r2 = newarray (byte)[$i1];
        $r0.<com.b.a.a.k.b: byte[] a> = $r2;
        $r2 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i1 = lengthof $r1;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i1);
        $i1 = virtualinvoke $r0.<com.b.a.a.k.b: int b()>();
        $r0.<com.b.a.a.k.b: int b> = $i1;

     label0:
        return;
    }

    public final void a(long)
    {
        com.b.a.a.k.b $r0;
        long $l0, $l4;
        int $i1, $i2, $i5, $i6;
        byte $b3;
        byte[] $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $l0 := @parameter0: long;
        virtualinvoke $r0.<com.b.a.a.k.b: void a(int)>(8);
        $i1 = $r0.<com.b.a.a.k.b: int b>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $i1 - $i2;
        if $i2 < 8 goto label0;

        $l4 = $l0 >> 32;
        $i5 = (int) $l4;
        $i6 = (int) $l0;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $i1 = $i5 >> 24;
        $b3 = (byte) $i1;
        $r1[$i2] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $i1 = $i5 >> 16;
        $b3 = (byte) $i1;
        $r1[$i2] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $i1 = $i5 >> 8;
        $b3 = (byte) $i1;
        $r1[$i2] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b3 = (byte) $i5;
        $r1[$i2] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i5 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $i5 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i2;
        $i2 = $i6 >> 24;
        $b3 = (byte) $i2;
        $r1[$i5] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i5 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $i5 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i2;
        $i2 = $i6 >> 16;
        $b3 = (byte) $i2;
        $r1[$i5] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i5 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $i5 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i2;
        $i2 = $i6 >> 8;
        $b3 = (byte) $i2;
        $r1[$i5] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i5 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $i5 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i2;
        $b3 = (byte) $i6;
        $r1[$i5] = $b3;
        return;

     label0:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("overflow");
        throw $r2;
    }

    public final void a(com.b.a.a.k.e)
    {
        com.b.a.a.k.b $r0;
        com.b.a.a.k.e $r1;
        int $i0;

        $r0 := @this: com.b.a.a.k.b;
        $r1 := @parameter0: com.b.a.a.k.e;
        $i0 = interfaceinvoke $r1.<com.b.a.a.k.e: int n()>();
        virtualinvoke $r0.<com.b.a.a.k.b: void a(com.b.a.a.k.e,int)>($r1, $i0);
        return;
    }

    public final void a(com.b.a.a.k.e, int)
    {
        com.b.a.a.k.b $r0, $r2;
        com.b.a.a.k.e $r1;
        int $i0, $i1;
        boolean $z0;
        byte[] $r3;

        $r0 := @this: com.b.a.a.k.b;
        $r1 := @parameter0: com.b.a.a.k.e;
        $i0 := @parameter1: int;
        $i1 = interfaceinvoke $r1.<com.b.a.a.k.e: int n()>();
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);
        $z0 = $r1 instanceof com.b.a.a.k.b;
        if $z0 == 0 goto label1;

        $r2 = (com.b.a.a.k.b) $r1;
        $r3 = $r2.<com.b.a.a.k.b: byte[] a>;
        $i1 = $r2.<com.b.a.a.k.b: int c>;
        virtualinvoke $r0.<com.b.a.a.k.b: void b(byte[],int,int)>($r3, $i1, $i0);
        virtualinvoke $r2.<com.b.a.a.k.b: void e(int)>($i0);

     label0:
        return;

     label1:
        $r3 = newarray (byte)[$i0];
        interfaceinvoke $r1.<com.b.a.a.k.e: void c(byte[])>($r3);
        virtualinvoke $r0.<com.b.a.a.k.b: void d(byte[])>($r3);
        goto label0;
    }

    public final void a(short)
    {
        com.b.a.a.k.b $r0;
        short $s0, $s4;
        int $i1, $i2;
        byte $b3;
        byte[] $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $s0 := @parameter0: short;
        virtualinvoke $r0.<com.b.a.a.k.b: void a(int)>(2);
        $i1 = $r0.<com.b.a.a.k.b: int b>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $i1 - $i2;
        if $i2 < 2 goto label0;

        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $s4 = $s0 >> 8;
        $b3 = (byte) $s4;
        $r1[$i2] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b3 = (byte) $s0;
        $r1[$i2] = $b3;
        return;

     label0:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("overflow");
        throw $r2;
    }

    public final void a(boolean)
    {
        com.b.a.a.k.b $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: com.b.a.a.k.b;
        $z0 := @parameter0: boolean;
        if $z0 == 0 goto label1;

        $b0 = 1;

     label0:
        virtualinvoke $r0.<com.b.a.a.k.b: void a(byte)>($b0);
        return;

     label1:
        $b0 = 0;
        goto label0;
    }

    public final void a(byte[], int, int)
    {
        com.b.a.a.k.b $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r3;

        $r0 := @this: com.b.a.a.k.b;
        $r1 := @parameter0: byte[];
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 = $r0.<com.b.a.a.k.b: int b>;
        $i3 = $r0.<com.b.a.a.k.b: int c>;
        $i3 = $i2 - $i3;
        if $i3 < $i1 goto label0;

        $r2 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i3 = $r0.<com.b.a.a.k.b: int c>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, $r1, $i0, $i1);
        virtualinvoke $r0.<com.b.a.a.k.b: void e(int)>($i1);
        return;

     label0:
        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("underflow");
        throw $r3;
    }

    public byte[] a()
    {
        com.b.a.a.k.b $r0;
        byte[] $r1;

        $r0 := @this: com.b.a.a.k.b;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        return $r1;
    }

    public final int b()
    {
        com.b.a.a.k.b $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: com.b.a.a.k.b;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i0 = lengthof $r1;
        return $i0;
    }

    public final com.b.a.a.k.e b(int)
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1, $i2;
        com.b.a.a.k.n $r1;
        byte[] $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 := @parameter0: int;
        $r1 = new com.b.a.a.k.n;
        $r2 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $i2 + $i0;
        specialinvoke $r1.<com.b.a.a.k.n: void <init>(byte[],int,int)>($r2, $i1, $i2);
        return $r1;
    }

    public final void b(java.lang.String)
    {
        com.b.a.a.k.b $r0;
        java.lang.String $r1;

        $r0 := @this: com.b.a.a.k.b;
        $r1 := @parameter0: java.lang.String;
        staticinvoke <com.b.a.a.k.b: void a(com.b.a.a.k.d,java.lang.String)>($r0, $r1);
        return;
    }

    public final void b(byte[], int, int)
    {
        com.b.a.a.k.b $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r3;

        $r0 := @this: com.b.a.a.k.b;
        $r1 := @parameter0: byte[];
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        virtualinvoke $r0.<com.b.a.a.k.b: void a(int)>($i1);
        $i2 = $r0.<com.b.a.a.k.b: int b>;
        $i3 = $r0.<com.b.a.a.k.b: int c>;
        $i3 = $i2 - $i3;
        if $i3 < $i1 goto label0;

        $r2 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i3 = $r0.<com.b.a.a.k.b: int c>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, $i3, $i1);
        virtualinvoke $r0.<com.b.a.a.k.b: void e(int)>($i1);
        return;

     label0:
        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("overflow");
        throw $r3;
    }

    public void c()
    {
        com.b.a.a.k.b $r0;
        int $i1;

        $r0 := @this: com.b.a.a.k.b;
        $r0.<com.b.a.a.k.b: int c> = 0;
        $i1 = virtualinvoke $r0.<com.b.a.a.k.b: int b()>();
        $r0.<com.b.a.a.k.b: int b> = $i1;
        return;
    }

    public final void c(int)
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 := @parameter0: int;
        if $i0 < 0 goto label0;

        $i1 = $r0.<com.b.a.a.k.b: int b>;
        if $i0 > $i1 goto label0;

        $r0.<com.b.a.a.k.b: int c> = $i0;
        return;

     label0:
        $r2 = new java.lang.IllegalArgumentException;
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal position");
        throw $r2;
    }

    public final void c(byte[])
    {
        com.b.a.a.k.b $r0;
        byte[] $r1;
        int $i1;

        $r0 := @this: com.b.a.a.k.b;
        $r1 := @parameter0: byte[];
        $i1 = lengthof $r1;
        virtualinvoke $r0.<com.b.a.a.k.b: void a(byte[],int,int)>($r1, 0, $i1);
        return;
    }

    public void d()
    {
        com.b.a.a.k.b $r0;
        int $i0;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int c>;
        $r0.<com.b.a.a.k.b: int b> = $i0;
        $r0.<com.b.a.a.k.b: int c> = 0;
        return;
    }

    public final void d(int)
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1, $i2;
        byte $b3;
        byte[] $r1;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 := @parameter0: int;
        virtualinvoke $r0.<com.b.a.a.k.b: void a(int)>(4);
        $i1 = $r0.<com.b.a.a.k.b: int b>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = $i1 - $i2;
        if $i2 < 4 goto label0;

        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $i1 = $i0 >> 24;
        $b3 = (byte) $i1;
        $r1[$i2] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $i1 = $i0 >> 16;
        $b3 = (byte) $i1;
        $r1[$i2] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $i1 = $i0 >> 8;
        $b3 = (byte) $i1;
        $r1[$i2] = $b3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i2 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i2 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b3 = (byte) $i0;
        $r1[$i2] = $b3;
        return;

     label0:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("overflow");
        throw $r2;
    }

    public final void d(byte[])
    {
        com.b.a.a.k.b $r0;
        byte[] $r1;
        int $i1;

        $r0 := @this: com.b.a.a.k.b;
        $r1 := @parameter0: byte[];
        $i1 = lengthof $r1;
        virtualinvoke $r0.<com.b.a.a.k.b: void b(byte[],int,int)>($r1, 0, $i1);
        return;
    }

    public final void e(int)
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1;

        $r0 := @this: com.b.a.a.k.b;
        $i0 := @parameter0: int;
        virtualinvoke $r0.<com.b.a.a.k.b: void a(int)>($i0);
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i1 + $i0;
        virtualinvoke $r0.<com.b.a.a.k.b: void c(int)>($i1);
        return;
    }

    public final boolean e()
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int b>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 - $i1;
        if $i1 <= 0 goto label1;

        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i0 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b2 = $r1[$i0];
        if $b2 == 0 goto label0;

        return 1;

     label0:
        return 0;

     label1:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("underflow");
        throw $r2;
    }

    public final byte f()
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int b>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 - $i1;
        if $i1 <= 0 goto label0;

        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i0 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b2 = $r1[$i0];
        return $b2;

     label0:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("underflow");
        throw $r2;
    }

    public final int g()
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1, $i3;
        byte $b2;
        byte[] $r1;
        short $s4;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int b>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 - $i1;
        if $i1 < 4 goto label0;

        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i0 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b2 = $r1[$i0];
        $i0 = $b2 << 24;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i3 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i3 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b2 = $r1[$i3];
        $s4 = $b2 & 255;
        $i3 = $s4 << 16;
        $i3 = $i0 | $i3;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i0 = $i1 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i0;
        $b2 = $r1[$i1];
        $s4 = $b2 & 255;
        $i1 = $s4 << 8;
        $i3 = $i3 | $i1;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i0 = $i1 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i0;
        $b2 = $r1[$i1];
        $s4 = $b2 & 255;
        $i3 = $i3 | $s4;
        return $i3;

     label0:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("underflow");
        throw $r2;
    }

    public final long h()
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1;
        long $l3, $l4, $l5;
        java.lang.IllegalStateException $r1;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int b>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 - $i1;
        if $i1 < 8 goto label0;

        $i1 = virtualinvoke $r0.<com.b.a.a.k.b: int g()>();
        $l3 = (long) $i1;
        $l4 = $l3 << 32;
        $i1 = virtualinvoke $r0.<com.b.a.a.k.b: int g()>();
        $l5 = (long) $i1;
        $l5 = $l5 & 4294967295L;
        $l5 = $l4 | $l5;
        return $l5;

     label0:
        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("underflow");
        throw $r1;
    }

    public final short i()
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1, $i3;
        byte $b2;
        byte[] $r1;
        short $s4;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int b>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 - $i1;
        if $i1 < 2 goto label0;

        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i0 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b2 = $r1[$i0];
        $i0 = $b2 << 8;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i3 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i3 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b2 = $r1[$i3];
        $s4 = $b2 & 255;
        $i3 = $i0 | $s4;
        $s4 = (short) $i3;
        return $s4;

     label0:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("underflow");
        throw $r2;
    }

    public final java.lang.String j()
    {
        com.b.a.a.k.b $r0;
        java.lang.String $r1;

        $r0 := @this: com.b.a.a.k.b;
        $r1 = staticinvoke <com.b.a.a.k.b: java.lang.String b(com.b.a.a.k.e)>($r0);
        return $r1;
    }

    public final short k()
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1;
        byte[] $r1;
        byte $b2;
        short $s3;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int b>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 - $i1;
        if $i1 <= 0 goto label0;

        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i0 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b2 = $r1[$i0];
        $s3 = $b2 & 255;
        $s3 = (short) $s3;
        return $s3;

     label0:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("underflow");
        throw $r2;
    }

    public final int l()
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1, $i3;
        byte $b2;
        byte[] $r1;
        short $s4;
        java.lang.IllegalStateException $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int b>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 - $i1;
        if $i1 < 2 goto label0;

        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i0 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b2 = $r1[$i0];
        $i0 = $b2 << 8;
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i3 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i3 + 1;
        $r0.<com.b.a.a.k.b: int c> = $i1;
        $b2 = $r1[$i3];
        $s4 = $b2 & 255;
        $i3 = $i0 | $s4;
        $i3 = $i3 & 65535;
        return $i3;

     label0:
        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("underflow");
        throw $r2;
    }

    public final int m()
    {
        com.b.a.a.k.b $r0;
        int $i0;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int c>;
        return $i0;
    }

    public final int n()
    {
        com.b.a.a.k.b $r0;
        int $i0, $i1;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = $r0.<com.b.a.a.k.b: int b>;
        $i1 = $r0.<com.b.a.a.k.b: int c>;
        $i1 = $i0 - $i1;
        return $i1;
    }

    public final byte[] o()
    {
        com.b.a.a.k.b $r0;
        int $i0, $i2;
        byte[] $r1, $r2;

        $r0 := @this: com.b.a.a.k.b;
        $i0 = virtualinvoke $r0.<com.b.a.a.k.b: int n()>();
        $r2 = newarray (byte)[$i0];
        $r1 = $r0.<com.b.a.a.k.b: byte[] a>;
        $i0 = $r0.<com.b.a.a.k.b: int c>;
        $i2 = virtualinvoke $r0.<com.b.a.a.k.b: int n()>();
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, 0, $i2);
        return $r2;
    }
}
