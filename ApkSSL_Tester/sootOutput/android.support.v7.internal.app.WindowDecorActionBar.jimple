public class android.support.v7.internal.app.WindowDecorActionBar extends android.support.v7.app.ActionBar implements android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
{
    static final boolean $assertionsDisabled;
    private static final boolean ALLOW_SHOW_HIDE_ANIMATIONS;
    private static final int CONTEXT_DISPLAY_NORMAL;
    private static final int CONTEXT_DISPLAY_SPLIT;
    private static final int INVALID_POSITION;
    private static final java.lang.String TAG;
    android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode;
    private android.app.Activity mActivity;
    private android.support.v7.internal.widget.ActionBarContainer mContainerView;
    private boolean mContentAnimations;
    private android.view.View mContentView;
    private android.content.Context mContext;
    private int mContextDisplayMode;
    private android.support.v7.internal.widget.ActionBarContextView mContextView;
    private int mCurWindowVisibility;
    private android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim;
    private android.support.v7.internal.widget.DecorToolbar mDecorToolbar;
    android.support.v7.view.ActionMode mDeferredDestroyActionMode;
    android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback;
    private android.app.Dialog mDialog;
    private boolean mDisplayHomeAsUpSet;
    private boolean mHasEmbeddedTabs;
    private boolean mHiddenByApp;
    private boolean mHiddenBySystem;
    final android.support.v4.view.ViewPropertyAnimatorListener mHideListener;
    boolean mHideOnContentScroll;
    private boolean mLastMenuVisibility;
    private java.util.ArrayList mMenuVisibilityListeners;
    private boolean mNowShowing;
    private android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout;
    private int mSavedTabPosition;
    private android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab;
    private boolean mShowHideAnimationEnabled;
    final android.support.v4.view.ViewPropertyAnimatorListener mShowListener;
    private boolean mShowingForMode;
    private android.support.v7.internal.widget.ActionBarContainer mSplitView;
    private android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView;
    private java.util.ArrayList mTabs;
    private android.content.Context mThemedContext;
    private android.support.v7.internal.widget.TintManager mTintManager;
    final android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z2;
        int $i1;

        $z0 = 1;
        $r0 = class "android/support/v7/internal/app/WindowDecorActionBar";
        $z2 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z2 != 0 goto label2;

        $z2 = 1;

     label0:
        <android.support.v7.internal.app.WindowDecorActionBar: boolean $assertionsDisabled> = $z2;
        $i1 = <android.os.Build$VERSION: int SDK_INT>;
        if $i1 < 14 goto label3;

     label1:
        <android.support.v7.internal.app.WindowDecorActionBar: boolean ALLOW_SHOW_HIDE_ANIMATIONS> = $z0;
        return;

     label2:
        $z2 = 0;
        goto label0;

     label3:
        $z0 = 0;
        goto label1;
    }

    public void <init>(android.app.Activity, boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.app.Activity $r1;
        boolean $z0;
        android.view.View $r2;
        android.view.Window $r3;
        java.util.ArrayList $r4;
        android.support.v7.internal.app.WindowDecorActionBar$1 $r5;
        android.support.v7.internal.app.WindowDecorActionBar$2 $r6;
        android.support.v7.internal.app.WindowDecorActionBar$3 $r7;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.app.Activity;
        $z0 := @parameter1: boolean;
        specialinvoke $r0.<android.support.v7.app.ActionBar: void <init>()>();
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r4;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r4;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations> = 1;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;
        $r5 = new android.support.v7.internal.app.WindowDecorActionBar$1;
        specialinvoke $r5.<android.support.v7.internal.app.WindowDecorActionBar$1: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mHideListener> = $r5;
        $r6 = new android.support.v7.internal.app.WindowDecorActionBar$2;
        specialinvoke $r6.<android.support.v7.internal.app.WindowDecorActionBar$2: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mShowListener> = $r6;
        $r7 = new android.support.v7.internal.app.WindowDecorActionBar$3;
        specialinvoke $r7.<android.support.v7.internal.app.WindowDecorActionBar$3: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $r7;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.app.Activity mActivity> = $r1;
        $r3 = virtualinvoke $r1.<android.app.Activity: android.view.Window getWindow()>();
        $r2 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void init(android.view.View)>($r2);
        if $z0 != 0 goto label0;

        $r2 = virtualinvoke $r2.<android.view.View: android.view.View findViewById(int)>(16908290);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView> = $r2;

     label0:
        return;
    }

    public void <init>(android.app.Dialog)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.app.Dialog $r1;
        java.util.ArrayList $r2;
        android.view.Window $r3;
        android.support.v7.internal.app.WindowDecorActionBar$1 $r4;
        android.support.v7.internal.app.WindowDecorActionBar$2 $r5;
        android.support.v7.internal.app.WindowDecorActionBar$3 $r6;
        android.view.View $r7;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.app.Dialog;
        specialinvoke $r0.<android.support.v7.app.ActionBar: void <init>()>();
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r2;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r2;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations> = 1;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;
        $r4 = new android.support.v7.internal.app.WindowDecorActionBar$1;
        specialinvoke $r4.<android.support.v7.internal.app.WindowDecorActionBar$1: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mHideListener> = $r4;
        $r5 = new android.support.v7.internal.app.WindowDecorActionBar$2;
        specialinvoke $r5.<android.support.v7.internal.app.WindowDecorActionBar$2: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mShowListener> = $r5;
        $r6 = new android.support.v7.internal.app.WindowDecorActionBar$3;
        specialinvoke $r6.<android.support.v7.internal.app.WindowDecorActionBar$3: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $r6;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.app.Dialog mDialog> = $r1;
        $r3 = virtualinvoke $r1.<android.app.Dialog: android.view.Window getWindow()>();
        $r7 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void init(android.view.View)>($r7);
        return;
    }

    public void <init>(android.view.View)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.view.View $r1;
        java.util.ArrayList $r2;
        boolean $z0;
        android.support.v7.internal.app.WindowDecorActionBar$1 $r3;
        android.support.v7.internal.app.WindowDecorActionBar$2 $r4;
        android.support.v7.internal.app.WindowDecorActionBar$3 $r5;
        java.lang.AssertionError $r6;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.view.View;
        specialinvoke $r0.<android.support.v7.app.ActionBar: void <init>()>();
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs> = $r2;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners> = $r2;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = 0;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations> = 1;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;
        $r3 = new android.support.v7.internal.app.WindowDecorActionBar$1;
        specialinvoke $r3.<android.support.v7.internal.app.WindowDecorActionBar$1: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mHideListener> = $r3;
        $r4 = new android.support.v7.internal.app.WindowDecorActionBar$2;
        specialinvoke $r4.<android.support.v7.internal.app.WindowDecorActionBar$2: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mShowListener> = $r4;
        $r5 = new android.support.v7.internal.app.WindowDecorActionBar$3;
        specialinvoke $r5.<android.support.v7.internal.app.WindowDecorActionBar$3: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener> = $r5;
        $z0 = <android.support.v7.internal.app.WindowDecorActionBar: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $z0 = virtualinvoke $r1.<android.view.View: boolean isInEditMode()>();
        if $z0 != 0 goto label0;

        $r6 = new java.lang.AssertionError;
        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();
        throw $r6;

     label0:
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void init(android.view.View)>($r1);
        return;
    }

    static boolean access$000(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations>;
        return $z0;
    }

    static android.view.View access$100(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.view.View $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;
        return $r1;
    }

    static android.support.v7.internal.widget.ActionBarContextView access$1000(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarContextView $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;
        return $r1;
    }

    static android.support.v7.internal.widget.DecorToolbar access$1100(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        return $r1;
    }

    static android.content.Context access$1200(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.content.Context $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        return $r1;
    }

    static android.support.v7.internal.widget.ScrollingTabContainerView access$1300(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ScrollingTabContainerView $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        return $r1;
    }

    static android.support.v7.internal.widget.ActionBarContainer access$200(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarContainer $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        return $r1;
    }

    static android.support.v7.internal.widget.ActionBarContainer access$300(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarContainer $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        return $r1;
    }

    static int access$400(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode>;
        return $i0;
    }

    static android.support.v7.internal.view.ViewPropertyAnimatorCompatSet access$502(android.support.v7.internal.app.WindowDecorActionBar, android.support.v7.internal.view.ViewPropertyAnimatorCompatSet)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter1: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = $r1;
        return $r1;
    }

    static android.support.v7.internal.widget.ActionBarOverlayLayout access$600(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        return $r1;
    }

    static boolean access$700(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;
        return $z0;
    }

    static boolean access$800(android.support.v7.internal.app.WindowDecorActionBar)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @parameter0: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;
        return $z0;
    }

    static boolean access$900(boolean, boolean, boolean)
    {
        boolean $z0, $z1, $z2;

        $z0 := @parameter0: boolean;
        $z1 := @parameter1: boolean;
        $z2 := @parameter2: boolean;
        $z2 = staticinvoke <android.support.v7.internal.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)>($z0, $z1, $z2);
        return $z2;
    }

    private static boolean checkShowingFlags(boolean, boolean, boolean)
    {
        boolean $z0, $z1, $z2;

        $z0 := @parameter0: boolean;
        $z1 := @parameter1: boolean;
        $z2 := @parameter2: boolean;
        if $z2 == 0 goto label1;

     label0:
        return 1;

     label1:
        if $z0 != 0 goto label2;

        if $z1 == 0 goto label0;

     label2:
        return 0;
    }

    private void cleanupTabs()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r1;
        java.util.ArrayList $r2;
        android.support.v7.internal.widget.ScrollingTabContainerView $r3;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        if $r1 == null goto label0;

        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>(null);

     label0:
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        virtualinvoke $r2.<java.util.ArrayList: void clear()>();
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        if $r3 == null goto label1;

        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        virtualinvoke $r3.<android.support.v7.internal.widget.ScrollingTabContainerView: void removeAllTabs()>();

     label1:
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;
        return;
    }

    private void configureTab(android.support.v7.app.ActionBar$Tab, int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.app.ActionBar$Tab $r1;
        int $i0, $i1;
        android.support.v7.app.ActionBar$TabListener $r2;
        java.lang.IllegalStateException $r3;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r5;
        java.util.ArrayList $r6;
        java.lang.Object $r7;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;
        $i0 := @parameter1: int;
        $r5 = (android.support.v7.internal.app.WindowDecorActionBar$TabImpl) $r1;
        $r2 = virtualinvoke $r5.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: android.support.v7.app.ActionBar$TabListener getCallback()>();
        if $r2 != null goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action Bar Tab must have a Callback");
        throw $r3;

     label0:
        virtualinvoke $r5.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($i0);
        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        virtualinvoke $r6.<java.util.ArrayList: void add(int,java.lang.Object)>($i0, $r5);
        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();
        $i0 = $i0 + 1;

     label1:
        if $i0 >= $i1 goto label2;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i0);
        $r5 = (android.support.v7.internal.app.WindowDecorActionBar$TabImpl) $r7;
        virtualinvoke $r5.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($i0);
        $i0 = $i0 + 1;
        goto label1;

     label2:
        return;
    }

    private void ensureTabsExist()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ScrollingTabContainerView $r1;
        int $i2;
        android.content.Context $r2;
        boolean $z0;
        android.support.v7.internal.widget.DecorToolbar $r3;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r4;
        android.support.v7.internal.widget.ActionBarContainer $r5;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        if $r1 == null goto label1;

     label0:
        return;

     label1:
        $r1 = new android.support.v7.internal.widget.ScrollingTabContainerView;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        specialinvoke $r1.<android.support.v7.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)>($r2);
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;
        if $z0 == 0 goto label3;

        virtualinvoke $r1.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r3.<android.support.v7.internal.widget.DecorToolbar: void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)>($r1);

     label2:
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView> = $r1;
        goto label0;

     label3:
        $i2 = virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: int getNavigationMode()>();
        if $i2 != 2 goto label5;

        virtualinvoke $r1.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0);
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        if $r4 == null goto label4;

        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r4);

     label4:
        $r5 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        virtualinvoke $r5.<android.support.v7.internal.widget.ActionBarContainer: void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView)>($r1);
        goto label2;

     label5:
        virtualinvoke $r1.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);
        goto label4;
    }

    private android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.view.View $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.support.v7.internal.widget.DecorToolbar $r4;
        android.support.v7.widget.Toolbar $r5;
        java.lang.IllegalStateException $r6;
        java.lang.Class $r7;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.view.View;
        $z0 = $r1 instanceof android.support.v7.internal.widget.DecorToolbar;
        if $z0 == 0 goto label0;

        $r4 = (android.support.v7.internal.widget.DecorToolbar) $r1;
        return $r4;

     label0:
        $z0 = $r1 instanceof android.support.v7.widget.Toolbar;
        if $z0 == 0 goto label1;

        $r5 = (android.support.v7.widget.Toolbar) $r1;
        $r4 = virtualinvoke $r5.<android.support.v7.widget.Toolbar: android.support.v7.internal.widget.DecorToolbar getWrapper()>();
        return $r4;

     label1:
        $r6 = new java.lang.IllegalStateException;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t make a decor toolbar out of ");
        $r7 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r7.<java.lang.Class: java.lang.String getSimpleName()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        throw $r6;
    }

    private void hideForActionMode()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode>;
        if $z0 == 0 goto label1;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode> = 0;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(0);

     label0:
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    private void init(android.view.View)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.view.View $r1, $r5;
        android.content.res.TypedArray $r2;
        android.support.v7.internal.view.ActionBarPolicy $r3;
        int $i0, i1;
        boolean $z0, $z3;
        int[] $r4;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r6;
        android.support.v7.internal.widget.DecorToolbar $r7;
        android.support.v7.internal.widget.ActionBarContextView $r8;
        android.support.v7.internal.widget.ActionBarContainer $r9;
        java.lang.IllegalStateException $r10;
        java.lang.StringBuilder $r11;
        java.lang.Class $r12;
        java.lang.String $r13;
        android.content.Context $r14;
        float $f0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.view.View;
        $i0 = <android.support.v7.appcompat.R$id: int decor_content_parent>;
        $r5 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);
        $r6 = (android.support.v7.internal.widget.ActionBarOverlayLayout) $r5;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout> = $r6;
        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        if $r6 == null goto label0;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        virtualinvoke $r6.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(android.support.v7.internal.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)>($r0);

     label0:
        $i0 = <android.support.v7.appcompat.R$id: int action_bar>;
        $r5 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);
        $r7 = specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar getDecorToolbar(android.view.View)>($r5);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar> = $r7;
        $i0 = <android.support.v7.appcompat.R$id: int action_context_bar>;
        $r5 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);
        $r8 = (android.support.v7.internal.widget.ActionBarContextView) $r5;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView> = $r8;
        $i0 = <android.support.v7.appcompat.R$id: int action_bar_container>;
        $r5 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);
        $r9 = (android.support.v7.internal.widget.ActionBarContainer) $r5;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView> = $r9;
        $i0 = <android.support.v7.appcompat.R$id: int split_action_bar>;
        $r5 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>($i0);
        $r9 = (android.support.v7.internal.widget.ActionBarContainer) $r5;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView> = $r9;
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        if $r7 == null goto label1;

        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;
        if $r8 == null goto label1;

        $r9 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        if $r9 != null goto label2;

     label1:
        $r10 = new java.lang.IllegalStateException;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();
        $r12 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();
        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can only be used ");
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with a compatible window decor layout");
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);
        throw $r10;

     label2:
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $r14 = interfaceinvoke $r7.<android.support.v7.internal.widget.DecorToolbar: android.content.Context getContext()>();
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext> = $r14;
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $z0 = interfaceinvoke $r7.<android.support.v7.internal.widget.DecorToolbar: boolean isSplit()>();
        if $z0 == 0 goto label10;

        $i0 = (int) 1;

     label3:
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode> = $i0;
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i0 = interfaceinvoke $r7.<android.support.v7.internal.widget.DecorToolbar: int getDisplayOptions()>();
        $i0 = $i0 & 4;
        if $i0 == 0 goto label11;

        $z0 = 1;

     label4:
        if $z0 == 0 goto label5;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label5:
        $r14 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r3 = staticinvoke <android.support.v7.internal.view.ActionBarPolicy: android.support.v7.internal.view.ActionBarPolicy get(android.content.Context)>($r14);
        $z3 = virtualinvoke $r3.<android.support.v7.internal.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>();
        if $z3 != 0 goto label6;

        if $z0 == 0 goto label12;

     label6:
        $z3 = 1;

     label7:
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)>($z3);
        $z3 = virtualinvoke $r3.<android.support.v7.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z3);
        $r14 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r4 = <android.support.v7.appcompat.R$styleable: int[] ActionBar>;
        $i0 = <android.support.v7.appcompat.R$attr: int actionBarStyle>;
        i1 = (int) 0;
        $r2 = virtualinvoke $r14.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r4, $i0, i1);
        $i0 = <android.support.v7.appcompat.R$styleable: int ActionBar_hideOnContentScroll>;
        $z3 = virtualinvoke $r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i0, 0);
        if $z3 == 0 goto label8;

        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)>(1);

     label8:
        $i0 = <android.support.v7.appcompat.R$styleable: int ActionBar_elevation>;
        i1 = (int) 0;
        $i0 = virtualinvoke $r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i0, i1);
        if $i0 == 0 goto label9;

        $f0 = (float) $i0;
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setElevation(float)>($f0);

     label9:
        virtualinvoke $r2.<android.content.res.TypedArray: void recycle()>();
        return;

     label10:
        $i0 = (int) 0;
        goto label3;

     label11:
        $z0 = 0;
        goto label4;

     label12:
        $z3 = 0;
        goto label7;
    }

    private void setHasEmbeddedTabs(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0, $z1, $z3;
        int $i0, $i1;
        android.support.v7.internal.widget.DecorToolbar $r1;
        android.support.v7.internal.widget.ActionBarContainer $r2;
        android.support.v7.internal.widget.ScrollingTabContainerView $r3;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r4;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $z1 = 1;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs> = $z0;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;
        if $z0 != 0 goto label5;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)>(null);
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarContainer: void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView)>($r3);

     label0:
        $i0 = virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: int getNavigationMode()>();
        if $i0 != 2 goto label6;

        $z0 = 1;

     label1:
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        if $r3 == null goto label2;

        if $z0 == 0 goto label7;

        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        $i1 = (int) 0;
        virtualinvoke $r3.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>($i1);
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        if $r4 == null goto label2;

        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r4);

     label2:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $z3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;
        if $z3 != 0 goto label8;

        if $z0 == 0 goto label8;

        $z3 = 1;

     label3:
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setCollapsible(boolean)>($z3);
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        $z3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;
        if $z3 != 0 goto label9;

        if $z0 == 0 goto label9;

     label4:
        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>($z1);
        return;

     label5:
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarContainer: void setTabContainer(android.support.v7.internal.widget.ScrollingTabContainerView)>(null);
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setEmbeddedTabView(android.support.v7.internal.widget.ScrollingTabContainerView)>($r3);
        goto label0;

     label6:
        $z0 = 0;
        goto label1;

     label7:
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        virtualinvoke $r3.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);
        goto label2;

     label8:
        $z3 = 0;
        goto label3;

     label9:
        $z1 = 0;
        goto label4;
    }

    private void showForActionMode()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode>;
        if $z0 != 0 goto label1;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode> = 1;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>(1);

     label0:
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label1:
        return;
    }

    private void updateVisibility(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0, $z1, $z2, $z3;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $z1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;
        $z2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;
        $z3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowingForMode>;
        $z1 = staticinvoke <android.support.v7.internal.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)>($z1, $z2, $z3);
        if $z1 == 0 goto label1;

        $z3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing>;
        if $z3 != 0 goto label0;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing> = 1;
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void doShow(boolean)>($z0);

     label0:
        return;

     label1:
        $z3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing>;
        if $z3 == 0 goto label0;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing> = 0;
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void doHide(boolean)>($z0);
        goto label0;
    }

    public void addOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.app.ActionBar$OnMenuVisibilityListener $r1;
        java.util.ArrayList $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.app.ActionBar$OnMenuVisibilityListener;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;
        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);
        return;
    }

    public void addTab(android.support.v7.app.ActionBar$Tab)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.app.ActionBar$Tab $r1;
        java.util.ArrayList $r2;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void addTab(android.support.v7.app.ActionBar$Tab,boolean)>($r1, $z0);
        return;
    }

    public void addTab(android.support.v7.app.ActionBar$Tab, int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.app.ActionBar$Tab $r1;
        int $i0;
        java.util.ArrayList $r2;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;
        $i0 := @parameter1: int;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void addTab(android.support.v7.app.ActionBar$Tab,int,boolean)>($r1, $i0, $z0);
        return;
    }

    public void addTab(android.support.v7.app.ActionBar$Tab, int, boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.app.ActionBar$Tab $r1;
        int $i0;
        boolean $z0;
        android.support.v7.internal.widget.ScrollingTabContainerView $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;
        $i0 := @parameter1: int;
        $z0 := @parameter2: boolean;
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void ensureTabsExist()>();
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        virtualinvoke $r2.<android.support.v7.internal.widget.ScrollingTabContainerView: void addTab(android.support.v7.app.ActionBar$Tab,int,boolean)>($r1, $i0, $z0);
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void configureTab(android.support.v7.app.ActionBar$Tab,int)>($r1, $i0);
        if $z0 == 0 goto label0;

        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>($r1);

     label0:
        return;
    }

    public void addTab(android.support.v7.app.ActionBar$Tab, boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.app.ActionBar$Tab $r1;
        boolean $z0;
        android.support.v7.internal.widget.ScrollingTabContainerView $r2;
        int $i0;
        java.util.ArrayList $r3;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;
        $z0 := @parameter1: boolean;
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void ensureTabsExist()>();
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        virtualinvoke $r2.<android.support.v7.internal.widget.ScrollingTabContainerView: void addTab(android.support.v7.app.ActionBar$Tab,boolean)>($r1, $z0);
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void configureTab(android.support.v7.app.ActionBar$Tab,int)>($r1, $i0);
        if $z0 == 0 goto label0;

        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>($r1);

     label0:
        return;
    }

    public void animateToMode(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0, $b2;
        android.support.v7.internal.widget.DecorToolbar $r1;
        android.support.v7.internal.widget.ActionBarContextView $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $b2 = 0;
        if $z0 == 0 goto label3;

        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void showForActionMode()>();

     label0:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        if $z0 == 0 goto label4;

        $b0 = 8;

     label1:
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void animateToVisibility(int)>($b0);
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;
        if $z0 == 0 goto label5;

     label2:
        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarContextView: void animateToVisibility(int)>($b2);
        return;

     label3:
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void hideForActionMode()>();
        goto label0;

     label4:
        $b0 = 0;
        goto label1;

     label5:
        $b2 = 8;
        goto label2;
    }

    public boolean collapseActionView()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $z0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: boolean hasExpandedActionView()>();
        if $z0 == 0 goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void collapseActionView()>();
        return 1;

     label0:
        return 0;
    }

    void completeDeferredDestroyActionMode()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.view.ActionMode$Callback $r1;
        android.support.v7.view.ActionMode $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback>;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode mDeferredDestroyActionMode>;
        interfaceinvoke $r1.<android.support.v7.view.ActionMode$Callback: void onDestroyActionMode(android.support.v7.view.ActionMode)>($r2);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode mDeferredDestroyActionMode> = null;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.view.ActionMode$Callback mDeferredModeDestroyCallback> = null;

     label0:
        return;
    }

    public void dispatchMenuVisibilityChanged(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;
        int $i0, $i1;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v7.app.ActionBar$OnMenuVisibilityListener $r3;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $z1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mLastMenuVisibility>;
        if $z0 != $z1 goto label1;

     label0:
        return;

     label1:
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mLastMenuVisibility> = $z0;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();
        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;
        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i1);
        $r3 = (android.support.v7.app.ActionBar$OnMenuVisibilityListener) $r2;
        interfaceinvoke $r3.<android.support.v7.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>($z0);
        $i1 = $i1 + 1;
        goto label2;
    }

    public void doHide(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0, $z2;
        android.support.v4.view.ViewPropertyAnimatorCompat $r1;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet $r2;
        float $f0, $f2;
        int[] $r3;
        int $i0;
        android.support.v7.internal.widget.ActionBarContainer $r4;
        android.support.v4.view.ViewPropertyAnimatorUpdateListener $r5;
        android.view.View $r6;
        android.content.Context $r7;
        android.view.animation.Interpolator $r8;
        android.support.v4.view.ViewPropertyAnimatorListener $r9;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label0:
        $i0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility>;
        if $i0 != 0 goto label6;

        $z2 = <android.support.v7.internal.app.WindowDecorActionBar: boolean ALLOW_SHOW_HIDE_ANIMATIONS>;
        if $z2 == 0 goto label6;

        $z2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;
        if $z2 != 0 goto label1;

        if $z0 == 0 goto label6;

     label1:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r4, 1.0F);
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContainer: void setTransitioning(boolean)>(1);
        $r2 = new android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;
        specialinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void <init>()>();
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        $i0 = virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContainer: int getHeight()>();
        $i0 = neg $i0;
        $f0 = (float) $i0;
        if $z0 == 0 goto label2;

        $r3 = newarray (int)[2];
        $r3[0] = 0;
        $r3[1] = 0;
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContainer: void getLocationInWindow(int[])>($r3);
        $i0 = (int) 1;
        $i0 = $r3[$i0];
        $f2 = (float) $i0;
        $f0 = $f0 - $f2;

     label2:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        $r1 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r4);
        $r1 = virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>($f0);
        $r5 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener>;
        virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener)>($r5);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r1);
        $z2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations>;
        if $z2 == 0 goto label3;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;
        if $r6 == null goto label3;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;
        $r1 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r6);
        $r1 = virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>($f0);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r1);

     label3:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        if $r4 == null goto label4;

        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        $i0 = virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContainer: int getVisibility()>();
        if $i0 != 0 goto label4;

        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r4, 1.0F);
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        $r1 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r4);
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        $i0 = virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContainer: int getHeight()>();
        $f2 = (float) $i0;
        $r1 = virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>($f2);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r1);

     label4:
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r8 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r7, 17432581);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)>($r8);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setDuration(long)>(250L);
        $r9 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mHideListener>;
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r9);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = $r2;
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void start()>();

     label5:
        return;

     label6:
        $r9 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mHideListener>;
        interfaceinvoke $r9.<android.support.v4.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)>(null);
        goto label5;
    }

    public void doShow(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;
        android.support.v4.view.ViewPropertyAnimatorCompat $r1;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet $r2;
        float $f0, $f2;
        int[] $r3;
        int $i2;
        android.support.v7.internal.widget.ActionBarContainer $r4, $r7;
        android.support.v4.view.ViewPropertyAnimatorUpdateListener $r5;
        android.view.View $r6;
        android.content.Context $r8;
        android.view.animation.Interpolator $r9;
        android.support.v4.view.ViewPropertyAnimatorListener $r10;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r11;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label0:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContainer: void setVisibility(int)>(0);
        $i2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility>;
        if $i2 != 0 goto label7;

        $z1 = <android.support.v7.internal.app.WindowDecorActionBar: boolean ALLOW_SHOW_HIDE_ANIMATIONS>;
        if $z1 == 0 goto label7;

        $z1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled>;
        if $z1 != 0 goto label1;

        if $z0 == 0 goto label7;

     label1:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r4, 0.0F);
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        $i2 = virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContainer: int getHeight()>();
        $i2 = neg $i2;
        $f0 = (float) $i2;
        if $z0 == 0 goto label2;

        $r3 = newarray (int)[2];
        $r3[0] = 0;
        $r3[1] = 0;
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarContainer: void getLocationInWindow(int[])>($r3);
        $i2 = $r3[1];
        $f2 = (float) $i2;
        $f0 = $f0 - $f2;

     label2:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r4, $f0);
        $r2 = new android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;
        specialinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void <init>()>();
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        $r1 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r4);
        $r1 = virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);
        $r5 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorUpdateListener mUpdateListener>;
        virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener)>($r5);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r1);
        $z1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations>;
        if $z1 == 0 goto label3;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;
        if $r6 == null goto label3;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r6, $f0);
        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;
        $r1 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r6);
        $r1 = virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r1);

     label3:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        if $r4 == null goto label4;

        $i2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode>;
        if $i2 != 1 goto label4;

        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        $i2 = virtualinvoke $r7.<android.support.v7.internal.widget.ActionBarContainer: int getHeight()>();
        $f2 = (float) $i2;
        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r4, $f2);
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        virtualinvoke $r7.<android.support.v7.internal.widget.ActionBarContainer: void setVisibility(int)>(0);
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        $r1 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r7);
        $r1 = virtualinvoke $r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat translationY(float)>(0.0F);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>($r1);

     label4:
        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r9 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>($r8, 17432582);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)>($r9);
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setDuration(long)>(250L);
        $r10 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mShowListener>;
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r10);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = $r2;
        virtualinvoke $r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void start()>();

     label5:
        $r11 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        if $r11 == null goto label6;

        $r11 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r11);

     label6:
        return;

     label7:
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r7, 1.0F);
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r7, 0.0F);
        $z1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations>;
        if $z1 == 0 goto label8;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;
        if $r6 == null goto label8;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.view.View mContentView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r6, 0.0F);

     label8:
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        if $r7 == null goto label9;

        $i2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode>;
        if $i2 != 1 goto label9;

        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r7, 1.0F);
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setTranslationY(android.view.View,float)>($r7, 0.0F);
        $r7 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        virtualinvoke $r7.<android.support.v7.internal.widget.ActionBarContainer: void setVisibility(int)>(0);

     label9:
        $r10 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v4.view.ViewPropertyAnimatorListener mShowListener>;
        interfaceinvoke $r10.<android.support.v4.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)>(null);
        goto label5;
    }

    public void enableContentAnimations(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mContentAnimations> = $z0;
        return;
    }

    public android.view.View getCustomView()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        android.view.View $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $r2 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: android.view.View getCustomView()>();
        return $r2;
    }

    public int getDisplayOptions()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        int $i0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getDisplayOptions()>();
        return $i0;
    }

    public float getElevation()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarContainer $r1;
        float $f0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        $f0 = staticinvoke <android.support.v4.view.ViewCompat: float getElevation(android.view.View)>($r1);
        return $f0;
    }

    public int getHeight()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarContainer $r1;
        int $i0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        $i0 = virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarContainer: int getHeight()>();
        return $i0;
    }

    public int getHideOffset()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;
        int $i0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        $i0 = virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>();
        return $i0;
    }

    public int getNavigationItemCount()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        int $i0;
        java.util.ArrayList $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getNavigationMode()>();
        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label0;
        };

     label0:
        return 0;

     label1:
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();
        return $i0;

     label2:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getDropdownItemCount()>();
        return $i0;
    }

    public int getNavigationMode()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        int $i0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getNavigationMode()>();
        return $i0;
    }

    public int getSelectedNavigationIndex()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        int $i0;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getNavigationMode()>();
        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label0;
        };

     label0:
        return -1;

     label1:
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        $i0 = virtualinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: int getPosition()>();
        return $i0;

     label2:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getDropdownSelectedPosition()>();
        return $i0;
    }

    public android.support.v7.app.ActionBar$Tab getSelectedTab()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        return $r1;
    }

    public java.lang.CharSequence getSubtitle()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $r2 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: java.lang.CharSequence getSubtitle()>();
        return $r2;
    }

    public android.support.v7.app.ActionBar$Tab getTabAt(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.support.v7.app.ActionBar$Tab $r3;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>($i0);
        $r3 = (android.support.v7.app.ActionBar$Tab) $r2;
        return $r3;
    }

    public int getTabCount()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        java.util.ArrayList $r1;
        int $i0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();
        return $i0;
    }

    public android.content.Context getThemedContext()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.content.res.Resources$Theme $r1;
        android.util.TypedValue $r2;
        int $i0;
        android.content.Context $r3;
        android.view.ContextThemeWrapper $r4;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mThemedContext>;
        if $r3 != null goto label0;

        $r2 = new android.util.TypedValue;
        specialinvoke $r2.<android.util.TypedValue: void <init>()>();
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r1 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources$Theme getTheme()>();
        $i0 = <android.support.v7.appcompat.R$attr: int actionBarWidgetTheme>;
        virtualinvoke $r1.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i0, $r2, 1);
        $i0 = $r2.<android.util.TypedValue: int resourceId>;
        if $i0 == 0 goto label1;

        $r4 = new android.view.ContextThemeWrapper;
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        specialinvoke $r4.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r3, $i0);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mThemedContext> = $r4;

     label0:
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mThemedContext>;
        return $r3;

     label1:
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mThemedContext> = $r3;
        goto label0;
    }

    android.support.v7.internal.widget.TintManager getTintManager()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.TintManager $r1;
        android.content.Context $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.TintManager mTintManager>;
        if $r1 != null goto label0;

        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r1 = staticinvoke <android.support.v7.internal.widget.TintManager: android.support.v7.internal.widget.TintManager get(android.content.Context)>($r2);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.TintManager mTintManager> = $r1;

     label0:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.TintManager mTintManager>;
        return $r1;
    }

    public java.lang.CharSequence getTitle()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        java.lang.CharSequence $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $r2 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: java.lang.CharSequence getTitle()>();
        return $r2;
    }

    public boolean hasIcon()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $z0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: boolean hasIcon()>();
        return $z0;
    }

    public boolean hasLogo()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $z0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: boolean hasLogo()>();
        return $z0;
    }

    public void hide()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;
        if $z0 != 0 goto label0;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenByApp> = 1;
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label0:
        return;
    }

    public void hideForSystem()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;
        if $z0 != 0 goto label0;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem> = 1;
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label0:
        return;
    }

    public boolean isHideOnContentScrollEnabled()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        $z0 = virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: boolean isHideOnContentScrollEnabled()>();
        return $z0;
    }

    public boolean isShowing()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 = virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: int getHeight()>();
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mNowShowing>;
        if $z0 == 0 goto label1;

        if $i0 == 0 goto label0;

        $i1 = virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: int getHideOffset()>();
        if $i1 >= $i0 goto label1;

     label0:
        return 1;

     label1:
        return 0;
    }

    public boolean isTitleTruncated()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.widget.DecorToolbar $r1;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $z0 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: boolean isTitleTruncated()>();
        if $z0 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public android.support.v7.app.ActionBar$Tab newTab()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = new android.support.v7.internal.app.WindowDecorActionBar$TabImpl;
        specialinvoke $r1.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: void <init>(android.support.v7.internal.app.WindowDecorActionBar)>($r0);
        return $r1;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.content.res.Configuration $r1;
        android.content.Context $r2;
        android.support.v7.internal.view.ActionBarPolicy $r3;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.content.res.Configuration;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r3 = staticinvoke <android.support.v7.internal.view.ActionBarPolicy: android.support.v7.internal.view.ActionBarPolicy get(android.content.Context)>($r2);
        $z0 = virtualinvoke $r3.<android.support.v7.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>();
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)>($z0);
        return;
    }

    public void onContentScrollStarted()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;
        virtualinvoke $r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void cancel()>();
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim> = null;

     label0:
        return;
    }

    public void onContentScrollStopped()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        return;
    }

    public void onWindowVisibilityChanged(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mCurWindowVisibility> = $i0;
        return;
    }

    public void removeAllTabs()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void cleanupTabs()>();
        return;
    }

    public void removeOnMenuVisibilityListener(android.support.v7.app.ActionBar$OnMenuVisibilityListener)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.app.ActionBar$OnMenuVisibilityListener $r1;
        java.util.ArrayList $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.app.ActionBar$OnMenuVisibilityListener;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners>;
        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);
        return;
    }

    public void removeTab(android.support.v7.app.ActionBar$Tab)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.app.ActionBar$Tab $r1;
        int $i0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;
        $i0 = virtualinvoke $r1.<android.support.v7.app.ActionBar$Tab: int getPosition()>();
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void removeTabAt(int)>($i0);
        return;
    }

    public void removeTabAt(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r1;
        android.support.v7.internal.widget.ScrollingTabContainerView $r2;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r3;
        java.util.ArrayList $r4;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        if $r2 != null goto label1;

     label0:
        return;

     label1:
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        if $r3 == null goto label5;

        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        $i3 = virtualinvoke $r3.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: int getPosition()>();

     label2:
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        virtualinvoke $r2.<android.support.v7.internal.widget.ScrollingTabContainerView: void removeTabAt(int)>($i0);
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $r1 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object remove(int)>($i0);
        $r3 = (android.support.v7.internal.app.WindowDecorActionBar$TabImpl) $r1;
        if $r3 == null goto label3;

        virtualinvoke $r3.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>(-1);

     label3:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();
        $i1 = $i0;

     label4:
        if $i1 >= $i2 goto label6;

        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $r1 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i1);
        $r3 = (android.support.v7.internal.app.WindowDecorActionBar$TabImpl) $r1;
        virtualinvoke $r3.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: void setPosition(int)>($i1);
        $i1 = $i1 + 1;
        goto label4;

     label5:
        $i3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition>;
        goto label2;

     label6:
        if $i3 != $i0 goto label0;

        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();
        if $z0 == 0 goto label8;

        $r3 = null;

     label7:
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>($r3);
        goto label0;

     label8:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $i3 = $i0 + -1;
        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i3);
        $r1 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i3);
        $r3 = (android.support.v7.internal.app.WindowDecorActionBar$TabImpl) $r1;
        goto label7;
    }

    public void selectTab(android.support.v7.app.ActionBar$Tab)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.app.ActionBar$Tab $r1;
        android.support.v4.app.FragmentTransaction $r2;
        int $i0, $i1;
        android.app.Activity $r3;
        boolean $z0;
        android.support.v7.internal.widget.DecorToolbar $r4;
        android.view.ViewGroup $r5;
        android.support.v4.app.FragmentActivity $r6;
        android.support.v4.app.FragmentManager $r7;
        android.support.v7.internal.app.WindowDecorActionBar$TabImpl $r8;
        android.support.v7.app.ActionBar$TabListener $r9;
        android.support.v7.internal.widget.ScrollingTabContainerView $r10;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.app.ActionBar$Tab;
        $i1 = -1;
        $i0 = virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: int getNavigationMode()>();
        if $i0 == 2 goto label3;

        if $r1 == null goto label2;

        $i1 = virtualinvoke $r1.<android.support.v7.app.ActionBar$Tab: int getPosition()>();

     label0:
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = $i1;

     label1:
        return;

     label2:
        $i1 = -1;
        goto label0;

     label3:
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.app.Activity mActivity>;
        $z0 = $r3 instanceof android.support.v4.app.FragmentActivity;
        if $z0 == 0 goto label6;

        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $r5 = interfaceinvoke $r4.<android.support.v7.internal.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();
        $z0 = virtualinvoke $r5.<android.view.ViewGroup: boolean isInEditMode()>();
        if $z0 != 0 goto label6;

        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.app.Activity mActivity>;
        $r6 = (android.support.v4.app.FragmentActivity) $r3;
        $r7 = virtualinvoke $r6.<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()>();
        $r2 = virtualinvoke $r7.<android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()>();
        $r2 = virtualinvoke $r2.<android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction disallowAddToBackStack()>();

     label4:
        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        if $r8 != $r1 goto label7;

        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        if $r8 == null goto label5;

        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        $r9 = virtualinvoke $r8.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: android.support.v7.app.ActionBar$TabListener getCallback()>();
        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        interfaceinvoke $r9.<android.support.v7.app.ActionBar$TabListener: void onTabReselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>($r8, $r2);
        $r10 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        $i1 = virtualinvoke $r1.<android.support.v7.app.ActionBar$Tab: int getPosition()>();
        virtualinvoke $r10.<android.support.v7.internal.widget.ScrollingTabContainerView: void animateToTab(int)>($i1);

     label5:
        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<android.support.v4.app.FragmentTransaction: boolean isEmpty()>();
        if $z0 != 0 goto label1;

        virtualinvoke $r2.<android.support.v4.app.FragmentTransaction: int commit()>();
        goto label1;

     label6:
        $r2 = null;
        goto label4;

     label7:
        $r10 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        if $r1 == null goto label8;

        $i1 = virtualinvoke $r1.<android.support.v7.app.ActionBar$Tab: int getPosition()>();

     label8:
        virtualinvoke $r10.<android.support.v7.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>($i1);
        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        if $r8 == null goto label9;

        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        $r9 = virtualinvoke $r8.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: android.support.v7.app.ActionBar$TabListener getCallback()>();
        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        interfaceinvoke $r9.<android.support.v7.app.ActionBar$TabListener: void onTabUnselected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>($r8, $r2);

     label9:
        $r8 = (android.support.v7.internal.app.WindowDecorActionBar$TabImpl) $r1;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab> = $r8;
        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        if $r8 == null goto label5;

        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        $r9 = virtualinvoke $r8.<android.support.v7.internal.app.WindowDecorActionBar$TabImpl: android.support.v7.app.ActionBar$TabListener getCallback()>();
        $r8 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$TabImpl mSelectedTab>;
        interfaceinvoke $r9.<android.support.v7.app.ActionBar$TabListener: void onTabSelected(android.support.v7.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>($r8, $r2);
        goto label5;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        android.support.v7.internal.widget.ActionBarContainer $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>($r1);
        return;
    }

    public void setCustomView(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;
        android.content.Context $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;
        android.view.LayoutInflater $r3;
        android.view.ViewGroup $r4;
        android.view.View $r5;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r1 = virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context getThemedContext()>();
        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r1);
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $r4 = interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>();
        $r5 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>($i0, $r4, 0);
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setCustomView(android.view.View)>($r5);
        return;
    }

    public void setCustomView(android.view.View)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.view.View $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.view.View;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setCustomView(android.view.View)>($r1);
        return;
    }

    public void setCustomView(android.view.View, android.support.v7.app.ActionBar$LayoutParams)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.view.View $r1;
        android.support.v7.app.ActionBar$LayoutParams $r2;
        android.support.v7.internal.widget.DecorToolbar $r3;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.view.View;
        $r2 := @parameter1: android.support.v7.app.ActionBar$LayoutParams;
        virtualinvoke $r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>($r2);
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r3.<android.support.v7.internal.widget.DecorToolbar: void setCustomView(android.view.View)>($r1);
        return;
    }

    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $z1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet>;
        if $z1 != 0 goto label0;

        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)>($z0);

     label0:
        return;
    }

    public void setDisplayHomeAsUpEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        if $z0 == 0 goto label1;

        $b0 = 4;

     label0:
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 4);
        return;

     label1:
        $b0 = 0;
        goto label0;
    }

    public void setDisplayOptions(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0, $i1;
        android.support.v7.internal.widget.DecorToolbar $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $i1 = $i0 & 4;
        if $i1 == 0 goto label0;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label0:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setDisplayOptions(int)>($i0);
        return;
    }

    public void setDisplayOptions(int, int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0, $i1, $i2, $i3;
        android.support.v7.internal.widget.DecorToolbar $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i2 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getDisplayOptions()>();
        $i3 = $i1 & 4;
        if $i3 == 0 goto label0;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet> = 1;

     label0:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i0 = $i0 & $i1;
        $i1 = $i1 ^ -1;
        $i3 = $i1 & $i2;
        $i3 = $i0 | $i3;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setDisplayOptions(int)>($i3);
        return;
    }

    public void setDisplayShowCustomEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        if $z0 == 0 goto label1;

        $b0 = 16;

     label0:
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 16);
        return;

     label1:
        $b0 = 0;
        goto label0;
    }

    public void setDisplayShowHomeEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        if $z0 == 0 goto label1;

        $b0 = 2;

     label0:
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 2);
        return;

     label1:
        $b0 = 0;
        goto label0;
    }

    public void setDisplayShowTitleEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        if $z0 == 0 goto label1;

        $b0 = 8;

     label0:
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 8);
        return;

     label1:
        $b0 = 0;
        goto label0;
    }

    public void setDisplayUseLogoEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        byte $b0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        if $z0 == 0 goto label1;

        $b0 = 1;

     label0:
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>($b0, 1);
        return;

     label1:
        $b0 = 0;
        goto label0;
    }

    public void setElevation(float)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        float $f0;
        android.support.v7.internal.widget.ActionBarContainer $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $f0 := @parameter0: float;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setElevation(android.view.View,float)>($r1, $f0);
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        staticinvoke <android.support.v4.view.ViewCompat: void setElevation(android.view.View,float)>($r1, $f0);

     label0:
        return;
    }

    public void setHideOffset(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;
        boolean $z0;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        if $i0 == 0 goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        $z0 = virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>();
        if $z0 != 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to set a non-zero hide offset");
        throw $r3;

     label0:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>($i0);
        return;
    }

    public void setHideOnContentScrollEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0, $z1;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r1;
        java.lang.IllegalStateException $r3;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        if $z0 == 0 goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        $z1 = virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>();
        if $z1 != 0 goto label0;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to enable hide on content scroll");
        throw $r3;

     label0:
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHideOnContentScroll> = $z0;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        virtualinvoke $r1.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>($z0);
        return;
    }

    public void setHomeActionContentDescription(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setNavigationContentDescription(int)>($i0);
        return;
    }

    public void setHomeActionContentDescription(java.lang.CharSequence)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: java.lang.CharSequence;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)>($r1);
        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setNavigationIcon(int)>($i0);
        return;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>($r1);
        return;
    }

    public void setHomeButtonEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setHomeButtonEnabled(boolean)>($z0);
        return;
    }

    public void setIcon(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setIcon(int)>($i0);
        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>($r1);
        return;
    }

    public void setListNavigationCallbacks(android.widget.SpinnerAdapter, android.support.v7.app.ActionBar$OnNavigationListener)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.widget.SpinnerAdapter $r1;
        android.support.v7.app.ActionBar$OnNavigationListener $r2;
        android.support.v7.internal.widget.DecorToolbar $r3;
        android.support.v7.internal.app.NavItemSelectedListener $r4;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.widget.SpinnerAdapter;
        $r2 := @parameter1: android.support.v7.app.ActionBar$OnNavigationListener;
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $r4 = new android.support.v7.internal.app.NavItemSelectedListener;
        specialinvoke $r4.<android.support.v7.internal.app.NavItemSelectedListener: void <init>(android.support.v7.app.ActionBar$OnNavigationListener)>($r2);
        interfaceinvoke $r3.<android.support.v7.internal.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.support.v7.internal.widget.AdapterViewCompat$OnItemSelectedListener)>($r1, $r4);
        return;
    }

    public void setLogo(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;
        android.support.v7.internal.widget.DecorToolbar $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setLogo(int)>($i0);
        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)>($r1);
        return;
    }

    public void setNavigationMode(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0, $i1, $i4;
        android.support.v7.internal.widget.DecorToolbar $r1;
        boolean $z0, $z2;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r2;
        android.support.v7.internal.widget.ScrollingTabContainerView $r3;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $z0 = 1;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i1 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getNavigationMode()>();
        lookupswitch($i1)
        {
            case 2: goto label5;
            default: goto label0;
        };

     label0:
        if $i1 == $i0 goto label1;

        $z2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;
        if $z2 != 0 goto label1;

        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        if $r2 == null goto label1;

        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r2);

     label1:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setNavigationMode(int)>($i0);
        lookupswitch($i0)
        {
            case 2: goto label6;
            default: goto label2;
        };

     label2:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        if $i0 != 2 goto label7;

        $z2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;
        if $z2 != 0 goto label7;

        $z2 = 1;

     label3:
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setCollapsible(boolean)>($z2);
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        if $i0 != 2 goto label8;

        $z2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHasEmbeddedTabs>;
        if $z2 != 0 goto label8;

     label4:
        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>($z0);
        return;

     label5:
        $i4 = virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: int getSelectedNavigationIndex()>();
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = $i4;
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>(null);
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        virtualinvoke $r3.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8);
        goto label0;

     label6:
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void ensureTabsExist()>();
        $r3 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ScrollingTabContainerView mTabScrollView>;
        $i4 = (int) 0;
        virtualinvoke $r3.<android.support.v7.internal.widget.ScrollingTabContainerView: void setVisibility(int)>($i4);
        $i4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition>;
        if $i4 == -1 goto label2;

        $i4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition>;
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setSelectedNavigationItem(int)>($i4);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mSavedTabPosition> = -1;
        goto label2;

     label7:
        $z2 = 0;
        goto label3;

     label8:
        $z0 = 0;
        goto label4;
    }

    public void setSelectedNavigationItem(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0, $i1;
        android.support.v7.internal.widget.DecorToolbar $r1;
        java.lang.IllegalStateException $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        android.support.v7.app.ActionBar$Tab $r6;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        $i1 = interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: int getNavigationMode()>();
        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label1;
            default: goto label0;
        };

     label0:
        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setSelectedNavigationIndex not valid for current navigation mode");
        throw $r3;

     label1:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: java.util.ArrayList mTabs>;
        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);
        $r6 = (android.support.v7.app.ActionBar$Tab) $r5;
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void selectTab(android.support.v7.app.ActionBar$Tab)>($r6);

     label2:
        return;

     label3:
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r1.<android.support.v7.internal.widget.DecorToolbar: void setDropdownSelectedPosition(int)>($i0);
        goto label2;
    }

    public void setShowHideAnimationEnabled(boolean)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet $r1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 := @parameter0: boolean;
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled> = $z0;
        if $z0 != 0 goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;
        if $r1 == null goto label0;

        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim>;
        virtualinvoke $r1.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void cancel()>();

     label0:
        return;
    }

    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        android.support.v7.internal.widget.ActionBarContainer $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>($r1);

     label0:
        return;
    }

    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.graphics.drawable.Drawable $r1;
        android.support.v7.internal.widget.ActionBarContainer $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.graphics.drawable.Drawable;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mContainerView>;
        virtualinvoke $r2.<android.support.v7.internal.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>($r1);
        return;
    }

    public void setSubtitle(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;
        android.content.Context $r1;
        java.lang.String $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setSubtitle(java.lang.CharSequence)>($r2);
        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: java.lang.CharSequence;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)>($r1);
        return;
    }

    public void setTitle(int)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        int $i0;
        android.content.Context $r1;
        java.lang.String $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $i0 := @parameter0: int;
        $r1 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.content.Context mContext>;
        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)>($r2);
        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: java.lang.CharSequence;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setTitle(java.lang.CharSequence)>($r1);
        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        java.lang.CharSequence $r1;
        android.support.v7.internal.widget.DecorToolbar $r2;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: java.lang.CharSequence;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.DecorToolbar mDecorToolbar>;
        interfaceinvoke $r2.<android.support.v7.internal.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>($r1);
        return;
    }

    public void show()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenByApp>;
        if $z0 == 0 goto label0;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenByApp> = 0;
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(0);

     label0:
        return;
    }

    public void showForSystem()
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        boolean $z0;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $z0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem>;
        if $z0 == 0 goto label0;

        $r0.<android.support.v7.internal.app.WindowDecorActionBar: boolean mHiddenBySystem> = 0;
        specialinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void updateVisibility(boolean)>(1);

     label0:
        return;
    }

    public android.support.v7.view.ActionMode startActionMode(android.support.v7.view.ActionMode$Callback)
    {
        android.support.v7.internal.app.WindowDecorActionBar $r0;
        android.support.v7.view.ActionMode$Callback $r1;
        android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl $r2;
        android.content.Context $r3;
        android.support.v7.internal.widget.ActionBarOverlayLayout $r4;
        android.support.v7.internal.widget.ActionBarContextView $r5;
        boolean $z2;
        android.support.v7.internal.widget.ActionBarContainer $r6;
        int $i0, i1;

        $r0 := @this: android.support.v7.internal.app.WindowDecorActionBar;
        $r1 := @parameter0: android.support.v7.view.ActionMode$Callback;
        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode>;
        if $r2 == null goto label0;

        $r2 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode>;
        virtualinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl: void finish()>();

     label0:
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        virtualinvoke $r4.<android.support.v7.internal.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>(0);
        $r5 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;
        virtualinvoke $r5.<android.support.v7.internal.widget.ActionBarContextView: void killMode()>();
        $r2 = new android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl;
        $r5 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;
        $r3 = virtualinvoke $r5.<android.support.v7.internal.widget.ActionBarContextView: android.content.Context getContext()>();
        specialinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl: void <init>(android.support.v7.internal.app.WindowDecorActionBar,android.content.Context,android.support.v7.view.ActionMode$Callback)>($r0, $r3, $r1);
        $z2 = virtualinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()>();
        if $z2 == 0 goto label2;

        virtualinvoke $r2.<android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl: void invalidate()>();
        $r5 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;
        virtualinvoke $r5.<android.support.v7.internal.widget.ActionBarContextView: void initForMode(android.support.v7.view.ActionMode)>($r2);
        virtualinvoke $r0.<android.support.v7.internal.app.WindowDecorActionBar: void animateToMode(boolean)>(1);
        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        if $r6 == null goto label1;

        $i0 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: int mContextDisplayMode>;
        i1 = (int) 1;
        if $i0 != i1 goto label1;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        $i0 = virtualinvoke $r6.<android.support.v7.internal.widget.ActionBarContainer: int getVisibility()>();
        if $i0 == 0 goto label1;

        $r6 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContainer mSplitView>;
        i1 = (int) 0;
        virtualinvoke $r6.<android.support.v7.internal.widget.ActionBarContainer: void setVisibility(int)>(i1);
        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        if $r4 == null goto label1;

        $r4 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarOverlayLayout mOverlayLayout>;
        staticinvoke <android.support.v4.view.ViewCompat: void requestApplyInsets(android.view.View)>($r4);

     label1:
        $r5 = $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.widget.ActionBarContextView mContextView>;
        virtualinvoke $r5.<android.support.v7.internal.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);
        $r0.<android.support.v7.internal.app.WindowDecorActionBar: android.support.v7.internal.app.WindowDecorActionBar$ActionModeImpl mActionMode> = $r2;
        return $r2;

     label2:
        return null;
    }
}
